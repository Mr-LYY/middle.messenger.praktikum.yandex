{"mappings":"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","sources":["src/layout/less.js"],"sourcesContent":["/**\n * Less - Leaner CSS v4.1.2\n * http://lesscss.org\n * \n * Copyright (c) 2009-2021, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\n    function defaultOptions () {\n        return {\n            /* Inline Javascript - @plugin still allowed */\n            javascriptEnabled: false,\n            /* Outputs a makefile import dependency list to stdout. */\n            depends: false,\n            /* (DEPRECATED) Compress using less built-in compression.\n             * This does an okay job but does not utilise all the tricks of\n             * dedicated css compression. */\n            compress: false,\n            /* Runs the less parser and just reports errors without any output. */\n            lint: false,\n            /* Sets available include paths.\n             * If the file in an @import rule does not exist at that exact location,\n             * less will look for it at the location(s) passed to this option.\n             * You might use this for instance to specify a path to a library which\n             * you want to be referenced simply and relatively in the less files. */\n            paths: [],\n            /* color output in the terminal */\n            color: true,\n            /* The strictImports controls whether the compiler will allow an @import inside of either\n             * @media blocks or (a later addition) other selector blocks.\n             * See: https://github.com/less/less.js/issues/656 */\n            strictImports: false,\n            /* Allow Imports from Insecure HTTPS Hosts */\n            insecure: false,\n            /* Allows you to add a path to every generated import and url in your css.\n             * This does not affect less import statements that are processed, just ones\n             * that are left in the output css. */\n            rootpath: '',\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\n             * that references an image, exactly the same URL will be output in the css.\n             * This option allows you to re-write URL's in imported files so that the\n             * URL is always relative to the base imported file */\n            rewriteUrls: false,\n            /* How to process math\n             *   0 always           - eagerly try to solve all operations\n             *   1 parens-division  - require parens for division \"/\"\n             *   2 parens | strict  - require parens for all operations\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\n             */\n            math: 1,\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\n            strictUnits: false,\n            /* Effectively the declaration is put at the top of your base Less file,\n             * meaning it can be used but it also can be overridden if this variable\n             * is defined in the file. */\n            globalVars: null,\n            /* As opposed to the global variable option, this puts the declaration at the\n             * end of your base file, meaning it will override anything defined in your Less file. */\n            modifyVars: null,\n            /* This option allows you to specify a argument to go on to every URL.  */\n            urlArgs: ''\n        };\n    }\n\n    function extractId(href) {\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\n            .replace(/^\\//, '') // Remove root /\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\n    }\n    function addDataAttr(options, tag) {\n        for (var opt in tag.dataset) {\n            if (tag.dataset.hasOwnProperty(opt)) {\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\n                    options[opt] = tag.dataset[opt];\n                }\n                else {\n                    try {\n                        options[opt] = JSON.parse(tag.dataset[opt]);\n                    }\n                    catch (_) { }\n                }\n            }\n        }\n    }\n\n    var browser = {\n        createCSS: function (document, styles, sheet) {\n            // Strip the query-string\n            var href = sheet.href || '';\n            // If there is no title set, use the filename, minus the extension\n            var id = \"less:\" + (sheet.title || extractId(href));\n            // If this has already been inserted into the DOM, we may need to replace it\n            var oldStyleNode = document.getElementById(id);\n            var keepOldStyleNode = false;\n            // Create a new stylesheet node for insertion or (if necessary) replacement\n            var styleNode = document.createElement('style');\n            styleNode.setAttribute('type', 'text/css');\n            if (sheet.media) {\n                styleNode.setAttribute('media', sheet.media);\n            }\n            styleNode.id = id;\n            if (!styleNode.styleSheet) {\n                styleNode.appendChild(document.createTextNode(styles));\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\n            }\n            var head = document.getElementsByTagName('head')[0];\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\n            // to replace oldStyleNode with an updated stylesheet\n            if (oldStyleNode === null || keepOldStyleNode === false) {\n                var nextEl = sheet && sheet.nextSibling || null;\n                if (nextEl) {\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\n                }\n                else {\n                    head.appendChild(styleNode);\n                }\n            }\n            if (oldStyleNode && keepOldStyleNode === false) {\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\n            }\n            // For IE.\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n            if (styleNode.styleSheet) {\n                try {\n                    styleNode.styleSheet.cssText = styles;\n                }\n                catch (e) {\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\n                }\n            }\n        },\n        currentScript: function (window) {\n            var document = window.document;\n            return document.currentScript || (function () {\n                var scripts = document.getElementsByTagName('script');\n                return scripts[scripts.length - 1];\n            })();\n        }\n    };\n\n    var addDefaultOptions = (function (window, options) {\n        // use options from the current script tag data attribues\n        addDataAttr(options, browser.currentScript(window));\n        if (options.isFileProtocol === undefined) {\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n        }\n        // Load styles asynchronously (default: false)\n        //\n        // This is set to `false` by default, so that the body\n        // doesn't start loading before the stylesheets are parsed.\n        // Setting this to `true` can result in flickering.\n        //\n        options.async = options.async || false;\n        options.fileAsync = options.fileAsync || false;\n        // Interval between watch polls\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\n            window.location.hostname == '0.0.0.0' ||\n            window.location.hostname == 'localhost' ||\n            (window.location.port &&\n                window.location.port.length > 0) ||\n            options.isFileProtocol ? 'development'\n            : 'production');\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n        if (dumpLineNumbers) {\n            options.dumpLineNumbers = dumpLineNumbers[1];\n        }\n        if (options.useFileCache === undefined) {\n            options.useFileCache = true;\n        }\n        if (options.onReady === undefined) {\n            options.onReady = true;\n        }\n        if (options.relativeUrls) {\n            options.rewriteUrls = 'all';\n        }\n    });\n\n    var logger$1 = {\n        error: function (msg) {\n            this._fireEvent('error', msg);\n        },\n        warn: function (msg) {\n            this._fireEvent('warn', msg);\n        },\n        info: function (msg) {\n            this._fireEvent('info', msg);\n        },\n        debug: function (msg) {\n            this._fireEvent('debug', msg);\n        },\n        addListener: function (listener) {\n            this._listeners.push(listener);\n        },\n        removeListener: function (listener) {\n            for (var i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                    this._listeners.splice(i, 1);\n                    return;\n                }\n            }\n        },\n        _fireEvent: function (type, msg) {\n            for (var i = 0; i < this._listeners.length; i++) {\n                var logFunction = this._listeners[i][type];\n                if (logFunction) {\n                    logFunction(msg);\n                }\n            }\n        },\n        _listeners: []\n    };\n\n    /**\n     * @todo Document why this abstraction exists, and the relationship between\n     *       environment, file managers, and plugin manager\n     */\n    var Environment = /** @class */ (function () {\n        function Environment(externalEnvironment, fileManagers) {\n            this.fileManagers = fileManagers || [];\n            externalEnvironment = externalEnvironment || {};\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\n            var requiredFunctions = [];\n            var functions = requiredFunctions.concat(optionalFunctions);\n            for (var i = 0; i < functions.length; i++) {\n                var propName = functions[i];\n                var environmentFunc = externalEnvironment[propName];\n                if (environmentFunc) {\n                    this[propName] = environmentFunc.bind(externalEnvironment);\n                }\n                else if (i < requiredFunctions.length) {\n                    this.warn(\"missing required function in environment - \" + propName);\n                }\n            }\n        }\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\n            if (!filename) {\n                logger$1.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n            }\n            if (currentDirectory == null) {\n                logger$1.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n            }\n            var fileManagers = this.fileManagers;\n            if (options.pluginManager) {\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n            }\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\n                var fileManager = fileManagers[i];\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n                    return fileManager;\n                }\n            }\n            return null;\n        };\n        Environment.prototype.addFileManager = function (fileManager) {\n            this.fileManagers.push(fileManager);\n        };\n        Environment.prototype.clearFileManagers = function () {\n            this.fileManagers = [];\n        };\n        return Environment;\n    }());\n\n    var colors = {\n        'aliceblue': '#f0f8ff',\n        'antiquewhite': '#faebd7',\n        'aqua': '#00ffff',\n        'aquamarine': '#7fffd4',\n        'azure': '#f0ffff',\n        'beige': '#f5f5dc',\n        'bisque': '#ffe4c4',\n        'black': '#000000',\n        'blanchedalmond': '#ffebcd',\n        'blue': '#0000ff',\n        'blueviolet': '#8a2be2',\n        'brown': '#a52a2a',\n        'burlywood': '#deb887',\n        'cadetblue': '#5f9ea0',\n        'chartreuse': '#7fff00',\n        'chocolate': '#d2691e',\n        'coral': '#ff7f50',\n        'cornflowerblue': '#6495ed',\n        'cornsilk': '#fff8dc',\n        'crimson': '#dc143c',\n        'cyan': '#00ffff',\n        'darkblue': '#00008b',\n        'darkcyan': '#008b8b',\n        'darkgoldenrod': '#b8860b',\n        'darkgray': '#a9a9a9',\n        'darkgrey': '#a9a9a9',\n        'darkgreen': '#006400',\n        'darkkhaki': '#bdb76b',\n        'darkmagenta': '#8b008b',\n        'darkolivegreen': '#556b2f',\n        'darkorange': '#ff8c00',\n        'darkorchid': '#9932cc',\n        'darkred': '#8b0000',\n        'darksalmon': '#e9967a',\n        'darkseagreen': '#8fbc8f',\n        'darkslateblue': '#483d8b',\n        'darkslategray': '#2f4f4f',\n        'darkslategrey': '#2f4f4f',\n        'darkturquoise': '#00ced1',\n        'darkviolet': '#9400d3',\n        'deeppink': '#ff1493',\n        'deepskyblue': '#00bfff',\n        'dimgray': '#696969',\n        'dimgrey': '#696969',\n        'dodgerblue': '#1e90ff',\n        'firebrick': '#b22222',\n        'floralwhite': '#fffaf0',\n        'forestgreen': '#228b22',\n        'fuchsia': '#ff00ff',\n        'gainsboro': '#dcdcdc',\n        'ghostwhite': '#f8f8ff',\n        'gold': '#ffd700',\n        'goldenrod': '#daa520',\n        'gray': '#808080',\n        'grey': '#808080',\n        'green': '#008000',\n        'greenyellow': '#adff2f',\n        'honeydew': '#f0fff0',\n        'hotpink': '#ff69b4',\n        'indianred': '#cd5c5c',\n        'indigo': '#4b0082',\n        'ivory': '#fffff0',\n        'khaki': '#f0e68c',\n        'lavender': '#e6e6fa',\n        'lavenderblush': '#fff0f5',\n        'lawngreen': '#7cfc00',\n        'lemonchiffon': '#fffacd',\n        'lightblue': '#add8e6',\n        'lightcoral': '#f08080',\n        'lightcyan': '#e0ffff',\n        'lightgoldenrodyellow': '#fafad2',\n        'lightgray': '#d3d3d3',\n        'lightgrey': '#d3d3d3',\n        'lightgreen': '#90ee90',\n        'lightpink': '#ffb6c1',\n        'lightsalmon': '#ffa07a',\n        'lightseagreen': '#20b2aa',\n        'lightskyblue': '#87cefa',\n        'lightslategray': '#778899',\n        'lightslategrey': '#778899',\n        'lightsteelblue': '#b0c4de',\n        'lightyellow': '#ffffe0',\n        'lime': '#00ff00',\n        'limegreen': '#32cd32',\n        'linen': '#faf0e6',\n        'magenta': '#ff00ff',\n        'maroon': '#800000',\n        'mediumaquamarine': '#66cdaa',\n        'mediumblue': '#0000cd',\n        'mediumorchid': '#ba55d3',\n        'mediumpurple': '#9370d8',\n        'mediumseagreen': '#3cb371',\n        'mediumslateblue': '#7b68ee',\n        'mediumspringgreen': '#00fa9a',\n        'mediumturquoise': '#48d1cc',\n        'mediumvioletred': '#c71585',\n        'midnightblue': '#191970',\n        'mintcream': '#f5fffa',\n        'mistyrose': '#ffe4e1',\n        'moccasin': '#ffe4b5',\n        'navajowhite': '#ffdead',\n        'navy': '#000080',\n        'oldlace': '#fdf5e6',\n        'olive': '#808000',\n        'olivedrab': '#6b8e23',\n        'orange': '#ffa500',\n        'orangered': '#ff4500',\n        'orchid': '#da70d6',\n        'palegoldenrod': '#eee8aa',\n        'palegreen': '#98fb98',\n        'paleturquoise': '#afeeee',\n        'palevioletred': '#d87093',\n        'papayawhip': '#ffefd5',\n        'peachpuff': '#ffdab9',\n        'peru': '#cd853f',\n        'pink': '#ffc0cb',\n        'plum': '#dda0dd',\n        'powderblue': '#b0e0e6',\n        'purple': '#800080',\n        'rebeccapurple': '#663399',\n        'red': '#ff0000',\n        'rosybrown': '#bc8f8f',\n        'royalblue': '#4169e1',\n        'saddlebrown': '#8b4513',\n        'salmon': '#fa8072',\n        'sandybrown': '#f4a460',\n        'seagreen': '#2e8b57',\n        'seashell': '#fff5ee',\n        'sienna': '#a0522d',\n        'silver': '#c0c0c0',\n        'skyblue': '#87ceeb',\n        'slateblue': '#6a5acd',\n        'slategray': '#708090',\n        'slategrey': '#708090',\n        'snow': '#fffafa',\n        'springgreen': '#00ff7f',\n        'steelblue': '#4682b4',\n        'tan': '#d2b48c',\n        'teal': '#008080',\n        'thistle': '#d8bfd8',\n        'tomato': '#ff6347',\n        'turquoise': '#40e0d0',\n        'violet': '#ee82ee',\n        'wheat': '#f5deb3',\n        'white': '#ffffff',\n        'whitesmoke': '#f5f5f5',\n        'yellow': '#ffff00',\n        'yellowgreen': '#9acd32'\n    };\n\n    var unitConversions = {\n        length: {\n            'm': 1,\n            'cm': 0.01,\n            'mm': 0.001,\n            'in': 0.0254,\n            'px': 0.0254 / 96,\n            'pt': 0.0254 / 72,\n            'pc': 0.0254 / 72 * 12\n        },\n        duration: {\n            's': 1,\n            'ms': 0.001\n        },\n        angle: {\n            'rad': 1 / (2 * Math.PI),\n            'deg': 1 / 360,\n            'grad': 1 / 400,\n            'turn': 1\n        }\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\n     * The reason why Node is a class and other nodes simply do not extend\n     * from Node (since we're transpiling) is due to this issue:\n     *\n     * https://github.com/less/less.js/issues/3434\n     */\n    var Node = /** @class */ (function () {\n        function Node() {\n            this.parent = null;\n            this.visibilityBlocks = undefined;\n            this.nodeVisible = undefined;\n            this.rootNode = null;\n            this.parsed = null;\n        }\n        Object.defineProperty(Node.prototype, \"currentFileInfo\", {\n            get: function () {\n                return this.fileInfo();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Node.prototype, \"index\", {\n            get: function () {\n                return this.getIndex();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Node.prototype.setParent = function (nodes, parent) {\n            function set(node) {\n                if (node && node instanceof Node) {\n                    node.parent = parent;\n                }\n            }\n            if (Array.isArray(nodes)) {\n                nodes.forEach(set);\n            }\n            else {\n                set(nodes);\n            }\n        };\n        Node.prototype.getIndex = function () {\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\n        };\n        Node.prototype.fileInfo = function () {\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\n        };\n        Node.prototype.isRulesetLike = function () { return false; };\n        Node.prototype.toCSS = function (context) {\n            var strs = [];\n            this.genCSS(context, {\n                add: function (chunk, fileInfo, index) {\n                    strs.push(chunk);\n                },\n                isEmpty: function () {\n                    return strs.length === 0;\n                }\n            });\n            return strs.join('');\n        };\n        Node.prototype.genCSS = function (context, output) {\n            output.add(this.value);\n        };\n        Node.prototype.accept = function (visitor) {\n            this.value = visitor.visit(this.value);\n        };\n        Node.prototype.eval = function () { return this; };\n        Node.prototype._operate = function (context, op, a, b) {\n            switch (op) {\n                case '+': return a + b;\n                case '-': return a - b;\n                case '*': return a * b;\n                case '/': return a / b;\n            }\n        };\n        Node.prototype.fround = function (context, value) {\n            var precision = context && context.numPrecision;\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\n        };\n        Node.compare = function (a, b) {\n            /* returns:\n             -1: a < b\n             0: a = b\n             1: a > b\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n            if ((a.compare) &&\n                // for \"symmetric results\" force toCSS-based comparison\n                // of Quoted or Anonymous if either value is one of those\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n                return a.compare(b);\n            }\n            else if (b.compare) {\n                return -b.compare(a);\n            }\n            else if (a.type !== b.type) {\n                return undefined;\n            }\n            a = a.value;\n            b = b.value;\n            if (!Array.isArray(a)) {\n                return a === b ? 0 : undefined;\n            }\n            if (a.length !== b.length) {\n                return undefined;\n            }\n            for (var i = 0; i < a.length; i++) {\n                if (Node.compare(a[i], b[i]) !== 0) {\n                    return undefined;\n                }\n            }\n            return 0;\n        };\n        Node.numericCompare = function (a, b) {\n            return a < b ? -1\n                : a === b ? 0\n                    : a > b ? 1 : undefined;\n        };\n        // Returns true if this node represents root of ast imported by reference\n        Node.prototype.blocksVisibility = function () {\n            if (this.visibilityBlocks == null) {\n                this.visibilityBlocks = 0;\n            }\n            return this.visibilityBlocks !== 0;\n        };\n        Node.prototype.addVisibilityBlock = function () {\n            if (this.visibilityBlocks == null) {\n                this.visibilityBlocks = 0;\n            }\n            this.visibilityBlocks = this.visibilityBlocks + 1;\n        };\n        Node.prototype.removeVisibilityBlock = function () {\n            if (this.visibilityBlocks == null) {\n                this.visibilityBlocks = 0;\n            }\n            this.visibilityBlocks = this.visibilityBlocks - 1;\n        };\n        // Turns on node visibility - if called node will be shown in output regardless\n        // of whether it comes from import by reference or not\n        Node.prototype.ensureVisibility = function () {\n            this.nodeVisible = true;\n        };\n        // Turns off node visibility - if called node will NOT be shown in output regardless\n        // of whether it comes from import by reference or not\n        Node.prototype.ensureInvisibility = function () {\n            this.nodeVisible = false;\n        };\n        // return values:\n        // false - the node must not be visible\n        // true - the node must be visible\n        // undefined or null - the node has the same visibility as its parent\n        Node.prototype.isVisible = function () {\n            return this.nodeVisible;\n        };\n        Node.prototype.visibilityInfo = function () {\n            return {\n                visibilityBlocks: this.visibilityBlocks,\n                nodeVisible: this.nodeVisible\n            };\n        };\n        Node.prototype.copyVisibilityInfo = function (info) {\n            if (!info) {\n                return;\n            }\n            this.visibilityBlocks = info.visibilityBlocks;\n            this.nodeVisible = info.nodeVisible;\n        };\n        return Node;\n    }());\n\n    //\n    // RGB Colors - #ff0014, #eee\n    //\n    var Color = function (rgb, a, originalForm) {\n        var self = this;\n        //\n        // The end goal here, is to parse the arguments\n        // into an integer triplet, such as `128, 255, 0`\n        //\n        // This facilitates operations and conversions.\n        //\n        if (Array.isArray(rgb)) {\n            this.rgb = rgb;\n        }\n        else if (rgb.length >= 6) {\n            this.rgb = [];\n            rgb.match(/.{2}/g).map(function (c, i) {\n                if (i < 3) {\n                    self.rgb.push(parseInt(c, 16));\n                }\n                else {\n                    self.alpha = (parseInt(c, 16)) / 255;\n                }\n            });\n        }\n        else {\n            this.rgb = [];\n            rgb.split('').map(function (c, i) {\n                if (i < 3) {\n                    self.rgb.push(parseInt(c + c, 16));\n                }\n                else {\n                    self.alpha = (parseInt(c + c, 16)) / 255;\n                }\n            });\n        }\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\n        if (typeof originalForm !== 'undefined') {\n            this.value = originalForm;\n        }\n    };\n    Color.prototype = Object.assign(new Node(), {\n        type: 'Color',\n        luma: function () {\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n        },\n        genCSS: function (context, output) {\n            output.add(this.toCSS(context));\n        },\n        toCSS: function (context, doNotCompress) {\n            var compress = context && context.compress && !doNotCompress;\n            var color;\n            var alpha;\n            var colorFunction;\n            var args = [];\n            // `value` is set if this color was originally\n            // converted from a named color string so we need\n            // to respect this and try to output named color too.\n            alpha = this.fround(context, this.alpha);\n            if (this.value) {\n                if (this.value.indexOf('rgb') === 0) {\n                    if (alpha < 1) {\n                        colorFunction = 'rgba';\n                    }\n                }\n                else if (this.value.indexOf('hsl') === 0) {\n                    if (alpha < 1) {\n                        colorFunction = 'hsla';\n                    }\n                    else {\n                        colorFunction = 'hsl';\n                    }\n                }\n                else {\n                    return this.value;\n                }\n            }\n            else {\n                if (alpha < 1) {\n                    colorFunction = 'rgba';\n                }\n            }\n            switch (colorFunction) {\n                case 'rgba':\n                    args = this.rgb.map(function (c) {\n                        return clamp$1(Math.round(c), 255);\n                    }).concat(clamp$1(alpha, 1));\n                    break;\n                case 'hsla':\n                    args.push(clamp$1(alpha, 1));\n                case 'hsl':\n                    color = this.toHSL();\n                    args = [\n                        this.fround(context, color.h),\n                        this.fround(context, color.s * 100) + \"%\",\n                        this.fround(context, color.l * 100) + \"%\"\n                    ].concat(args);\n            }\n            if (colorFunction) {\n                // Values are capped between `0` and `255`, rounded and zero-padded.\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\n            }\n            color = this.toRGB();\n            if (compress) {\n                var splitcolor = color.split('');\n                // Convert color to short format\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\n                }\n            }\n            return color;\n        },\n        //\n        // Operations have to be done per-channel, if not,\n        // channels will spill onto each other. Once we have\n        // our result, in the form of an integer triplet,\n        // we create a new Color node to hold the result.\n        //\n        operate: function (context, op, other) {\n            var rgb = new Array(3);\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\n            for (var c = 0; c < 3; c++) {\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n            }\n            return new Color(rgb, alpha);\n        },\n        toRGB: function () {\n            return toHex(this.rgb);\n        },\n        toHSL: function () {\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\n            var h;\n            var s;\n            var l = (max + min) / 2;\n            var d = max - min;\n            if (max === min) {\n                h = s = 0;\n            }\n            else {\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                }\n                h /= 6;\n            }\n            return { h: h * 360, s: s, l: l, a: a };\n        },\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n        toHSV: function () {\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\n            var h;\n            var s;\n            var v = max;\n            var d = max - min;\n            if (max === 0) {\n                s = 0;\n            }\n            else {\n                s = d / max;\n            }\n            if (max === min) {\n                h = 0;\n            }\n            else {\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                }\n                h /= 6;\n            }\n            return { h: h * 360, s: s, v: v, a: a };\n        },\n        toARGB: function () {\n            return toHex([this.alpha * 255].concat(this.rgb));\n        },\n        compare: function (x) {\n            return (x.rgb &&\n                x.rgb[0] === this.rgb[0] &&\n                x.rgb[1] === this.rgb[1] &&\n                x.rgb[2] === this.rgb[2] &&\n                x.alpha === this.alpha) ? 0 : undefined;\n        }\n    });\n    Color.fromKeyword = function (keyword) {\n        var c;\n        var key = keyword.toLowerCase();\n        if (colors.hasOwnProperty(key)) {\n            c = new Color(colors[key].slice(1));\n        }\n        else if (key === 'transparent') {\n            c = new Color([0, 0, 0], 0);\n        }\n        if (c) {\n            c.value = keyword;\n            return c;\n        }\n    };\n    function clamp$1(v, max) {\n        return Math.min(Math.max(v, 0), max);\n    }\n    function toHex(v) {\n        return \"#\" + v.map(function (c) {\n            c = clamp$1(Math.round(c), 255);\n            return (c < 16 ? '0' : '') + c.toString(16);\n        }).join('');\n    }\n\n    var Paren = function (node) {\n        this.value = node;\n    };\n    Paren.prototype = Object.assign(new Node(), {\n        type: 'Paren',\n        genCSS: function (context, output) {\n            output.add('(');\n            this.value.genCSS(context, output);\n            output.add(')');\n        },\n        eval: function (context) {\n            return new Paren(this.value.eval(context));\n        }\n    });\n\n    var _noSpaceCombinators = {\n        '': true,\n        ' ': true,\n        '|': true\n    };\n    var Combinator = function (value) {\n        if (value === ' ') {\n            this.value = ' ';\n            this.emptyOrWhitespace = true;\n        }\n        else {\n            this.value = value ? value.trim() : '';\n            this.emptyOrWhitespace = this.value === '';\n        }\n    };\n    Combinator.prototype = Object.assign(new Node(), {\n        type: 'Combinator',\n        genCSS: function (context, output) {\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n        }\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\n        this.combinator = combinator instanceof Combinator ?\n            combinator : new Combinator(combinator);\n        if (typeof value === 'string') {\n            this.value = value.trim();\n        }\n        else if (value) {\n            this.value = value;\n        }\n        else {\n            this.value = '';\n        }\n        this.isVariable = isVariable;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.combinator, this);\n    };\n    Element.prototype = Object.assign(new Node(), {\n        type: 'Element',\n        accept: function (visitor) {\n            var value = this.value;\n            this.combinator = visitor.visit(this.combinator);\n            if (typeof value === 'object') {\n                this.value = visitor.visit(value);\n            }\n        },\n        eval: function (context) {\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        },\n        clone: function () {\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        },\n        genCSS: function (context, output) {\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n        },\n        toCSS: function (context) {\n            context = context || {};\n            var value = this.value;\n            var firstSelector = context.firstSelector;\n            if (value instanceof Paren) {\n                // selector in parens should not be affected by outer selector\n                // flags (breaks only interpolated selectors - see #1973)\n                context.firstSelector = true;\n            }\n            value = value.toCSS ? value.toCSS(context) : value;\n            context.firstSelector = firstSelector;\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\n                return '';\n            }\n            else {\n                return this.combinator.toCSS(context) + value;\n            }\n        }\n    });\n\n    var Math$1 = {\n        ALWAYS: 0,\n        PARENS_DIVISION: 1,\n        PARENS: 2\n        // removed - STRICT_LEGACY: 3\n    };\n    var RewriteUrls = {\n        OFF: 0,\n        LOCAL: 1,\n        ALL: 2\n    };\n\n    /**\n     * Returns the object type of the given payload\n     *\n     * @param {*} payload\n     * @returns {string}\n     */\n    function getType(payload) {\n        return Object.prototype.toString.call(payload).slice(8, -1);\n    }\n    /**\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\n     *\n     * @param {*} payload\n     * @returns {payload is Record<string, any>}\n     */\n    function isPlainObject(payload) {\n        if (getType(payload) !== 'Object')\n            return false;\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\n    }\n    /**\n     * Returns whether the payload is an array\n     *\n     * @param {any} payload\n     * @returns {payload is any[]}\n     */\n    function isArray(payload) {\n        return getType(payload) === 'Array';\n    }\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation. All rights reserved.\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n    this file except in compliance with the License. You may obtain a copy of the\n    License at http://www.apache.org/licenses/LICENSE-2.0\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n    MERCHANTABLITY OR NON-INFRINGEMENT.\n\n    See the Apache Version 2.0 License for specific language governing permissions\n    and limitations under the License.\n    ***************************************************************************** */\n\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\n            ? 'enumerable'\n            : 'nonenumerable';\n        if (propType === 'enumerable')\n            carry[key] = newVal;\n        if (includeNonenumerable && propType === 'nonenumerable') {\n            Object.defineProperty(carry, key, {\n                value: newVal,\n                enumerable: false,\n                writable: true,\n                configurable: true,\n            });\n        }\n    }\n    /**\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\n     *\n     * @export\n     * @template T\n     * @param {T} target Target can be anything\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\n     * @returns {T} the target with replaced values\n     * @export\n     */\n    function copy(target, options) {\n        if (options === void 0) { options = {}; }\n        if (isArray(target))\n            return target.map(function (i) { return copy(i, options); });\n        if (!isPlainObject(target))\n            return target;\n        var props = Object.getOwnPropertyNames(target);\n        var symbols = Object.getOwnPropertySymbols(target);\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\n            if (isArray(options.props) && !options.props.includes(key)) {\n                return carry;\n            }\n            var val = target[key];\n            var newVal = copy(val, options);\n            assignProp(carry, key, newVal, target, options.nonenumerable);\n            return carry;\n        }, {});\n    }\n\n    /* jshint proto: true */\n    function getLocation(index, inputStream) {\n        var n = index + 1;\n        var line = null;\n        var column = -1;\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n            column++;\n        }\n        if (typeof index === 'number') {\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\n        }\n        return {\n            line: line,\n            column: column\n        };\n    }\n    function copyArray(arr) {\n        var i;\n        var length = arr.length;\n        var copy = new Array(length);\n        for (i = 0; i < length; i++) {\n            copy[i] = arr[i];\n        }\n        return copy;\n    }\n    function clone(obj) {\n        var cloned = {};\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                cloned[prop] = obj[prop];\n            }\n        }\n        return cloned;\n    }\n    function defaults(obj1, obj2) {\n        var newObj = obj2 || {};\n        if (!obj2._defaults) {\n            newObj = {};\n            var defaults_1 = copy(obj1);\n            newObj._defaults = defaults_1;\n            var cloned = obj2 ? copy(obj2) : {};\n            Object.assign(newObj, defaults_1, cloned);\n        }\n        return newObj;\n    }\n    function copyOptions(obj1, obj2) {\n        if (obj2 && obj2._defaults) {\n            return obj2;\n        }\n        var opts = defaults(obj1, obj2);\n        if (opts.strictMath) {\n            opts.math = Math$1.PARENS;\n        }\n        // Back compat with changed relativeUrls option\n        if (opts.relativeUrls) {\n            opts.rewriteUrls = RewriteUrls.ALL;\n        }\n        if (typeof opts.math === 'string') {\n            switch (opts.math.toLowerCase()) {\n                case 'always':\n                    opts.math = Math$1.ALWAYS;\n                    break;\n                case 'parens-division':\n                    opts.math = Math$1.PARENS_DIVISION;\n                    break;\n                case 'strict':\n                case 'parens':\n                    opts.math = Math$1.PARENS;\n                    break;\n                default:\n                    opts.math = Math$1.PARENS;\n            }\n        }\n        if (typeof opts.rewriteUrls === 'string') {\n            switch (opts.rewriteUrls.toLowerCase()) {\n                case 'off':\n                    opts.rewriteUrls = RewriteUrls.OFF;\n                    break;\n                case 'local':\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\n                    break;\n                case 'all':\n                    opts.rewriteUrls = RewriteUrls.ALL;\n                    break;\n            }\n        }\n        return opts;\n    }\n    function merge(obj1, obj2) {\n        for (var prop in obj2) {\n            if (obj2.hasOwnProperty(prop)) {\n                obj1[prop] = obj2[prop];\n            }\n        }\n        return obj1;\n    }\n    function flattenArray(arr, result) {\n        if (result === void 0) { result = []; }\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\n            var value = arr[i];\n            if (Array.isArray(value)) {\n                flattenArray(value, result);\n            }\n            else {\n                if (value !== undefined) {\n                    result.push(value);\n                }\n            }\n        }\n        return result;\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\n    /**\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n     * Besides standard .message it keeps some additional data like a path to the file where the error\n     * occurred along with line and column numbers.\n     *\n     * @class\n     * @extends Error\n     * @type {module.LessError}\n     *\n     * @prop {string} type\n     * @prop {string} filename\n     * @prop {number} index\n     * @prop {number} line\n     * @prop {number} column\n     * @prop {number} callLine\n     * @prop {number} callExtract\n     * @prop {string[]} extract\n     *\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n     * @param {string} [currentFilename]\n     */\n    var LessError = function (e, fileContentMap, currentFilename) {\n        Error.call(this);\n        var filename = e.filename || currentFilename;\n        this.message = e.message;\n        this.stack = e.stack;\n        if (fileContentMap && filename) {\n            var input = fileContentMap.contents[filename];\n            var loc = getLocation(e.index, input);\n            var line = loc.line;\n            var col = loc.column;\n            var callLine = e.call && getLocation(e.call, input).line;\n            var lines = input ? input.split('\\n') : '';\n            this.type = e.type || 'Syntax';\n            this.filename = filename;\n            this.index = e.index;\n            this.line = typeof line === 'number' ? line + 1 : null;\n            this.column = col;\n            if (!this.line && this.stack) {\n                var found = this.stack.match(anonymousFunc);\n                /**\n                 * We have to figure out how this environment stringifies anonymous functions\n                 * so we can correctly map plugin errors.\n                 *\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\n                 * being present or not, so we inject dummy params.\n                 */\n                var func = new Function('a', 'throw new Error()');\n                var lineAdjust = 0;\n                try {\n                    func();\n                }\n                catch (e) {\n                    var match = e.stack.match(anonymousFunc);\n                    var line = parseInt(match[2]);\n                    lineAdjust = 1 - line;\n                }\n                if (found) {\n                    if (found[2]) {\n                        this.line = parseInt(found[2]) + lineAdjust;\n                    }\n                    if (found[3]) {\n                        this.column = parseInt(found[3]);\n                    }\n                }\n            }\n            this.callLine = callLine + 1;\n            this.callExtract = lines[callLine];\n            this.extract = [\n                lines[this.line - 2],\n                lines[this.line - 1],\n                lines[this.line]\n            ];\n        }\n    };\n    if (typeof Object.create === 'undefined') {\n        var F = function () { };\n        F.prototype = Error.prototype;\n        LessError.prototype = new F();\n    }\n    else {\n        LessError.prototype = Object.create(Error.prototype);\n    }\n    LessError.prototype.constructor = LessError;\n    /**\n     * An overridden version of the default Object.prototype.toString\n     * which uses additional information to create a helpful message.\n     *\n     * @param {Object} options\n     * @returns {string}\n     */\n    LessError.prototype.toString = function (options) {\n        options = options || {};\n        var message = '';\n        var extract = this.extract || [];\n        var error = [];\n        var stylize = function (str) { return str; };\n        if (options.stylize) {\n            var type = typeof options.stylize;\n            if (type !== 'function') {\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\n            }\n            stylize = options.stylize;\n        }\n        if (this.line !== null) {\n            if (typeof extract[0] === 'string') {\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\n            }\n            if (typeof extract[1] === 'string') {\n                var errorTxt = this.line + \" \";\n                if (extract[1]) {\n                    errorTxt += extract[1].slice(0, this.column) +\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\n                }\n                error.push(errorTxt);\n            }\n            if (typeof extract[2] === 'string') {\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\n            }\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\n        }\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\n        if (this.filename) {\n            message += stylize(' in ', 'red') + this.filename;\n        }\n        if (this.line) {\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\n        }\n        message += \"\\n\" + error;\n        if (this.callLine) {\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\n        }\n        return message;\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n        this.extendList = extendList;\n        this.condition = condition;\n        this.evaldCondition = !condition;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.elements = this.getElements(elements);\n        this.mixinElements_ = undefined;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.elements, this);\n    };\n    Selector.prototype = Object.assign(new Node(), {\n        type: 'Selector',\n        accept: function (visitor) {\n            if (this.elements) {\n                this.elements = visitor.visitArray(this.elements);\n            }\n            if (this.extendList) {\n                this.extendList = visitor.visitArray(this.extendList);\n            }\n            if (this.condition) {\n                this.condition = visitor.visit(this.condition);\n            }\n        },\n        createDerived: function (elements, extendList, evaldCondition) {\n            elements = this.getElements(elements);\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\n            newSelector.mediaEmpty = this.mediaEmpty;\n            return newSelector;\n        },\n        getElements: function (els) {\n            if (!els) {\n                return [new Element('', '&', false, this._index, this._fileInfo)];\n            }\n            if (typeof els === 'string') {\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\n                    if (err) {\n                        throw new LessError({\n                            index: err.index,\n                            message: err.message\n                        }, this.parse.imports, this._fileInfo.filename);\n                    }\n                    els = result[0].elements;\n                });\n            }\n            return els;\n        },\n        createEmptySelectors: function () {\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n            sels[0].mediaEmpty = true;\n            return sels;\n        },\n        match: function (other) {\n            var elements = this.elements;\n            var len = elements.length;\n            var olen;\n            var i;\n            other = other.mixinElements();\n            olen = other.length;\n            if (olen === 0 || len < olen) {\n                return 0;\n            }\n            else {\n                for (i = 0; i < olen; i++) {\n                    if (elements[i].value !== other[i]) {\n                        return 0;\n                    }\n                }\n            }\n            return olen; // return number of matched elements\n        },\n        mixinElements: function () {\n            if (this.mixinElements_) {\n                return this.mixinElements_;\n            }\n            var elements = this.elements.map(function (v) {\n                return v.combinator.value + (v.value.value || v.value);\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n            if (elements) {\n                if (elements[0] === '&') {\n                    elements.shift();\n                }\n            }\n            else {\n                elements = [];\n            }\n            return (this.mixinElements_ = elements);\n        },\n        isJustParentSelector: function () {\n            return !this.mediaEmpty &&\n                this.elements.length === 1 &&\n                this.elements[0].value === '&' &&\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n        },\n        eval: function (context) {\n            var evaldCondition = this.condition && this.condition.eval(context);\n            var elements = this.elements;\n            var extendList = this.extendList;\n            elements = elements && elements.map(function (e) { return e.eval(context); });\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\n            return this.createDerived(elements, extendList, evaldCondition);\n        },\n        genCSS: function (context, output) {\n            var i, element;\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\n                output.add(' ', this.fileInfo(), this.getIndex());\n            }\n            for (i = 0; i < this.elements.length; i++) {\n                element = this.elements[i];\n                element.genCSS(context, output);\n            }\n        },\n        getIsOutput: function () {\n            return this.evaldCondition;\n        }\n    });\n\n    var Value = function (value) {\n        if (!value) {\n            throw new Error('Value requires an array argument');\n        }\n        if (!Array.isArray(value)) {\n            this.value = [value];\n        }\n        else {\n            this.value = value;\n        }\n    };\n    Value.prototype = Object.assign(new Node(), {\n        type: 'Value',\n        accept: function (visitor) {\n            if (this.value) {\n                this.value = visitor.visitArray(this.value);\n            }\n        },\n        eval: function (context) {\n            if (this.value.length === 1) {\n                return this.value[0].eval(context);\n            }\n            else {\n                return new Value(this.value.map(function (v) {\n                    return v.eval(context);\n                }));\n            }\n        },\n        genCSS: function (context, output) {\n            var i;\n            for (i = 0; i < this.value.length; i++) {\n                this.value[i].genCSS(context, output);\n                if (i + 1 < this.value.length) {\n                    output.add((context && context.compress) ? ',' : ', ');\n                }\n            }\n        }\n    });\n\n    var Keyword = function (value) {\n        this.value = value;\n    };\n    Keyword.prototype = Object.assign(new Node(), {\n        type: 'Keyword',\n        genCSS: function (context, output) {\n            if (this.value === '%') {\n                throw { type: 'Syntax', message: 'Invalid % without number' };\n            }\n            output.add(this.value);\n        }\n    });\n    Keyword.True = new Keyword('true');\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n        this.value = value;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.mapLines = mapLines;\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\n        this.allowRoot = true;\n        this.copyVisibilityInfo(visibilityInfo);\n    };\n    Anonymous.prototype = Object.assign(new Node(), {\n        type: 'Anonymous',\n        eval: function () {\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n        },\n        compare: function (other) {\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n        },\n        isRulesetLike: function () {\n            return this.rulesetLike;\n        },\n        genCSS: function (context, output) {\n            this.nodeVisible = Boolean(this.value);\n            if (this.nodeVisible) {\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\n            }\n        }\n    });\n\n    var MATH$1 = Math$1;\n    function evalName(context, name) {\n        var value = '';\n        var i;\n        var n = name.length;\n        var output = { add: function (s) { value += s; } };\n        for (i = 0; i < n; i++) {\n            name[i].eval(context).genCSS(context, output);\n        }\n        return value;\n    }\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\n        this.name = name;\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\n        this.important = important ? \" \" + important.trim() : '';\n        this.merge = merge;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.inline = inline || false;\n        this.variable = (variable !== undefined) ? variable\n            : (name.charAt && (name.charAt(0) === '@'));\n        this.allowRoot = true;\n        this.setParent(this.value, this);\n    };\n    Declaration.prototype = Object.assign(new Node(), {\n        type: 'Declaration',\n        genCSS: function (context, output) {\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n            try {\n                this.value.genCSS(context, output);\n            }\n            catch (e) {\n                e.index = this._index;\n                e.filename = this._fileInfo.filename;\n                throw e;\n            }\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\n        },\n        eval: function (context) {\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\n            if (typeof name !== 'string') {\n                // expand 'primitive' name directly to get\n                // things faster (~10% for benchmark.less):\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\n                    name[0].value : evalName(context, name);\n                variable = false; // never treat expanded interpolation as new variable name\n            }\n            // @todo remove when parens-division is default\n            if (name === 'font' && context.math === MATH$1.ALWAYS) {\n                mathBypass = true;\n                prevMath = context.math;\n                context.math = MATH$1.PARENS_DIVISION;\n            }\n            try {\n                context.importantScope.push({});\n                evaldValue = this.value.eval(context);\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\n                        index: this.getIndex(), filename: this.fileInfo().filename };\n                }\n                var important = this.important;\n                var importantResult = context.importantScope.pop();\n                if (!important && importantResult.important) {\n                    important = importantResult.important;\n                }\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\n            }\n            catch (e) {\n                if (typeof e.index !== 'number') {\n                    e.index = this.getIndex();\n                    e.filename = this.fileInfo().filename;\n                }\n                throw e;\n            }\n            finally {\n                if (mathBypass) {\n                    context.math = prevMath;\n                }\n            }\n        },\n        makeImportant: function () {\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\n        }\n    });\n\n    var debugInfo = /** @class */ (function () {\n        function debugInfo(context, ctx, lineSeparator) {\n            var result = '';\n            if (context.dumpLineNumbers && !context.compress) {\n                switch (context.dumpLineNumbers) {\n                    case 'comments':\n                        result = debugInfo.asComment(ctx);\n                        break;\n                    case 'mediaquery':\n                        result = debugInfo.asMediaQuery(ctx);\n                        break;\n                    case 'all':\n                        result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n                        break;\n                }\n            }\n            return result;\n        }\n        debugInfo.asComment = function (ctx) {\n            return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\n        };\n        debugInfo.asMediaQuery = function (ctx) {\n            var filenameWithProtocol = ctx.debugInfo.fileName;\n            if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n                filenameWithProtocol = \"file://\" + filenameWithProtocol;\n            }\n            return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n                if (a == '\\\\') {\n                    a = '\\/';\n                }\n                return \"\\\\\" + a;\n            }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\n        };\n        return debugInfo;\n    }());\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\n        this.value = value;\n        this.isLineComment = isLineComment;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.allowRoot = true;\n    };\n    Comment.prototype = Object.assign(new Node(), {\n        type: 'Comment',\n        genCSS: function (context, output) {\n            if (this.debugInfo) {\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\n            }\n            output.add(this.value);\n        },\n        isSilent: function (context) {\n            var isCompressed = context.compress && this.value[2] !== '!';\n            return this.isLineComment || isCompressed;\n        }\n    });\n\n    var contexts = {};\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n        if (!original) {\n            return;\n        }\n        for (var i = 0; i < propertiesToCopy.length; i++) {\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n            }\n        }\n    };\n    /*\n     parse is used whilst parsing\n     */\n    var parseCopyProperties = [\n        // options\n        'paths',\n        'rewriteUrls',\n        'rootpath',\n        'strictImports',\n        'insecure',\n        'dumpLineNumbers',\n        'compress',\n        'syncImport',\n        'chunkInput',\n        'mime',\n        'useFileCache',\n        // context\n        'processImports',\n        // Used by the import manager to stop multiple import visitors being created.\n        'pluginManager' // Used as the plugin manager for the session\n    ];\n    contexts.Parse = function (options) {\n        copyFromOriginal(options, this, parseCopyProperties);\n        if (typeof this.paths === 'string') {\n            this.paths = [this.paths];\n        }\n    };\n    var evalCopyProperties = [\n        'paths',\n        'compress',\n        'math',\n        'strictUnits',\n        'sourceMap',\n        'importMultiple',\n        'urlArgs',\n        'javascriptEnabled',\n        'pluginManager',\n        'importantScope',\n        'rewriteUrls' // option - whether to adjust URL's to be relative\n    ];\n    contexts.Eval = function (options, frames) {\n        copyFromOriginal(options, this, evalCopyProperties);\n        if (typeof this.paths === 'string') {\n            this.paths = [this.paths];\n        }\n        this.frames = frames || [];\n        this.importantScope = this.importantScope || [];\n    };\n    contexts.Eval.prototype.enterCalc = function () {\n        if (!this.calcStack) {\n            this.calcStack = [];\n        }\n        this.calcStack.push(true);\n        this.inCalc = true;\n    };\n    contexts.Eval.prototype.exitCalc = function () {\n        this.calcStack.pop();\n        if (!this.calcStack.length) {\n            this.inCalc = false;\n        }\n    };\n    contexts.Eval.prototype.inParenthesis = function () {\n        if (!this.parensStack) {\n            this.parensStack = [];\n        }\n        this.parensStack.push(true);\n    };\n    contexts.Eval.prototype.outOfParenthesis = function () {\n        this.parensStack.pop();\n    };\n    contexts.Eval.prototype.inCalc = false;\n    contexts.Eval.prototype.mathOn = true;\n    contexts.Eval.prototype.isMathOn = function (op) {\n        if (!this.mathOn) {\n            return false;\n        }\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n            return false;\n        }\n        if (this.math > Math$1.PARENS_DIVISION) {\n            return this.parensStack && this.parensStack.length;\n        }\n        return true;\n    };\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n        return isRelative(path);\n    };\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\n        var newPath;\n        rootpath = rootpath || '';\n        newPath = this.normalizePath(rootpath + path);\n        // If a path was explicit relative and the rootpath was not an absolute path\n        // we must ensure that the new path is also explicit relative.\n        if (isPathLocalRelative(path) &&\n            isPathRelative(rootpath) &&\n            isPathLocalRelative(newPath) === false) {\n            newPath = \"./\" + newPath;\n        }\n        return newPath;\n    };\n    contexts.Eval.prototype.normalizePath = function (path) {\n        var segments = path.split('/').reverse();\n        var segment;\n        path = [];\n        while (segments.length !== 0) {\n            segment = segments.pop();\n            switch (segment) {\n                case '.':\n                    break;\n                case '..':\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\n                        path.push(segment);\n                    }\n                    else {\n                        path.pop();\n                    }\n                    break;\n                default:\n                    path.push(segment);\n                    break;\n            }\n        }\n        return path.join('/');\n    };\n    function isPathRelative(path) {\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n    }\n    function isPathLocalRelative(path) {\n        return path.charAt(0) === '.';\n    }\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\n        return {\n            _data: {},\n            add: function (name, func) {\n                // precautionary case conversion, as later querying of\n                // the registry by function-caller uses lower case as well.\n                name = name.toLowerCase();\n                if (this._data.hasOwnProperty(name)) ;\n                this._data[name] = func;\n            },\n            addMultiple: function (functions) {\n                var _this = this;\n                Object.keys(functions).forEach(function (name) {\n                    _this.add(name, functions[name]);\n                });\n            },\n            get: function (name) {\n                return this._data[name] || (base && base.get(name));\n            },\n            getLocalFunctions: function () {\n                return this._data;\n            },\n            inherit: function () {\n                return makeRegistry(this);\n            },\n            create: function (base) {\n                return makeRegistry(base);\n            }\n        };\n    }\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\n        eval: function () {\n            var v = this.value_;\n            var e = this.error_;\n            if (e) {\n                throw e;\n            }\n            if (v != null) {\n                return v ? Keyword.True : Keyword.False;\n            }\n        },\n        value: function (v) {\n            this.value_ = v;\n        },\n        error: function (e) {\n            this.error_ = e;\n        },\n        reset: function () {\n            this.value_ = this.error_ = null;\n        }\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\n        this.selectors = selectors;\n        this.rules = rules;\n        this._lookups = {};\n        this._variables = null;\n        this._properties = null;\n        this.strictImports = strictImports;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n        this.setParent(this.selectors, this);\n        this.setParent(this.rules, this);\n    };\n    Ruleset.prototype = Object.assign(new Node(), {\n        type: 'Ruleset',\n        isRuleset: true,\n        isRulesetLike: function () { return true; },\n        accept: function (visitor) {\n            if (this.paths) {\n                this.paths = visitor.visitArray(this.paths, true);\n            }\n            else if (this.selectors) {\n                this.selectors = visitor.visitArray(this.selectors);\n            }\n            if (this.rules && this.rules.length) {\n                this.rules = visitor.visitArray(this.rules);\n            }\n        },\n        eval: function (context) {\n            var selectors;\n            var selCnt;\n            var selector;\n            var i;\n            var hasVariable;\n            var hasOnePassingSelector = false;\n            if (this.selectors && (selCnt = this.selectors.length)) {\n                selectors = new Array(selCnt);\n                defaultFunc.error({\n                    type: 'Syntax',\n                    message: 'it is currently only allowed in parametric mixin guards,'\n                });\n                for (i = 0; i < selCnt; i++) {\n                    selector = this.selectors[i].eval(context);\n                    for (var j = 0; j < selector.elements.length; j++) {\n                        if (selector.elements[j].isVariable) {\n                            hasVariable = true;\n                            break;\n                        }\n                    }\n                    selectors[i] = selector;\n                    if (selector.evaldCondition) {\n                        hasOnePassingSelector = true;\n                    }\n                }\n                if (hasVariable) {\n                    var toParseSelectors = new Array(selCnt);\n                    for (i = 0; i < selCnt; i++) {\n                        selector = selectors[i];\n                        toParseSelectors[i] = selector.toCSS(context);\n                    }\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\n                        if (result) {\n                            selectors = flattenArray(result);\n                        }\n                    });\n                }\n                defaultFunc.reset();\n            }\n            else {\n                hasOnePassingSelector = true;\n            }\n            var rules = this.rules ? copyArray(this.rules) : null;\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\n            var rule;\n            var subRule;\n            ruleset.originalRuleset = this;\n            ruleset.root = this.root;\n            ruleset.firstRoot = this.firstRoot;\n            ruleset.allowImports = this.allowImports;\n            if (this.debugInfo) {\n                ruleset.debugInfo = this.debugInfo;\n            }\n            if (!hasOnePassingSelector) {\n                rules.length = 0;\n            }\n            // inherit a function registry from the frames stack when possible;\n            // otherwise from the global registry\n            ruleset.functionRegistry = (function (frames) {\n                var i = 0;\n                var n = frames.length;\n                var found;\n                for (; i !== n; ++i) {\n                    found = frames[i].functionRegistry;\n                    if (found) {\n                        return found;\n                    }\n                }\n                return functionRegistry;\n            }(context.frames)).inherit();\n            // push the current ruleset to the frames stack\n            var ctxFrames = context.frames;\n            ctxFrames.unshift(ruleset);\n            // currrent selectors\n            var ctxSelectors = context.selectors;\n            if (!ctxSelectors) {\n                context.selectors = ctxSelectors = [];\n            }\n            ctxSelectors.unshift(this.selectors);\n            // Evaluate imports\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n                ruleset.evalImports(context);\n            }\n            // Store the frames around mixin definitions,\n            // so they can be evaluated like closures when the time comes.\n            var rsRules = ruleset.rules;\n            for (i = 0; (rule = rsRules[i]); i++) {\n                if (rule.evalFirst) {\n                    rsRules[i] = rule.eval(context);\n                }\n            }\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\n            // Evaluate mixin calls.\n            for (i = 0; (rule = rsRules[i]); i++) {\n                if (rule.type === 'MixinCall') {\n                    /* jshint loopfunc:true */\n                    rules = rule.eval(context).filter(function (r) {\n                        if ((r instanceof Declaration) && r.variable) {\n                            // do not pollute the scope if the variable is\n                            // already there. consider returning false here\n                            // but we need a way to \"return\" variable from mixins\n                            return !(ruleset.variable(r.name));\n                        }\n                        return true;\n                    });\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n                    i += rules.length - 1;\n                    ruleset.resetCache();\n                }\n                else if (rule.type === 'VariableCall') {\n                    /* jshint loopfunc:true */\n                    rules = rule.eval(context).rules.filter(function (r) {\n                        if ((r instanceof Declaration) && r.variable) {\n                            // do not pollute the scope at all\n                            return false;\n                        }\n                        return true;\n                    });\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n                    i += rules.length - 1;\n                    ruleset.resetCache();\n                }\n            }\n            // Evaluate everything else\n            for (i = 0; (rule = rsRules[i]); i++) {\n                if (!rule.evalFirst) {\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n                }\n            }\n            // Evaluate everything else\n            for (i = 0; (rule = rsRules[i]); i++) {\n                // for rulesets, check if it is a css guard and can be removed\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n                    // check if it can be folded in (e.g. & where)\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\n                        rsRules.splice(i--, 1);\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\n                            if (subRule instanceof Node) {\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\n                                    rsRules.splice(++i, 0, subRule);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // Pop the stack\n            ctxFrames.shift();\n            ctxSelectors.shift();\n            if (context.mediaBlocks) {\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\n                }\n            }\n            return ruleset;\n        },\n        evalImports: function (context) {\n            var rules = this.rules;\n            var i;\n            var importRules;\n            if (!rules) {\n                return;\n            }\n            for (i = 0; i < rules.length; i++) {\n                if (rules[i].type === 'Import') {\n                    importRules = rules[i].eval(context);\n                    if (importRules && (importRules.length || importRules.length === 0)) {\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\n                        i += importRules.length - 1;\n                    }\n                    else {\n                        rules.splice(i, 1, importRules);\n                    }\n                    this.resetCache();\n                }\n            }\n        },\n        makeImportant: function () {\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\n                if (r.makeImportant) {\n                    return r.makeImportant();\n                }\n                else {\n                    return r;\n                }\n            }), this.strictImports, this.visibilityInfo());\n            return result;\n        },\n        matchArgs: function (args) {\n            return !args || args.length === 0;\n        },\n        // lets you call a css selector with a guard\n        matchCondition: function (args, context) {\n            var lastSelector = this.selectors[this.selectors.length - 1];\n            if (!lastSelector.evaldCondition) {\n                return false;\n            }\n            if (lastSelector.condition &&\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\n                return false;\n            }\n            return true;\n        },\n        resetCache: function () {\n            this._rulesets = null;\n            this._variables = null;\n            this._properties = null;\n            this._lookups = {};\n        },\n        variables: function () {\n            if (!this._variables) {\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n                    if (r instanceof Declaration && r.variable === true) {\n                        hash[r.name] = r;\n                    }\n                    // when evaluating variables in an import statement, imports have not been eval'd\n                    // so we need to go inside import statements.\n                    // guard against root being a string (in the case of inlined less)\n                    if (r.type === 'Import' && r.root && r.root.variables) {\n                        var vars = r.root.variables();\n                        for (var name_1 in vars) {\n                            if (vars.hasOwnProperty(name_1)) {\n                                hash[name_1] = r.root.variable(name_1);\n                            }\n                        }\n                    }\n                    return hash;\n                }, {});\n            }\n            return this._variables;\n        },\n        properties: function () {\n            if (!this._properties) {\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n                    if (r instanceof Declaration && r.variable !== true) {\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\n                            r.name[0].value : r.name;\n                        // Properties don't overwrite as they can merge\n                        if (!hash[\"$\" + name_2]) {\n                            hash[\"$\" + name_2] = [r];\n                        }\n                        else {\n                            hash[\"$\" + name_2].push(r);\n                        }\n                    }\n                    return hash;\n                }, {});\n            }\n            return this._properties;\n        },\n        variable: function (name) {\n            var decl = this.variables()[name];\n            if (decl) {\n                return this.parseValue(decl);\n            }\n        },\n        property: function (name) {\n            var decl = this.properties()[name];\n            if (decl) {\n                return this.parseValue(decl);\n            }\n        },\n        lastDeclaration: function () {\n            for (var i = this.rules.length; i > 0; i--) {\n                var decl = this.rules[i - 1];\n                if (decl instanceof Declaration) {\n                    return this.parseValue(decl);\n                }\n            }\n        },\n        parseValue: function (toParse) {\n            var self = this;\n            function transformDeclaration(decl) {\n                if (decl.value instanceof Anonymous && !decl.parsed) {\n                    if (typeof decl.value.value === 'string') {\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\n                            if (err) {\n                                decl.parsed = true;\n                            }\n                            if (result) {\n                                decl.value = result[0];\n                                decl.important = result[1] || '';\n                                decl.parsed = true;\n                            }\n                        });\n                    }\n                    else {\n                        decl.parsed = true;\n                    }\n                    return decl;\n                }\n                else {\n                    return decl;\n                }\n            }\n            if (!Array.isArray(toParse)) {\n                return transformDeclaration.call(self, toParse);\n            }\n            else {\n                var nodes_1 = [];\n                toParse.forEach(function (n) {\n                    nodes_1.push(transformDeclaration.call(self, n));\n                });\n                return nodes_1;\n            }\n        },\n        rulesets: function () {\n            if (!this.rules) {\n                return [];\n            }\n            var filtRules = [];\n            var rules = this.rules;\n            var i;\n            var rule;\n            for (i = 0; (rule = rules[i]); i++) {\n                if (rule.isRuleset) {\n                    filtRules.push(rule);\n                }\n            }\n            return filtRules;\n        },\n        prependRule: function (rule) {\n            var rules = this.rules;\n            if (rules) {\n                rules.unshift(rule);\n            }\n            else {\n                this.rules = [rule];\n            }\n            this.setParent(rule, this);\n        },\n        find: function (selector, self, filter) {\n            self = self || this;\n            var rules = [];\n            var match;\n            var foundMixins;\n            var key = selector.toCSS();\n            if (key in this._lookups) {\n                return this._lookups[key];\n            }\n            this.rulesets().forEach(function (rule) {\n                if (rule !== self) {\n                    for (var j = 0; j < rule.selectors.length; j++) {\n                        match = selector.match(rule.selectors[j]);\n                        if (match) {\n                            if (selector.elements.length > match) {\n                                if (!filter || filter(rule)) {\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n                                    for (var i = 0; i < foundMixins.length; ++i) {\n                                        foundMixins[i].path.push(rule);\n                                    }\n                                    Array.prototype.push.apply(rules, foundMixins);\n                                }\n                            }\n                            else {\n                                rules.push({ rule: rule, path: [] });\n                            }\n                            break;\n                        }\n                    }\n                }\n            });\n            this._lookups[key] = rules;\n            return rules;\n        },\n        genCSS: function (context, output) {\n            var i;\n            var j;\n            var charsetRuleNodes = [];\n            var ruleNodes = [];\n            var // Line number debugging\n            debugInfo$1;\n            var rule;\n            var path;\n            context.tabLevel = (context.tabLevel || 0);\n            if (!this.root) {\n                context.tabLevel++;\n            }\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\n            var sep;\n            var charsetNodeIndex = 0;\n            var importNodeIndex = 0;\n            for (i = 0; (rule = this.rules[i]); i++) {\n                if (rule instanceof Comment) {\n                    if (importNodeIndex === i) {\n                        importNodeIndex++;\n                    }\n                    ruleNodes.push(rule);\n                }\n                else if (rule.isCharset && rule.isCharset()) {\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\n                    charsetNodeIndex++;\n                    importNodeIndex++;\n                }\n                else if (rule.type === 'Import') {\n                    ruleNodes.splice(importNodeIndex, 0, rule);\n                    importNodeIndex++;\n                }\n                else {\n                    ruleNodes.push(rule);\n                }\n            }\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\n            // If this is the root node, we don't render\n            // a selector, or {}.\n            if (!this.root) {\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\n                if (debugInfo$1) {\n                    output.add(debugInfo$1);\n                    output.add(tabSetStr);\n                }\n                var paths = this.paths;\n                var pathCnt = paths.length;\n                var pathSubCnt = void 0;\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\n                for (i = 0; i < pathCnt; i++) {\n                    path = paths[i];\n                    if (!(pathSubCnt = path.length)) {\n                        continue;\n                    }\n                    if (i > 0) {\n                        output.add(sep);\n                    }\n                    context.firstSelector = true;\n                    path[0].genCSS(context, output);\n                    context.firstSelector = false;\n                    for (j = 1; j < pathSubCnt; j++) {\n                        path[j].genCSS(context, output);\n                    }\n                }\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n            }\n            // Compile rules and rulesets\n            for (i = 0; (rule = ruleNodes[i]); i++) {\n                if (i + 1 === ruleNodes.length) {\n                    context.lastRule = true;\n                }\n                var currentLastRule = context.lastRule;\n                if (rule.isRulesetLike(rule)) {\n                    context.lastRule = false;\n                }\n                if (rule.genCSS) {\n                    rule.genCSS(context, output);\n                }\n                else if (rule.value) {\n                    output.add(rule.value.toString());\n                }\n                context.lastRule = currentLastRule;\n                if (!context.lastRule && rule.isVisible()) {\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\n                }\n                else {\n                    context.lastRule = false;\n                }\n            }\n            if (!this.root) {\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\n                context.tabLevel--;\n            }\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\n                output.add('\\n');\n            }\n        },\n        joinSelectors: function (paths, context, selectors) {\n            for (var s = 0; s < selectors.length; s++) {\n                this.joinSelector(paths, context, selectors[s]);\n            }\n        },\n        joinSelector: function (paths, context, selector) {\n            function createParenthesis(elementsToPak, originalElement) {\n                var replacementParen, j;\n                if (elementsToPak.length === 0) {\n                    replacementParen = new Paren(elementsToPak[0]);\n                }\n                else {\n                    var insideParent = new Array(elementsToPak.length);\n                    for (j = 0; j < elementsToPak.length; j++) {\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n                    }\n                    replacementParen = new Paren(new Selector(insideParent));\n                }\n                return replacementParen;\n            }\n            function createSelector(containedElement, originalElement) {\n                var element, selector;\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\n                selector = new Selector([element]);\n                return selector;\n            }\n            // joins selector path from `beginningPath` with selector path in `addPath`\n            // `replacedElement` contains element that is being replaced by `addPath`\n            // returns concatenated path\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n                var newSelectorPath, lastSelector, newJoinedSelector;\n                // our new selector path\n                newSelectorPath = [];\n                // construct the joined selector - if & is the first thing this will be empty,\n                // if not newJoinedSelector will be the last set of elements in the selector\n                if (beginningPath.length > 0) {\n                    newSelectorPath = copyArray(beginningPath);\n                    lastSelector = newSelectorPath.pop();\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\n                }\n                else {\n                    newJoinedSelector = originalSelector.createDerived([]);\n                }\n                if (addPath.length > 0) {\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\n                    // that is valid without anything in front of it\n                    // so if the & does not have a combinator that is \"\" or \" \" then\n                    // and there is a combinator on the parent, then grab that.\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n                    var combinator = replacedElement.combinator;\n                    var parentEl = addPath[0].elements[0];\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n                        combinator = parentEl.combinator;\n                    }\n                    // join the elements so far with the first part of the parent\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n                }\n                // now add the joined selector - but only if it is not empty\n                if (newJoinedSelector.elements.length !== 0) {\n                    newSelectorPath.push(newJoinedSelector);\n                }\n                // put together the parent selectors after the join (e.g. the rest of the parent)\n                if (addPath.length > 1) {\n                    var restOfPath = addPath.slice(1);\n                    restOfPath = restOfPath.map(function (selector) {\n                        return selector.createDerived(selector.elements, []);\n                    });\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\n                }\n                return newSelectorPath;\n            }\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\n            // `replacedElement` contains element that is being replaced by `addPath`\n            // returns array with all concatenated paths\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\n                var j;\n                for (j = 0; j < beginningPath.length; j++) {\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n                    result.push(newSelectorPath);\n                }\n                return result;\n            }\n            function mergeElementsOnToSelectors(elements, selectors) {\n                var i, sel;\n                if (elements.length === 0) {\n                    return;\n                }\n                if (selectors.length === 0) {\n                    selectors.push([new Selector(elements)]);\n                    return;\n                }\n                for (i = 0; (sel = selectors[i]); i++) {\n                    // if the previous thing in sel is a parent this needs to join on to it\n                    if (sel.length > 0) {\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n                    }\n                    else {\n                        sel.push(new Selector(elements));\n                    }\n                }\n            }\n            // replace all parent selectors inside `inSelector` by content of `context` array\n            // resulting selectors are returned inside `paths` array\n            // returns true if `inSelector` contained at least one parent selector\n            function replaceParentSelector(paths, context, inSelector) {\n                // The paths are [[Selector]]\n                // The first list is a list of comma separated selectors\n                // The inner list is a list of inheritance separated selectors\n                // e.g.\n                // .a, .b {\n                //   .c {\n                //   }\n                // }\n                // == [[.a] [.c]] [[.b] [.c]]\n                //\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\n                function findNestedSelector(element) {\n                    var maybeSelector;\n                    if (!(element.value instanceof Paren)) {\n                        return null;\n                    }\n                    maybeSelector = element.value.value;\n                    if (!(maybeSelector instanceof Selector)) {\n                        return null;\n                    }\n                    return maybeSelector;\n                }\n                // the elements from the current selector so far\n                currentElements = [];\n                // the current list of new selectors to add to the path.\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n                // by the parents\n                newSelectors = [\n                    []\n                ];\n                for (i = 0; (el = inSelector.elements[i]); i++) {\n                    // non parent reference elements just get added\n                    if (el.value !== '&') {\n                        var nestedSelector = findNestedSelector(el);\n                        if (nestedSelector != null) {\n                            // merge the current list of non parent selector elements\n                            // on to the current list of selectors to add\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\n                            var nestedPaths = [];\n                            var replaced = void 0;\n                            var replacedNewSelectors = [];\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                            hadParentSelector = hadParentSelector || replaced;\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n                            for (k = 0; k < nestedPaths.length; k++) {\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                            }\n                            newSelectors = replacedNewSelectors;\n                            currentElements = [];\n                        }\n                        else {\n                            currentElements.push(el);\n                        }\n                    }\n                    else {\n                        hadParentSelector = true;\n                        // the new list of selectors to add\n                        selectorsMultiplied = [];\n                        // merge the current list of non parent selector elements\n                        // on to the current list of selectors to add\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\n                        // loop through our current selectors\n                        for (j = 0; j < newSelectors.length; j++) {\n                            sel = newSelectors[j];\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                            // whether there are parents or not\n                            if (context.length === 0) {\n                                // the combinator used on el should now be applied to the next element instead so that\n                                // it is not lost\n                                if (sel.length > 0) {\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\n                                }\n                                selectorsMultiplied.push(sel);\n                            }\n                            else {\n                                // and the parent selectors\n                                for (k = 0; k < context.length; k++) {\n                                    // We need to put the current selectors\n                                    // then join the last selector's elements on to the parents selectors\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\n                                    // add that to our new set of selectors\n                                    selectorsMultiplied.push(newSelectorPath);\n                                }\n                            }\n                        }\n                        // our new selectors has been multiplied, so reset the state\n                        newSelectors = selectorsMultiplied;\n                        currentElements = [];\n                    }\n                }\n                // if we have any elements left over (e.g. .a& .b == .b)\n                // add them on to all the current selectors\n                mergeElementsOnToSelectors(currentElements, newSelectors);\n                for (i = 0; i < newSelectors.length; i++) {\n                    length = newSelectors[i].length;\n                    if (length > 0) {\n                        paths.push(newSelectors[i]);\n                        lastSelector = newSelectors[i][length - 1];\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n                    }\n                }\n                return hadParentSelector;\n            }\n            function deriveSelector(visibilityInfo, deriveFrom) {\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n                newSelector.copyVisibilityInfo(visibilityInfo);\n                return newSelector;\n            }\n            // joinSelector code follows\n            var i, newPaths, hadParentSelector;\n            newPaths = [];\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\n            if (!hadParentSelector) {\n                if (context.length > 0) {\n                    newPaths = [];\n                    for (i = 0; i < context.length; i++) {\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n                        concatenated.push(selector);\n                        newPaths.push(concatenated);\n                    }\n                }\n                else {\n                    newPaths = [[selector]];\n                }\n            }\n            for (i = 0; i < newPaths.length; i++) {\n                paths.push(newPaths[i]);\n            }\n        }\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n        var i;\n        this.name = name;\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\n        if (rules) {\n            if (Array.isArray(rules)) {\n                this.rules = rules;\n            }\n            else {\n                this.rules = [rules];\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\n            }\n            for (i = 0; i < this.rules.length; i++) {\n                this.rules[i].allowImports = true;\n            }\n            this.setParent(this.rules, this);\n        }\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.debugInfo = debugInfo;\n        this.isRooted = isRooted || false;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n    };\n    AtRule.prototype = Object.assign(new Node(), {\n        type: 'AtRule',\n        accept: function (visitor) {\n            var value = this.value, rules = this.rules;\n            if (rules) {\n                this.rules = visitor.visitArray(rules);\n            }\n            if (value) {\n                this.value = visitor.visit(value);\n            }\n        },\n        isRulesetLike: function () {\n            return this.rules || !this.isCharset();\n        },\n        isCharset: function () {\n            return '@charset' === this.name;\n        },\n        genCSS: function (context, output) {\n            var value = this.value, rules = this.rules;\n            output.add(this.name, this.fileInfo(), this.getIndex());\n            if (value) {\n                output.add(' ');\n                value.genCSS(context, output);\n            }\n            if (rules) {\n                this.outputRuleset(context, output, rules);\n            }\n            else {\n                output.add(';');\n            }\n        },\n        eval: function (context) {\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\n            // media stored inside other atrule should not bubble over it\n            // backpup media bubbling information\n            mediaPathBackup = context.mediaPath;\n            mediaBlocksBackup = context.mediaBlocks;\n            // deleted media bubbling information\n            context.mediaPath = [];\n            context.mediaBlocks = [];\n            if (value) {\n                value = value.eval(context);\n            }\n            if (rules) {\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\n                rules = [rules[0].eval(context)];\n                rules[0].root = true;\n            }\n            // restore media bubbling information\n            context.mediaPath = mediaPathBackup;\n            context.mediaBlocks = mediaBlocksBackup;\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n        },\n        variable: function (name) {\n            if (this.rules) {\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\n                return Ruleset.prototype.variable.call(this.rules[0], name);\n            }\n        },\n        find: function () {\n            if (this.rules) {\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\n            }\n        },\n        rulesets: function () {\n            if (this.rules) {\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\n            }\n        },\n        outputRuleset: function (context, output, rules) {\n            var ruleCnt = rules.length;\n            var i;\n            context.tabLevel = (context.tabLevel | 0) + 1;\n            // Compressed\n            if (context.compress) {\n                output.add('{');\n                for (i = 0; i < ruleCnt; i++) {\n                    rules[i].genCSS(context, output);\n                }\n                output.add('}');\n                context.tabLevel--;\n                return;\n            }\n            // Non-compressed\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\n            if (!ruleCnt) {\n                output.add(\" {\" + tabSetStr + \"}\");\n            }\n            else {\n                output.add(\" {\" + tabRuleStr);\n                rules[0].genCSS(context, output);\n                for (i = 1; i < ruleCnt; i++) {\n                    output.add(tabRuleStr);\n                    rules[i].genCSS(context, output);\n                }\n                output.add(tabSetStr + \"}\");\n            }\n            context.tabLevel--;\n        }\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\n        this.ruleset = ruleset;\n        this.frames = frames;\n        this.setParent(this.ruleset, this);\n    };\n    DetachedRuleset.prototype = Object.assign(new Node(), {\n        type: 'DetachedRuleset',\n        evalFirst: true,\n        accept: function (visitor) {\n            this.ruleset = visitor.visit(this.ruleset);\n        },\n        eval: function (context) {\n            var frames = this.frames || copyArray(context.frames);\n            return new DetachedRuleset(this.ruleset, frames);\n        },\n        callEval: function (context) {\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n        }\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\n        if (backupUnit) {\n            this.backupUnit = backupUnit;\n        }\n        else if (numerator && numerator.length) {\n            this.backupUnit = numerator[0];\n        }\n    };\n    Unit.prototype = Object.assign(new Node(), {\n        type: 'Unit',\n        clone: function () {\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\n        },\n        genCSS: function (context, output) {\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\n            var strictUnits = context && context.strictUnits;\n            if (this.numerator.length === 1) {\n                output.add(this.numerator[0]); // the ideal situation\n            }\n            else if (!strictUnits && this.backupUnit) {\n                output.add(this.backupUnit);\n            }\n            else if (!strictUnits && this.denominator.length) {\n                output.add(this.denominator[0]);\n            }\n        },\n        toString: function () {\n            var i, returnStr = this.numerator.join('*');\n            for (i = 0; i < this.denominator.length; i++) {\n                returnStr += \"/\" + this.denominator[i];\n            }\n            return returnStr;\n        },\n        compare: function (other) {\n            return this.is(other.toString()) ? 0 : undefined;\n        },\n        is: function (unitString) {\n            return this.toString().toUpperCase() === unitString.toUpperCase();\n        },\n        isLength: function () {\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n        },\n        isEmpty: function () {\n            return this.numerator.length === 0 && this.denominator.length === 0;\n        },\n        isSingular: function () {\n            return this.numerator.length <= 1 && this.denominator.length === 0;\n        },\n        map: function (callback) {\n            var i;\n            for (i = 0; i < this.numerator.length; i++) {\n                this.numerator[i] = callback(this.numerator[i], false);\n            }\n            for (i = 0; i < this.denominator.length; i++) {\n                this.denominator[i] = callback(this.denominator[i], true);\n            }\n        },\n        usedUnits: function () {\n            var group;\n            var result = {};\n            var mapUnit;\n            var groupName;\n            mapUnit = function (atomicUnit) {\n                /* jshint loopfunc:true */\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n                    result[groupName] = atomicUnit;\n                }\n                return atomicUnit;\n            };\n            for (groupName in unitConversions) {\n                if (unitConversions.hasOwnProperty(groupName)) {\n                    group = unitConversions[groupName];\n                    this.map(mapUnit);\n                }\n            }\n            return result;\n        },\n        cancel: function () {\n            var counter = {};\n            var atomicUnit;\n            var i;\n            for (i = 0; i < this.numerator.length; i++) {\n                atomicUnit = this.numerator[i];\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n            }\n            for (i = 0; i < this.denominator.length; i++) {\n                atomicUnit = this.denominator[i];\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n            }\n            this.numerator = [];\n            this.denominator = [];\n            for (atomicUnit in counter) {\n                if (counter.hasOwnProperty(atomicUnit)) {\n                    var count = counter[atomicUnit];\n                    if (count > 0) {\n                        for (i = 0; i < count; i++) {\n                            this.numerator.push(atomicUnit);\n                        }\n                    }\n                    else if (count < 0) {\n                        for (i = 0; i < -count; i++) {\n                            this.denominator.push(atomicUnit);\n                        }\n                    }\n                }\n            }\n            this.numerator.sort();\n            this.denominator.sort();\n        }\n    });\n\n    //\n    // A number with a unit\n    //\n    var Dimension = function (value, unit) {\n        this.value = parseFloat(value);\n        if (isNaN(this.value)) {\n            throw new Error('Dimension is not a number.');\n        }\n        this.unit = (unit && unit instanceof Unit) ? unit :\n            new Unit(unit ? [unit] : undefined);\n        this.setParent(this.unit, this);\n    };\n    Dimension.prototype = Object.assign(new Node(), {\n        type: 'Dimension',\n        accept: function (visitor) {\n            this.unit = visitor.visit(this.unit);\n        },\n        eval: function (context) {\n            return this;\n        },\n        toColor: function () {\n            return new Color([this.value, this.value, this.value]);\n        },\n        genCSS: function (context, output) {\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\n            }\n            var value = this.fround(context, this.value);\n            var strValue = String(value);\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\n                // would be output 1e-6 etc.\n                strValue = value.toFixed(20).replace(/0+$/, '');\n            }\n            if (context && context.compress) {\n                // Zero values doesn't need a unit\n                if (value === 0 && this.unit.isLength()) {\n                    output.add(strValue);\n                    return;\n                }\n                // Float values doesn't need a leading zero\n                if (value > 0 && value < 1) {\n                    strValue = (strValue).substr(1);\n                }\n            }\n            output.add(strValue);\n            this.unit.genCSS(context, output);\n        },\n        // In an operation between two Dimensions,\n        // we default to the first Dimension's unit,\n        // so `1px + 2` will yield `3px`.\n        operate: function (context, op, other) {\n            /* jshint noempty:false */\n            var value = this._operate(context, op, this.value, other.value);\n            var unit = this.unit.clone();\n            if (op === '+' || op === '-') {\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n                    unit = other.unit.clone();\n                    if (this.unit.backupUnit) {\n                        unit.backupUnit = this.unit.backupUnit;\n                    }\n                }\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\n                else {\n                    other = other.convertTo(this.unit.usedUnits());\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\n                    }\n                    value = this._operate(context, op, this.value, other.value);\n                }\n            }\n            else if (op === '*') {\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n                unit.cancel();\n            }\n            else if (op === '/') {\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n                unit.cancel();\n            }\n            return new Dimension(value, unit);\n        },\n        compare: function (other) {\n            var a, b;\n            if (!(other instanceof Dimension)) {\n                return undefined;\n            }\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\n                a = this;\n                b = other;\n            }\n            else {\n                a = this.unify();\n                b = other.unify();\n                if (a.unit.compare(b.unit) !== 0) {\n                    return undefined;\n                }\n            }\n            return Node.numericCompare(a.value, b.value);\n        },\n        unify: function () {\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\n        },\n        convertTo: function (conversions) {\n            var value = this.value;\n            var unit = this.unit.clone();\n            var i;\n            var groupName;\n            var group;\n            var targetUnit;\n            var derivedConversions = {};\n            var applyUnit;\n            if (typeof conversions === 'string') {\n                for (i in unitConversions) {\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\n                        derivedConversions = {};\n                        derivedConversions[i] = conversions;\n                    }\n                }\n                conversions = derivedConversions;\n            }\n            applyUnit = function (atomicUnit, denominator) {\n                /* jshint loopfunc:true */\n                if (group.hasOwnProperty(atomicUnit)) {\n                    if (denominator) {\n                        value = value / (group[atomicUnit] / group[targetUnit]);\n                    }\n                    else {\n                        value = value * (group[atomicUnit] / group[targetUnit]);\n                    }\n                    return targetUnit;\n                }\n                return atomicUnit;\n            };\n            for (groupName in conversions) {\n                if (conversions.hasOwnProperty(groupName)) {\n                    targetUnit = conversions[groupName];\n                    group = unitConversions[groupName];\n                    unit.map(applyUnit);\n                }\n            }\n            unit.cancel();\n            return new Dimension(value, unit);\n        }\n    });\n\n    var MATH = Math$1;\n    var Operation = function (op, operands, isSpaced) {\n        this.op = op.trim();\n        this.operands = operands;\n        this.isSpaced = isSpaced;\n    };\n    Operation.prototype = Object.assign(new Node(), {\n        type: 'Operation',\n        accept: function (visitor) {\n            this.operands = visitor.visitArray(this.operands);\n        },\n        eval: function (context) {\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\n            if (context.isMathOn(this.op)) {\n                op = this.op === './' ? '/' : this.op;\n                if (a instanceof Dimension && b instanceof Color) {\n                    a = a.toColor();\n                }\n                if (b instanceof Dimension && a instanceof Color) {\n                    b = b.toColor();\n                }\n                if (!a.operate || !b.operate) {\n                    if ((a instanceof Operation || b instanceof Operation)\n                        && a.op === '/' && context.math === MATH.PARENS_DIVISION) {\n                        return new Operation(this.op, [a, b], this.isSpaced);\n                    }\n                    throw { type: 'Operation',\n                        message: 'Operation on an invalid type' };\n                }\n                return a.operate(context, op, b);\n            }\n            else {\n                return new Operation(this.op, [a, b], this.isSpaced);\n            }\n        },\n        genCSS: function (context, output) {\n            this.operands[0].genCSS(context, output);\n            if (this.isSpaced) {\n                output.add(' ');\n            }\n            output.add(this.op);\n            if (this.isSpaced) {\n                output.add(' ');\n            }\n            this.operands[1].genCSS(context, output);\n        }\n    });\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n\n    function __spreadArray(to, from, pack) {\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n            if (ar || !(i in from)) {\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n                ar[i] = from[i];\n            }\n        }\n        return to.concat(ar || from);\n    }\n\n    var Expression = function (value, noSpacing) {\n        this.value = value;\n        this.noSpacing = noSpacing;\n        if (!value) {\n            throw new Error('Expression requires an array parameter');\n        }\n    };\n    Expression.prototype = Object.assign(new Node(), {\n        type: 'Expression',\n        accept: function (visitor) {\n            this.value = visitor.visitArray(this.value);\n        },\n        eval: function (context) {\n            var returnValue;\n            var mathOn = context.isMathOn();\n            var inParenthesis = this.parens;\n            var doubleParen = false;\n            if (inParenthesis) {\n                context.inParenthesis();\n            }\n            if (this.value.length > 1) {\n                returnValue = new Expression(this.value.map(function (e) {\n                    if (!e.eval) {\n                        return e;\n                    }\n                    return e.eval(context);\n                }), this.noSpacing);\n            }\n            else if (this.value.length === 1) {\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n                    doubleParen = true;\n                }\n                returnValue = this.value[0].eval(context);\n            }\n            else {\n                returnValue = this;\n            }\n            if (inParenthesis) {\n                context.outOfParenthesis();\n            }\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\n                && (!(returnValue instanceof Dimension))) {\n                returnValue = new Paren(returnValue);\n            }\n            return returnValue;\n        },\n        genCSS: function (context, output) {\n            for (var i = 0; i < this.value.length; i++) {\n                this.value[i].genCSS(context, output);\n                if (!this.noSpacing && i + 1 < this.value.length) {\n                    output.add(' ');\n                }\n            }\n        },\n        throwAwayComments: function () {\n            this.value = this.value.filter(function (v) {\n                return !(v instanceof Comment);\n            });\n        }\n    });\n\n    var functionCaller = /** @class */ (function () {\n        function functionCaller(name, context, index, currentFileInfo) {\n            this.name = name.toLowerCase();\n            this.index = index;\n            this.context = context;\n            this.currentFileInfo = currentFileInfo;\n            this.func = context.frames[0].functionRegistry.get(this.name);\n        }\n        functionCaller.prototype.isValid = function () {\n            return Boolean(this.func);\n        };\n        functionCaller.prototype.call = function (args) {\n            var _this = this;\n            if (!(Array.isArray(args))) {\n                args = [args];\n            }\n            var evalArgs = this.func.evalArgs;\n            if (evalArgs !== false) {\n                args = args.map(function (a) { return a.eval(_this.context); });\n            }\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\n            // This code is terrible and should be replaced as per this issue...\n            // https://github.com/less/less.js/issues/2477\n            args = args\n                .filter(commentFilter)\n                .map(function (item) {\n                if (item.type === 'Expression') {\n                    var subNodes = item.value.filter(commentFilter);\n                    if (subNodes.length === 1) {\n                        // https://github.com/less/less.js/issues/3616\n                        if (item.parens && subNodes[0].op === '/') {\n                            return item;\n                        }\n                        return subNodes[0];\n                    }\n                    else {\n                        return new Expression(subNodes);\n                    }\n                }\n                return item;\n            });\n            if (evalArgs === false) {\n                return this.func.apply(this, __spreadArray([this.context], args));\n            }\n            return this.func.apply(this, args);\n        };\n        return functionCaller;\n    }());\n\n    //\n    // A function call node.\n    //\n    var Call = function (name, args, index, currentFileInfo) {\n        this.name = name;\n        this.args = args;\n        this.calc = name === 'calc';\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    Call.prototype = Object.assign(new Node(), {\n        type: 'Call',\n        accept: function (visitor) {\n            if (this.args) {\n                this.args = visitor.visitArray(this.args);\n            }\n        },\n        //\n        // When evaluating a function call,\n        // we either find the function in the functionRegistry,\n        // in which case we call it, passing the  evaluated arguments,\n        // if this returns null or we cannot find the function, we\n        // simply print it out as it appeared originally [2].\n        //\n        // The reason why we evaluate the arguments, is in the case where\n        // we try to pass a variable to a function, like: `saturate(@color)`.\n        // The function should receive the value, not the variable.\n        //\n        eval: function (context) {\n            var _this = this;\n            /**\n             * Turn off math for calc(), and switch back on for evaluating nested functions\n             */\n            var currentMathContext = context.mathOn;\n            context.mathOn = !this.calc;\n            if (this.calc || context.inCalc) {\n                context.enterCalc();\n            }\n            var exitCalc = function () {\n                if (_this.calc || context.inCalc) {\n                    context.exitCalc();\n                }\n                context.mathOn = currentMathContext;\n            };\n            var result;\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\n            if (funcCaller.isValid()) {\n                try {\n                    result = funcCaller.call(this.args);\n                    exitCalc();\n                }\n                catch (e) {\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\n                        throw e;\n                    }\n                    throw {\n                        type: e.type || 'Runtime',\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\n                        index: this.getIndex(),\n                        filename: this.fileInfo().filename,\n                        line: e.lineNumber,\n                        column: e.columnNumber\n                    };\n                }\n            }\n            if (result !== null && result !== undefined) {\n                // Results that that are not nodes are cast as Anonymous nodes\n                // Falsy values or booleans are returned as empty nodes\n                if (!(result instanceof Node)) {\n                    if (!result || result === true) {\n                        result = new Anonymous(null);\n                    }\n                    else {\n                        result = new Anonymous(result.toString());\n                    }\n                }\n                result._index = this._index;\n                result._fileInfo = this._fileInfo;\n                return result;\n            }\n            var args = this.args.map(function (a) { return a.eval(context); });\n            exitCalc();\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\n        },\n        genCSS: function (context, output) {\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\n            for (var i = 0; i < this.args.length; i++) {\n                this.args[i].genCSS(context, output);\n                if (i + 1 < this.args.length) {\n                    output.add(', ');\n                }\n            }\n            output.add(')');\n        }\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\n        this.name = name;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    Variable.prototype = Object.assign(new Node(), {\n        type: 'Variable',\n        eval: function (context) {\n            var variable, name = this.name;\n            if (name.indexOf('@@') === 0) {\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\n            }\n            if (this.evaluating) {\n                throw { type: 'Name',\n                    message: \"Recursive variable definition for \" + name,\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            this.evaluating = true;\n            variable = this.find(context.frames, function (frame) {\n                var v = frame.variable(name);\n                if (v) {\n                    if (v.important) {\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\n                        importantScope.important = v.important;\n                    }\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\n                    if (context.inCalc) {\n                        return (new Call('_SELF', [v.value])).eval(context);\n                    }\n                    else {\n                        return v.value.eval(context);\n                    }\n                }\n            });\n            if (variable) {\n                this.evaluating = false;\n                return variable;\n            }\n            else {\n                throw { type: 'Name',\n                    message: \"variable \" + name + \" is undefined\",\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n        },\n        find: function (obj, fun) {\n            for (var i = 0, r = void 0; i < obj.length; i++) {\n                r = fun.call(obj, obj[i]);\n                if (r) {\n                    return r;\n                }\n            }\n            return null;\n        }\n    });\n\n    var Property = function (name, index, currentFileInfo) {\n        this.name = name;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    Property.prototype = Object.assign(new Node(), {\n        type: 'Property',\n        eval: function (context) {\n            var property;\n            var name = this.name;\n            // TODO: shorten this reference\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n            if (this.evaluating) {\n                throw { type: 'Name',\n                    message: \"Recursive property reference for \" + name,\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            this.evaluating = true;\n            property = this.find(context.frames, function (frame) {\n                var v;\n                var vArr = frame.property(name);\n                if (vArr) {\n                    for (var i = 0; i < vArr.length; i++) {\n                        v = vArr[i];\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\n                    }\n                    mergeRules(vArr);\n                    v = vArr[vArr.length - 1];\n                    if (v.important) {\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\n                        importantScope.important = v.important;\n                    }\n                    v = v.value.eval(context);\n                    return v;\n                }\n            });\n            if (property) {\n                this.evaluating = false;\n                return property;\n            }\n            else {\n                throw { type: 'Name',\n                    message: \"Property '\" + name + \"' is undefined\",\n                    filename: this.currentFileInfo.filename,\n                    index: this.index };\n            }\n        },\n        find: function (obj, fun) {\n            for (var i = 0, r = void 0; i < obj.length; i++) {\n                r = fun.call(obj, obj[i]);\n                if (r) {\n                    return r;\n                }\n            }\n            return null;\n        }\n    });\n\n    var Attribute = function (key, op, value) {\n        this.key = key;\n        this.op = op;\n        this.value = value;\n    };\n    Attribute.prototype = Object.assign(new Node(), {\n        type: 'Attribute',\n        eval: function (context) {\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\n        },\n        genCSS: function (context, output) {\n            output.add(this.toCSS(context));\n        },\n        toCSS: function (context) {\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n            if (this.op) {\n                value += this.op;\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\n            }\n            return \"[\" + value + \"]\";\n        }\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\n        this.escaped = (escaped == null) ? true : escaped;\n        this.value = content || '';\n        this.quote = str.charAt(0);\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\n        this.allowRoot = escaped;\n    };\n    Quoted.prototype = Object.assign(new Node(), {\n        type: 'Quoted',\n        genCSS: function (context, output) {\n            if (!this.escaped) {\n                output.add(this.quote, this.fileInfo(), this.getIndex());\n            }\n            output.add(this.value);\n            if (!this.escaped) {\n                output.add(this.quote);\n            }\n        },\n        containsVariables: function () {\n            return this.value.match(this.variableRegex);\n        },\n        eval: function (context) {\n            var that = this;\n            var value = this.value;\n            var variableReplacement = function (_, name) {\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\n                return (v instanceof Quoted) ? v.value : v.toCSS();\n            };\n            var propertyReplacement = function (_, name) {\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\n                return (v instanceof Quoted) ? v.value : v.toCSS();\n            };\n            function iterativeReplace(value, regexp, replacementFnc) {\n                var evaluatedValue = value;\n                do {\n                    value = evaluatedValue.toString();\n                    evaluatedValue = value.replace(regexp, replacementFnc);\n                } while (value !== evaluatedValue);\n                return evaluatedValue;\n            }\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n        },\n        compare: function (other) {\n            // when comparing quoted strings allow the quote to differ\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\n                return Node.numericCompare(this.value, other.value);\n            }\n            else {\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n            }\n        }\n    });\n\n    function escapePath(path) {\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\n    }\n    var URL = function (val, index, currentFileInfo, isEvald) {\n        this.value = val;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.isEvald = isEvald;\n    };\n    URL.prototype = Object.assign(new Node(), {\n        type: 'Url',\n        accept: function (visitor) {\n            this.value = visitor.visit(this.value);\n        },\n        genCSS: function (context, output) {\n            output.add('url(');\n            this.value.genCSS(context, output);\n            output.add(')');\n        },\n        eval: function (context) {\n            var val = this.value.eval(context);\n            var rootpath;\n            if (!this.isEvald) {\n                // Add the rootpath if the URL requires a rewrite\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\n                if (typeof rootpath === 'string' &&\n                    typeof val.value === 'string' &&\n                    context.pathRequiresRewrite(val.value)) {\n                    if (!val.quote) {\n                        rootpath = escapePath(rootpath);\n                    }\n                    val.value = context.rewritePath(val.value, rootpath);\n                }\n                else {\n                    val.value = context.normalizePath(val.value);\n                }\n                // Add url args if enabled\n                if (context.urlArgs) {\n                    if (!val.value.match(/^\\s*data:/)) {\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                        var urlArgs = delimiter + context.urlArgs;\n                        if (val.value.indexOf('#') !== -1) {\n                            val.value = val.value.replace('#', urlArgs + \"#\");\n                        }\n                        else {\n                            val.value += urlArgs;\n                        }\n                    }\n                }\n            }\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\n        }\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\n        this.features = new Value(features);\n        this.rules = [new Ruleset(selectors, value)];\n        this.rules[0].allowImports = true;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n        this.setParent(selectors, this);\n        this.setParent(this.features, this);\n        this.setParent(this.rules, this);\n    };\n    Media.prototype = Object.assign(new AtRule(), {\n        type: 'Media',\n        isRulesetLike: function () {\n            return true;\n        },\n        accept: function (visitor) {\n            if (this.features) {\n                this.features = visitor.visit(this.features);\n            }\n            if (this.rules) {\n                this.rules = visitor.visitArray(this.rules);\n            }\n        },\n        genCSS: function (context, output) {\n            output.add('@media ', this._fileInfo, this._index);\n            this.features.genCSS(context, output);\n            this.outputRuleset(context, output, this.rules);\n        },\n        eval: function (context) {\n            if (!context.mediaBlocks) {\n                context.mediaBlocks = [];\n                context.mediaPath = [];\n            }\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n            if (this.debugInfo) {\n                this.rules[0].debugInfo = this.debugInfo;\n                media.debugInfo = this.debugInfo;\n            }\n            media.features = this.features.eval(context);\n            context.mediaPath.push(media);\n            context.mediaBlocks.push(media);\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n            context.frames.unshift(this.rules[0]);\n            media.rules = [this.rules[0].eval(context)];\n            context.frames.shift();\n            context.mediaPath.pop();\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\n                media.evalNested(context);\n        },\n        evalTop: function (context) {\n            var result = this;\n            // Render all dependent Media blocks.\n            if (context.mediaBlocks.length > 1) {\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\n                result = new Ruleset(selectors, context.mediaBlocks);\n                result.multiMedia = true;\n                result.copyVisibilityInfo(this.visibilityInfo());\n                this.setParent(result, this);\n            }\n            delete context.mediaBlocks;\n            delete context.mediaPath;\n            return result;\n        },\n        evalNested: function (context) {\n            var i;\n            var value;\n            var path = context.mediaPath.concat([this]);\n            // Extract the media-query conditions separated with `,` (OR).\n            for (i = 0; i < path.length; i++) {\n                value = path[i].features instanceof Value ?\n                    path[i].features.value : path[i].features;\n                path[i] = Array.isArray(value) ? value : [value];\n            }\n            // Trace all permutations to generate the resulting media-query.\n            //\n            // (a, b and c) with nested (d, e) ->\n            //    a and d\n            //    a and e\n            //    b and c and d\n            //    b and c and e\n            this.features = new Value(this.permute(path).map(function (path) {\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\n                for (i = path.length - 1; i > 0; i--) {\n                    path.splice(i, 0, new Anonymous('and'));\n                }\n                return new Expression(path);\n            }));\n            this.setParent(this.features, this);\n            // Fake a tree-node that doesn't output anything.\n            return new Ruleset([], []);\n        },\n        permute: function (arr) {\n            if (arr.length === 0) {\n                return [];\n            }\n            else if (arr.length === 1) {\n                return arr[0];\n            }\n            else {\n                var result = [];\n                var rest = this.permute(arr.slice(1));\n                for (var i = 0; i < rest.length; i++) {\n                    for (var j = 0; j < arr[0].length; j++) {\n                        result.push([arr[0][j]].concat(rest[i]));\n                    }\n                }\n                return result;\n            }\n        },\n        bubbleSelectors: function (selectors) {\n            if (!selectors) {\n                return;\n            }\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\n            this.setParent(this.rules, this);\n        }\n    });\n\n    //\n    // CSS @import node\n    //\n    // The general strategy here is that we don't want to wait\n    // for the parsing to be completed, before we start importing\n    // the file. That's because in the context of a browser,\n    // most of the time will be spent waiting for the server to respond.\n    //\n    // On creation, we push the import path to our import queue, though\n    // `import,push`, we also pass it a callback, which it'll call once\n    // the file has been fetched, and parsed.\n    //\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\n        this.options = options;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.path = path;\n        this.features = features;\n        this.allowRoot = true;\n        if (this.options.less !== undefined || this.options.inline) {\n            this.css = !this.options.less || this.options.inline;\n        }\n        else {\n            var pathValue = this.getPath();\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n                this.css = true;\n            }\n        }\n        this.copyVisibilityInfo(visibilityInfo);\n        this.setParent(this.features, this);\n        this.setParent(this.path, this);\n    };\n    Import.prototype = Object.assign(new Node(), {\n        type: 'Import',\n        accept: function (visitor) {\n            if (this.features) {\n                this.features = visitor.visit(this.features);\n            }\n            this.path = visitor.visit(this.path);\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\n                this.root = visitor.visit(this.root);\n            }\n        },\n        genCSS: function (context, output) {\n            if (this.css && this.path._fileInfo.reference === undefined) {\n                output.add('@import ', this._fileInfo, this._index);\n                this.path.genCSS(context, output);\n                if (this.features) {\n                    output.add(' ');\n                    this.features.genCSS(context, output);\n                }\n                output.add(';');\n            }\n        },\n        getPath: function () {\n            return (this.path instanceof URL) ?\n                this.path.value.value : this.path.value;\n        },\n        isVariableImport: function () {\n            var path = this.path;\n            if (path instanceof URL) {\n                path = path.value;\n            }\n            if (path instanceof Quoted) {\n                return path.containsVariables();\n            }\n            return true;\n        },\n        evalForImport: function (context) {\n            var path = this.path;\n            if (path instanceof URL) {\n                path = path.value;\n            }\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n        },\n        evalPath: function (context) {\n            var path = this.path.eval(context);\n            var fileInfo = this._fileInfo;\n            if (!(path instanceof URL)) {\n                // Add the rootpath if the URL requires a rewrite\n                var pathValue = path.value;\n                if (fileInfo &&\n                    pathValue &&\n                    context.pathRequiresRewrite(pathValue)) {\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\n                }\n                else {\n                    path.value = context.normalizePath(path.value);\n                }\n            }\n            return path;\n        },\n        eval: function (context) {\n            var result = this.doEval(context);\n            if (this.options.reference || this.blocksVisibility()) {\n                if (result.length || result.length === 0) {\n                    result.forEach(function (node) {\n                        node.addVisibilityBlock();\n                    });\n                }\n                else {\n                    result.addVisibilityBlock();\n                }\n            }\n            return result;\n        },\n        doEval: function (context) {\n            var ruleset;\n            var registry;\n            var features = this.features && this.features.eval(context);\n            if (this.options.isPlugin) {\n                if (this.root && this.root.eval) {\n                    try {\n                        this.root.eval(context);\n                    }\n                    catch (e) {\n                        e.message = 'Plugin error during evaluation';\n                        throw new LessError(e, this.root.imports, this.root.filename);\n                    }\n                }\n                registry = context.frames[0] && context.frames[0].functionRegistry;\n                if (registry && this.root && this.root.functions) {\n                    registry.addMultiple(this.root.functions);\n                }\n                return [];\n            }\n            if (this.skip) {\n                if (typeof this.skip === 'function') {\n                    this.skip = this.skip();\n                }\n                if (this.skip) {\n                    return [];\n                }\n            }\n            if (this.options.inline) {\n                var contents = new Anonymous(this.root, 0, {\n                    filename: this.importedFilename,\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\n                }, true, true);\n                return this.features ? new Media([contents], this.features.value) : [contents];\n            }\n            else if (this.css) {\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\n                if (!newImport.css && this.error) {\n                    throw this.error;\n                }\n                return newImport;\n            }\n            else if (this.root) {\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\n                ruleset.evalImports(context);\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n            }\n            else {\n                return [];\n            }\n        }\n    });\n\n    var JsEvalNode = function () { };\n    JsEvalNode.prototype = Object.assign(new Node(), {\n        evaluateJavaScript: function (expression, context) {\n            var result;\n            var that = this;\n            var evalContext = {};\n            if (!context.javascriptEnabled) {\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\n            });\n            try {\n                expression = new Function(\"return (\" + expression + \")\");\n            }\n            catch (e) {\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\",\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            var variables = context.frames[0].variables();\n            for (var k in variables) {\n                if (variables.hasOwnProperty(k)) {\n                    /* jshint loopfunc:true */\n                    evalContext[k.slice(1)] = {\n                        value: variables[k].value,\n                        toJS: function () {\n                            return this.value.eval(context).toCSS();\n                        }\n                    };\n                }\n            }\n            try {\n                result = expression.call(evalContext);\n            }\n            catch (e) {\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\",\n                    filename: this.fileInfo().filename,\n                    index: this.getIndex() };\n            }\n            return result;\n        },\n        jsify: function (obj) {\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\n            }\n            else {\n                return obj.toCSS();\n            }\n        }\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\n        this.escaped = escaped;\n        this.expression = string;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\n        type: 'JavaScript',\n        eval: function (context) {\n            var result = this.evaluateJavaScript(this.expression, context);\n            var type = typeof result;\n            if (type === 'number' && !isNaN(result)) {\n                return new Dimension(result);\n            }\n            else if (type === 'string') {\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\n            }\n            else if (Array.isArray(result)) {\n                return new Anonymous(result.join(', '));\n            }\n            else {\n                return new Anonymous(result);\n            }\n        }\n    });\n\n    var Assignment = function (key, val) {\n        this.key = key;\n        this.value = val;\n    };\n    Assignment.prototype = Object.assign(new Node(), {\n        type: 'Assignment',\n        accept: function (visitor) {\n            this.value = visitor.visit(this.value);\n        },\n        eval: function (context) {\n            if (this.value.eval) {\n                return new Assignment(this.key, this.value.eval(context));\n            }\n            return this;\n        },\n        genCSS: function (context, output) {\n            output.add(this.key + \"=\");\n            if (this.value.genCSS) {\n                this.value.genCSS(context, output);\n            }\n            else {\n                output.add(this.value);\n            }\n        }\n    });\n\n    var Condition = function (op, l, r, i, negate) {\n        this.op = op.trim();\n        this.lvalue = l;\n        this.rvalue = r;\n        this._index = i;\n        this.negate = negate;\n    };\n    Condition.prototype = Object.assign(new Node(), {\n        type: 'Condition',\n        accept: function (visitor) {\n            this.lvalue = visitor.visit(this.lvalue);\n            this.rvalue = visitor.visit(this.rvalue);\n        },\n        eval: function (context) {\n            var result = (function (op, a, b) {\n                switch (op) {\n                    case 'and': return a && b;\n                    case 'or': return a || b;\n                    default:\n                        switch (Node.compare(a, b)) {\n                            case -1:\n                                return op === '<' || op === '=<' || op === '<=';\n                            case 0:\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\n                            case 1:\n                                return op === '>' || op === '>=';\n                            default:\n                                return false;\n                        }\n                }\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n            return this.negate ? !result : result;\n        }\n    });\n\n    var UnicodeDescriptor = function (value) {\n        this.value = value;\n    };\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\n        type: 'UnicodeDescriptor'\n    });\n\n    var Negative = function (node) {\n        this.value = node;\n    };\n    Negative.prototype = Object.assign(new Node(), {\n        type: 'Negative',\n        genCSS: function (context, output) {\n            output.add('-');\n            this.value.genCSS(context, output);\n        },\n        eval: function (context) {\n            if (context.isMathOn()) {\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\n            }\n            return new Negative(this.value.eval(context));\n        }\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\n        this.selector = selector;\n        this.option = option;\n        this.object_id = Extend.next_id++;\n        this.parent_ids = [this.object_id];\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n        switch (option) {\n            case 'all':\n                this.allowBefore = true;\n                this.allowAfter = true;\n                break;\n            default:\n                this.allowBefore = false;\n                this.allowAfter = false;\n                break;\n        }\n        this.setParent(this.selector, this);\n    };\n    Extend.prototype = Object.assign(new Node(), {\n        type: 'Extend',\n        accept: function (visitor) {\n            this.selector = visitor.visit(this.selector);\n        },\n        eval: function (context) {\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        },\n        clone: function (context) {\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n        },\n        // it concatenates (joins) all selectors in selector array\n        findSelfSelectors: function (selectors) {\n            var selfElements = [], i, selectorElements;\n            for (i = 0; i < selectors.length; i++) {\n                selectorElements = selectors[i].elements;\n                // duplicate the logic in genCSS function inside the selector node.\n                // future TODO - move both logics into the selector joiner visitor\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\n                    selectorElements[0].combinator.value = ' ';\n                }\n                selfElements = selfElements.concat(selectors[i].elements);\n            }\n            this.selfSelectors = [new Selector(selfElements)];\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n        }\n    });\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\n        this.variable = variable;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.allowRoot = true;\n    };\n    VariableCall.prototype = Object.assign(new Node(), {\n        type: 'VariableCall',\n        eval: function (context) {\n            var rules;\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\n            if (!detachedRuleset.ruleset) {\n                if (detachedRuleset.rules) {\n                    rules = detachedRuleset;\n                }\n                else if (Array.isArray(detachedRuleset)) {\n                    rules = new Ruleset('', detachedRuleset);\n                }\n                else if (Array.isArray(detachedRuleset.value)) {\n                    rules = new Ruleset('', detachedRuleset.value);\n                }\n                else {\n                    throw error;\n                }\n                detachedRuleset = new DetachedRuleset(rules);\n            }\n            if (detachedRuleset.ruleset) {\n                return detachedRuleset.callEval(context);\n            }\n            throw error;\n        }\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\n        this.value = ruleCall;\n        this.lookups = lookups;\n        this._index = index;\n        this._fileInfo = fileInfo;\n    };\n    NamespaceValue.prototype = Object.assign(new Node(), {\n        type: 'NamespaceValue',\n        eval: function (context) {\n            var i, name, rules = this.value.eval(context);\n            for (i = 0; i < this.lookups.length; i++) {\n                name = this.lookups[i];\n                /**\n                 * Eval'd DRs return rulesets.\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\n                 * We need to do this because of late parsing of values\n                 */\n                if (Array.isArray(rules)) {\n                    rules = new Ruleset([new Selector()], rules);\n                }\n                if (name === '') {\n                    rules = rules.lastDeclaration();\n                }\n                else if (name.charAt(0) === '@') {\n                    if (name.charAt(1) === '@') {\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\n                    }\n                    if (rules.variables) {\n                        rules = rules.variable(name);\n                    }\n                    if (!rules) {\n                        throw { type: 'Name',\n                            message: \"variable \" + name + \" not found\",\n                            filename: this.fileInfo().filename,\n                            index: this.getIndex() };\n                    }\n                }\n                else {\n                    if (name.substring(0, 2) === '$@') {\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\n                    }\n                    else {\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\n                    }\n                    if (rules.properties) {\n                        rules = rules.property(name);\n                    }\n                    if (!rules) {\n                        throw { type: 'Name',\n                            message: \"property \\\"\" + name.substr(1) + \"\\\" not found\",\n                            filename: this.fileInfo().filename,\n                            index: this.getIndex() };\n                    }\n                    // Properties are an array of values, since a ruleset can have multiple props.\n                    // We pick the last one (the \"cascaded\" value)\n                    rules = rules[rules.length - 1];\n                }\n                if (rules.value) {\n                    rules = rules.eval(context).value;\n                }\n                if (rules.ruleset) {\n                    rules = rules.ruleset.eval(context);\n                }\n            }\n            return rules;\n        }\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\n        this.name = name || 'anonymous mixin';\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\n        this.params = params;\n        this.condition = condition;\n        this.variadic = variadic;\n        this.arity = params.length;\n        this.rules = rules;\n        this._lookups = {};\n        var optionalParameters = [];\n        this.required = params.reduce(function (count, p) {\n            if (!p.name || (p.name && !p.value)) {\n                return count + 1;\n            }\n            else {\n                optionalParameters.push(p.name);\n                return count;\n            }\n        }, 0);\n        this.optionalParameters = optionalParameters;\n        this.frames = frames;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n    };\n    Definition.prototype = Object.assign(new Ruleset(), {\n        type: 'MixinDefinition',\n        evalFirst: true,\n        accept: function (visitor) {\n            if (this.params && this.params.length) {\n                this.params = visitor.visitArray(this.params);\n            }\n            this.rules = visitor.visitArray(this.rules);\n            if (this.condition) {\n                this.condition = visitor.visit(this.condition);\n            }\n        },\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\n            /* jshint boss:true */\n            var frame = new Ruleset(null, null);\n            var varargs;\n            var arg;\n            var params = copyArray(this.params);\n            var i;\n            var j;\n            var val;\n            var name;\n            var isNamedFound;\n            var argIndex;\n            var argsLength = 0;\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n            }\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n            if (args) {\n                args = copyArray(args);\n                argsLength = args.length;\n                for (i = 0; i < argsLength; i++) {\n                    arg = args[i];\n                    if (name = (arg && arg.name)) {\n                        isNamedFound = false;\n                        for (j = 0; j < params.length; j++) {\n                            if (!evaldArguments[j] && name === params[j].name) {\n                                evaldArguments[j] = arg.value.eval(context);\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                                isNamedFound = true;\n                                break;\n                            }\n                        }\n                        if (isNamedFound) {\n                            args.splice(i, 1);\n                            i--;\n                            continue;\n                        }\n                        else {\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\n                        }\n                    }\n                }\n            }\n            argIndex = 0;\n            for (i = 0; i < params.length; i++) {\n                if (evaldArguments[i]) {\n                    continue;\n                }\n                arg = args && args[argIndex];\n                if (name = params[i].name) {\n                    if (params[i].variadic) {\n                        varargs = [];\n                        for (j = argIndex; j < argsLength; j++) {\n                            varargs.push(args[j].value.eval(context));\n                        }\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n                    }\n                    else {\n                        val = arg && arg.value;\n                        if (val) {\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\n                            if (Array.isArray(val)) {\n                                val = new DetachedRuleset(new Ruleset('', val));\n                            }\n                            else {\n                                val = val.eval(context);\n                            }\n                        }\n                        else if (params[i].value) {\n                            val = params[i].value.eval(mixinEnv);\n                            frame.resetCache();\n                        }\n                        else {\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\n                        }\n                        frame.prependRule(new Declaration(name, val));\n                        evaldArguments[i] = val;\n                    }\n                }\n                if (params[i].variadic && args) {\n                    for (j = argIndex; j < argsLength; j++) {\n                        evaldArguments[j] = args[j].value.eval(context);\n                    }\n                }\n                argIndex++;\n            }\n            return frame;\n        },\n        makeImportant: function () {\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\n                if (r.makeImportant) {\n                    return r.makeImportant(true);\n                }\n                else {\n                    return r;\n                }\n            });\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n            return result;\n        },\n        eval: function (context) {\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\n        },\n        evalCall: function (context, args, important) {\n            var _arguments = [];\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\n            var rules;\n            var ruleset;\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n            rules = copyArray(this.rules);\n            ruleset = new Ruleset(null, rules);\n            ruleset.originalRuleset = this;\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n            if (important) {\n                ruleset = ruleset.makeImportant();\n            }\n            return ruleset;\n        },\n        matchCondition: function (args, context) {\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\n                .concat(this.frames || []) // the parent namespace/mixin frames\n                .concat(context.frames)))) { // the current environment frames\n                return false;\n            }\n            return true;\n        },\n        matchArgs: function (args, context) {\n            var allArgsCnt = (args && args.length) || 0;\n            var len;\n            var optionalParameters = this.optionalParameters;\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n                if (optionalParameters.indexOf(p.name) < 0) {\n                    return count + 1;\n                }\n                else {\n                    return count;\n                }\n            }, 0);\n            if (!this.variadic) {\n                if (requiredArgsCnt < this.required) {\n                    return false;\n                }\n                if (allArgsCnt > this.params.length) {\n                    return false;\n                }\n            }\n            else {\n                if (requiredArgsCnt < (this.required - 1)) {\n                    return false;\n                }\n            }\n            // check patterns\n            len = Math.min(requiredArgsCnt, this.arity);\n            for (var i = 0; i < len; i++) {\n                if (!this.params[i].name && !this.params[i].variadic) {\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\n        this.selector = new Selector(elements);\n        this.arguments = args || [];\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.important = important;\n        this.allowRoot = true;\n        this.setParent(this.selector, this);\n    };\n    MixinCall.prototype = Object.assign(new Node(), {\n        type: 'MixinCall',\n        accept: function (visitor) {\n            if (this.selector) {\n                this.selector = visitor.visit(this.selector);\n            }\n            if (this.arguments.length) {\n                this.arguments = visitor.visitArray(this.arguments);\n            }\n        },\n        eval: function (context) {\n            var mixins;\n            var mixin;\n            var mixinPath;\n            var args = [];\n            var arg;\n            var argValue;\n            var rules = [];\n            var match = false;\n            var i;\n            var m;\n            var f;\n            var isRecursive;\n            var isOneFound;\n            var candidates = [];\n            var candidate;\n            var conditionResult = [];\n            var defaultResult;\n            var defFalseEitherCase = -1;\n            var defNone = 0;\n            var defTrue = 1;\n            var defFalse = 2;\n            var count;\n            var originalRuleset;\n            var noArgumentsFilter;\n            this.selector = this.selector.eval(context);\n            function calcDefGroup(mixin, mixinPath) {\n                var f, p, namespace;\n                for (f = 0; f < 2; f++) {\n                    conditionResult[f] = true;\n                    defaultFunc.value(f);\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                        namespace = mixinPath[p];\n                        if (namespace.matchCondition) {\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                        }\n                    }\n                    if (mixin.matchCondition) {\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n                    }\n                }\n                if (conditionResult[0] || conditionResult[1]) {\n                    if (conditionResult[0] != conditionResult[1]) {\n                        return conditionResult[1] ?\n                            defTrue : defFalse;\n                    }\n                    return defNone;\n                }\n                return defFalseEitherCase;\n            }\n            for (i = 0; i < this.arguments.length; i++) {\n                arg = this.arguments[i];\n                argValue = arg.value.eval(context);\n                if (arg.expand && Array.isArray(argValue.value)) {\n                    argValue = argValue.value;\n                    for (m = 0; m < argValue.length; m++) {\n                        args.push({ value: argValue[m] });\n                    }\n                }\n                else {\n                    args.push({ name: arg.name, value: argValue });\n                }\n            }\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\n            for (i = 0; i < context.frames.length; i++) {\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n                    isOneFound = true;\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\n                    // we make a final decision.\n                    for (m = 0; m < mixins.length; m++) {\n                        mixin = mixins[m].rule;\n                        mixinPath = mixins[m].path;\n                        isRecursive = false;\n                        for (f = 0; f < context.frames.length; f++) {\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                                isRecursive = true;\n                                break;\n                            }\n                        }\n                        if (isRecursive) {\n                            continue;\n                        }\n                        if (mixin.matchArgs(args, context)) {\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\n                            if (candidate.group !== defFalseEitherCase) {\n                                candidates.push(candidate);\n                            }\n                            match = true;\n                        }\n                    }\n                    defaultFunc.reset();\n                    count = [0, 0, 0];\n                    for (m = 0; m < candidates.length; m++) {\n                        count[candidates[m].group]++;\n                    }\n                    if (count[defNone] > 0) {\n                        defaultResult = defFalse;\n                    }\n                    else {\n                        defaultResult = defTrue;\n                        if ((count[defTrue] + count[defFalse]) > 1) {\n                            throw { type: 'Runtime',\n                                message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\",\n                                index: this.getIndex(), filename: this.fileInfo().filename };\n                        }\n                    }\n                    for (m = 0; m < candidates.length; m++) {\n                        candidate = candidates[m].group;\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\n                            try {\n                                mixin = candidates[m].mixin;\n                                if (!(mixin instanceof Definition)) {\n                                    originalRuleset = mixin.originalRuleset || mixin;\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                                    mixin.originalRuleset = originalRuleset;\n                                }\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\n                                this._setVisibilityToReplacement(newRules);\n                                Array.prototype.push.apply(rules, newRules);\n                            }\n                            catch (e) {\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\n                            }\n                        }\n                    }\n                    if (match) {\n                        return rules;\n                    }\n                }\n            }\n            if (isOneFound) {\n                throw { type: 'Runtime',\n                    message: \"No matching definition was found for `\" + this.format(args) + \"`\",\n                    index: this.getIndex(), filename: this.fileInfo().filename };\n            }\n            else {\n                throw { type: 'Name',\n                    message: this.selector.toCSS().trim() + \" is undefined\",\n                    index: this.getIndex(), filename: this.fileInfo().filename };\n            }\n        },\n        _setVisibilityToReplacement: function (replacement) {\n            var i, rule;\n            if (this.blocksVisibility()) {\n                for (i = 0; i < replacement.length; i++) {\n                    rule = replacement[i];\n                    rule.addVisibilityBlock();\n                }\n            }\n        },\n        format: function (args) {\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\n                var argValue = '';\n                if (a.name) {\n                    argValue += a.name + \":\";\n                }\n                if (a.value.toCSS) {\n                    argValue += a.value.toCSS();\n                }\n                else {\n                    argValue += '???';\n                }\n                return argValue;\n            }).join(', ') : '') + \")\";\n        }\n    });\n\n    var tree = {\n        Node: Node,\n        Color: Color,\n        AtRule: AtRule,\n        DetachedRuleset: DetachedRuleset,\n        Operation: Operation,\n        Dimension: Dimension,\n        Unit: Unit,\n        Keyword: Keyword,\n        Variable: Variable,\n        Property: Property,\n        Ruleset: Ruleset,\n        Element: Element,\n        Attribute: Attribute,\n        Combinator: Combinator,\n        Selector: Selector,\n        Quoted: Quoted,\n        Expression: Expression,\n        Declaration: Declaration,\n        Call: Call,\n        URL: URL,\n        Import: Import,\n        Comment: Comment,\n        Anonymous: Anonymous,\n        Value: Value,\n        JavaScript: JavaScript,\n        Assignment: Assignment,\n        Condition: Condition,\n        Paren: Paren,\n        Media: Media,\n        UnicodeDescriptor: UnicodeDescriptor,\n        Negative: Negative,\n        Extend: Extend,\n        VariableCall: VariableCall,\n        NamespaceValue: NamespaceValue,\n        mixin: {\n            Call: MixinCall,\n            Definition: Definition\n        }\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\n        function AbstractFileManager() {\n        }\n        AbstractFileManager.prototype.getPath = function (filename) {\n            var j = filename.lastIndexOf('?');\n            if (j > 0) {\n                filename = filename.slice(0, j);\n            }\n            j = filename.lastIndexOf('/');\n            if (j < 0) {\n                j = filename.lastIndexOf('\\\\');\n            }\n            if (j < 0) {\n                return '';\n            }\n            return filename.slice(0, j + 1);\n        };\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n        };\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\n            return this.tryAppendExtension(path, '.less');\n        };\n        AbstractFileManager.prototype.supportsSync = function () {\n            return false;\n        };\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\n            return false;\n        };\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\n        };\n        // TODO: pull out / replace?\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\n            if (!basePath) {\n                return laterPath;\n            }\n            return basePath + laterPath;\n        };\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\n            // diff between two paths to create a relative path\n            var urlParts = this.extractUrlParts(url);\n            var baseUrlParts = this.extractUrlParts(baseUrl);\n            var i;\n            var max;\n            var urlDirectories;\n            var baseUrlDirectories;\n            var diff = '';\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\n                return '';\n            }\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n            for (i = 0; i < max; i++) {\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\n                    break;\n                }\n            }\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\n            urlDirectories = urlParts.directories.slice(i);\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n                diff += '../';\n            }\n            for (i = 0; i < urlDirectories.length - 1; i++) {\n                diff += urlDirectories[i] + \"/\";\n            }\n            return diff;\n        };\n        // helper function, not part of API\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\n            // urlParts[1] = protocol://hostname/ OR /\n            // urlParts[2] = / if path relative to host base\n            // urlParts[3] = directories\n            // urlParts[4] = filename\n            // urlParts[5] = parameters\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\n            var urlParts = url.match(urlPartsRegex);\n            var returner = {};\n            var rawDirectories = [];\n            var directories = [];\n            var i;\n            var baseUrlParts;\n            if (!urlParts) {\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\n            }\n            // Stylesheets in IE don't always return the full path\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\n                baseUrlParts = baseUrl.match(urlPartsRegex);\n                if (!baseUrlParts) {\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\n                }\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n                if (!urlParts[2]) {\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\n                }\n            }\n            if (urlParts[3]) {\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\n                // collapse '..' and skip '.'\n                for (i = 0; i < rawDirectories.length; i++) {\n                    if (rawDirectories[i] === '..') {\n                        directories.pop();\n                    }\n                    else if (rawDirectories[i] !== '.') {\n                        directories.push(rawDirectories[i]);\n                    }\n                }\n            }\n            returner.hostPart = urlParts[1];\n            returner.directories = directories;\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n            returner.path = (urlParts[1] || '') + directories.join('/');\n            returner.filename = urlParts[4];\n            returner.fileUrl = returner.path + (urlParts[4] || '');\n            returner.url = returner.fileUrl + (urlParts[5] || '');\n            return returner;\n        };\n        return AbstractFileManager;\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\n        function AbstractPluginLoader() {\n            // Implemented by Node.js plugin loader\n            this.require = function () {\n                return null;\n            };\n        }\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\n            pluginManager = context.pluginManager;\n            if (fileInfo) {\n                if (typeof fileInfo === 'string') {\n                    filename = fileInfo;\n                }\n                else {\n                    filename = fileInfo.filename;\n                }\n            }\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\n            if (filename) {\n                pluginObj = pluginManager.get(filename);\n                if (pluginObj) {\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                    if (result) {\n                        return result;\n                    }\n                    try {\n                        if (pluginObj.use) {\n                            pluginObj.use.call(this.context, pluginObj);\n                        }\n                    }\n                    catch (e) {\n                        e.message = e.message || 'Error during @plugin call';\n                        return new LessError(e, imports, filename);\n                    }\n                    return pluginObj;\n                }\n            }\n            localModule = {\n                exports: {},\n                pluginManager: pluginManager,\n                fileInfo: fileInfo\n            };\n            registry = functionRegistry.create();\n            var registerPlugin = function (obj) {\n                pluginObj = obj;\n            };\n            try {\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n            }\n            catch (e) {\n                return new LessError(e, imports, filename);\n            }\n            if (!pluginObj) {\n                pluginObj = localModule.exports;\n            }\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n            if (pluginObj instanceof LessError) {\n                return pluginObj;\n            }\n            if (pluginObj) {\n                pluginObj.imports = imports;\n                pluginObj.filename = filename;\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                    if (result) {\n                        return result;\n                    }\n                }\n                // Run on first load\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n                pluginObj.functions = registry.getLocalFunctions();\n                // Need to call setOptions again because the pluginObj might have functions\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n                if (result) {\n                    return result;\n                }\n                // Run every @plugin call\n                try {\n                    if (pluginObj.use) {\n                        pluginObj.use.call(this.context, pluginObj);\n                    }\n                }\n                catch (e) {\n                    e.message = e.message || 'Error during @plugin call';\n                    return new LessError(e, imports, filename);\n                }\n            }\n            else {\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\n            }\n            return pluginObj;\n        };\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\n            if (options && !plugin.setOptions) {\n                return new LessError({\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\n                });\n            }\n            try {\n                plugin.setOptions && plugin.setOptions(options);\n            }\n            catch (e) {\n                return new LessError(e);\n            }\n        };\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\n            if (plugin) {\n                // support plugins being a function\n                // so that the plugin can be more usable programmatically\n                if (typeof plugin === 'function') {\n                    plugin = new plugin();\n                }\n                if (plugin.minVersion) {\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                        return new LessError({\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\n                        });\n                    }\n                }\n                return plugin;\n            }\n            return null;\n        };\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\n            if (typeof aVersion === 'string') {\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n                aVersion.shift();\n            }\n            for (var i = 0; i < aVersion.length; i++) {\n                if (aVersion[i] !== bVersion[i]) {\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n                }\n            }\n            return 0;\n        };\n        AbstractPluginLoader.prototype.versionToString = function (version) {\n            var versionString = '';\n            for (var i = 0; i < version.length; i++) {\n                versionString += (versionString ? '.' : '') + version[i];\n            }\n            return versionString;\n        };\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\n            for (var i = 0; i < plugins.length; i++) {\n                var plugin = plugins[i];\n                if (plugin.printUsage) {\n                    plugin.printUsage();\n                }\n            }\n        };\n        return AbstractPluginLoader;\n    }());\n\n    var _visitArgs = { visitDeeper: true };\n    var _hasIndexed = false;\n    function _noop(node) {\n        return node;\n    }\n    function indexNodeTypes(parent, ticker) {\n        // add .typeIndex to tree node types for lookup table\n        var key, child;\n        for (key in parent) {\n            /* eslint guard-for-in: 0 */\n            child = parent[key];\n            switch (typeof child) {\n                case 'function':\n                    // ignore bound functions directly on tree which do not have a prototype\n                    // or aren't nodes\n                    if (child.prototype && child.prototype.type) {\n                        child.prototype.typeIndex = ticker++;\n                    }\n                    break;\n                case 'object':\n                    ticker = indexNodeTypes(child, ticker);\n                    break;\n            }\n        }\n        return ticker;\n    }\n    var Visitor = /** @class */ (function () {\n        function Visitor(implementation) {\n            this._implementation = implementation;\n            this._visitInCache = {};\n            this._visitOutCache = {};\n            if (!_hasIndexed) {\n                indexNodeTypes(tree, 1);\n                _hasIndexed = true;\n            }\n        }\n        Visitor.prototype.visit = function (node) {\n            if (!node) {\n                return node;\n            }\n            var nodeTypeIndex = node.typeIndex;\n            if (!nodeTypeIndex) {\n                // MixinCall args aren't a node type?\n                if (node.value && node.value.typeIndex) {\n                    this.visit(node.value);\n                }\n                return node;\n            }\n            var impl = this._implementation;\n            var func = this._visitInCache[nodeTypeIndex];\n            var funcOut = this._visitOutCache[nodeTypeIndex];\n            var visitArgs = _visitArgs;\n            var fnName;\n            visitArgs.visitDeeper = true;\n            if (!func) {\n                fnName = \"visit\" + node.type;\n                func = impl[fnName] || _noop;\n                funcOut = impl[fnName + \"Out\"] || _noop;\n                this._visitInCache[nodeTypeIndex] = func;\n                this._visitOutCache[nodeTypeIndex] = funcOut;\n            }\n            if (func !== _noop) {\n                var newNode = func.call(impl, node, visitArgs);\n                if (node && impl.isReplacing) {\n                    node = newNode;\n                }\n            }\n            if (visitArgs.visitDeeper && node) {\n                if (node.length) {\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\n                        if (node[i].accept) {\n                            node[i].accept(this);\n                        }\n                    }\n                }\n                else if (node.accept) {\n                    node.accept(this);\n                }\n            }\n            if (funcOut != _noop) {\n                funcOut.call(impl, node);\n            }\n            return node;\n        };\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\n            if (!nodes) {\n                return nodes;\n            }\n            var cnt = nodes.length;\n            var i;\n            // Non-replacing\n            if (nonReplacing || !this._implementation.isReplacing) {\n                for (i = 0; i < cnt; i++) {\n                    this.visit(nodes[i]);\n                }\n                return nodes;\n            }\n            // Replacing\n            var out = [];\n            for (i = 0; i < cnt; i++) {\n                var evald = this.visit(nodes[i]);\n                if (evald === undefined) {\n                    continue;\n                }\n                if (!evald.splice) {\n                    out.push(evald);\n                }\n                else if (evald.length) {\n                    this.flatten(evald, out);\n                }\n            }\n            return out;\n        };\n        Visitor.prototype.flatten = function (arr, out) {\n            if (!out) {\n                out = [];\n            }\n            var cnt, i, item, nestedCnt, j, nestedItem;\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\n                item = arr[i];\n                if (item === undefined) {\n                    continue;\n                }\n                if (!item.splice) {\n                    out.push(item);\n                    continue;\n                }\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                    nestedItem = item[j];\n                    if (nestedItem === undefined) {\n                        continue;\n                    }\n                    if (!nestedItem.splice) {\n                        out.push(nestedItem);\n                    }\n                    else if (nestedItem.length) {\n                        this.flatten(nestedItem, out);\n                    }\n                }\n            }\n            return out;\n        };\n        return Visitor;\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\n        function ImportSequencer(onSequencerEmpty) {\n            this.imports = [];\n            this.variableImports = [];\n            this._onSequencerEmpty = onSequencerEmpty;\n            this._currentDepth = 0;\n        }\n        ImportSequencer.prototype.addImport = function (callback) {\n            var importSequencer = this, importItem = {\n                callback: callback,\n                args: null,\n                isReady: false\n            };\n            this.imports.push(importItem);\n            return function () {\n                importItem.args = Array.prototype.slice.call(arguments, 0);\n                importItem.isReady = true;\n                importSequencer.tryRun();\n            };\n        };\n        ImportSequencer.prototype.addVariableImport = function (callback) {\n            this.variableImports.push(callback);\n        };\n        ImportSequencer.prototype.tryRun = function () {\n            this._currentDepth++;\n            try {\n                while (true) {\n                    while (this.imports.length > 0) {\n                        var importItem = this.imports[0];\n                        if (!importItem.isReady) {\n                            return;\n                        }\n                        this.imports = this.imports.slice(1);\n                        importItem.callback.apply(null, importItem.args);\n                    }\n                    if (this.variableImports.length === 0) {\n                        break;\n                    }\n                    var variableImport = this.variableImports[0];\n                    this.variableImports = this.variableImports.slice(1);\n                    variableImport();\n                }\n            }\n            finally {\n                this._currentDepth--;\n            }\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\n                this._onSequencerEmpty();\n            }\n        };\n        return ImportSequencer;\n    }());\n\n    var ImportVisitor = function (importer, finish) {\n        this._visitor = new Visitor(this);\n        this._importer = importer;\n        this._finish = finish;\n        this.context = new contexts.Eval();\n        this.importCount = 0;\n        this.onceFileDetectionMap = {};\n        this.recursionDetector = {};\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n    };\n    ImportVisitor.prototype = {\n        isReplacing: false,\n        run: function (root) {\n            try {\n                // process the contents\n                this._visitor.visit(root);\n            }\n            catch (e) {\n                this.error = e;\n            }\n            this.isFinished = true;\n            this._sequencer.tryRun();\n        },\n        _onSequencerEmpty: function () {\n            if (!this.isFinished) {\n                return;\n            }\n            this._finish(this.error);\n        },\n        visitImport: function (importNode, visitArgs) {\n            var inlineCSS = importNode.options.inline;\n            if (!importNode.css || inlineCSS) {\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\n                var importParent = context.frames[0];\n                this.importCount++;\n                if (importNode.isVariableImport()) {\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n                }\n                else {\n                    this.processImportNode(importNode, context, importParent);\n                }\n            }\n            visitArgs.visitDeeper = false;\n        },\n        processImportNode: function (importNode, context, importParent) {\n            var evaldImportNode;\n            var inlineCSS = importNode.options.inline;\n            try {\n                evaldImportNode = importNode.evalForImport(context);\n            }\n            catch (e) {\n                if (!e.filename) {\n                    e.index = importNode.getIndex();\n                    e.filename = importNode.fileInfo().filename;\n                }\n                // attempt to eval properly and treat as css\n                importNode.css = true;\n                // if that fails, this error will be thrown\n                importNode.error = e;\n            }\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n                if (evaldImportNode.options.multiple) {\n                    context.importMultiple = true;\n                }\n                // try appending if we haven't determined if it is css or not\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\n                for (var i = 0; i < importParent.rules.length; i++) {\n                    if (importParent.rules[i] === importNode) {\n                        importParent.rules[i] = evaldImportNode;\n                        break;\n                    }\n                }\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\n            }\n            else {\n                this.importCount--;\n                if (this.isFinished) {\n                    this._sequencer.tryRun();\n                }\n            }\n        },\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n            if (e) {\n                if (!e.filename) {\n                    e.index = importNode.getIndex();\n                    e.filename = importNode.fileInfo().filename;\n                }\n                this.error = e;\n            }\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n            if (!context.importMultiple) {\n                if (duplicateImport) {\n                    importNode.skip = true;\n                }\n                else {\n                    importNode.skip = function () {\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\n                            return true;\n                        }\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\n                        return false;\n                    };\n                }\n            }\n            if (!fullPath && isOptional) {\n                importNode.skip = true;\n            }\n            if (root) {\n                importNode.root = root;\n                importNode.importedFilename = fullPath;\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                    importVisitor.recursionDetector[fullPath] = true;\n                    var oldContext = this.context;\n                    this.context = context;\n                    try {\n                        this._visitor.visit(root);\n                    }\n                    catch (e) {\n                        this.error = e;\n                    }\n                    this.context = oldContext;\n                }\n            }\n            importVisitor.importCount--;\n            if (importVisitor.isFinished) {\n                importVisitor._sequencer.tryRun();\n            }\n        },\n        visitDeclaration: function (declNode, visitArgs) {\n            if (declNode.value.type === 'DetachedRuleset') {\n                this.context.frames.unshift(declNode);\n            }\n            else {\n                visitArgs.visitDeeper = false;\n            }\n        },\n        visitDeclarationOut: function (declNode) {\n            if (declNode.value.type === 'DetachedRuleset') {\n                this.context.frames.shift();\n            }\n        },\n        visitAtRule: function (atRuleNode, visitArgs) {\n            this.context.frames.unshift(atRuleNode);\n        },\n        visitAtRuleOut: function (atRuleNode) {\n            this.context.frames.shift();\n        },\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n            this.context.frames.unshift(mixinDefinitionNode);\n        },\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\n            this.context.frames.shift();\n        },\n        visitRuleset: function (rulesetNode, visitArgs) {\n            this.context.frames.unshift(rulesetNode);\n        },\n        visitRulesetOut: function (rulesetNode) {\n            this.context.frames.shift();\n        },\n        visitMedia: function (mediaNode, visitArgs) {\n            this.context.frames.unshift(mediaNode.rules[0]);\n        },\n        visitMediaOut: function (mediaNode) {\n            this.context.frames.shift();\n        }\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\n        function SetTreeVisibilityVisitor(visible) {\n            this.visible = visible;\n        }\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\n            this.visit(root);\n        };\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\n            if (!nodes) {\n                return nodes;\n            }\n            var cnt = nodes.length;\n            var i;\n            for (i = 0; i < cnt; i++) {\n                this.visit(nodes[i]);\n            }\n            return nodes;\n        };\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\n            if (!node) {\n                return node;\n            }\n            if (node.constructor === Array) {\n                return this.visitArray(node);\n            }\n            if (!node.blocksVisibility || node.blocksVisibility()) {\n                return node;\n            }\n            if (this.visible) {\n                node.ensureVisibility();\n            }\n            else {\n                node.ensureInvisibility();\n            }\n            node.accept(this);\n            return node;\n        };\n        return SetTreeVisibilityVisitor;\n    }());\n\n    /* jshint loopfunc:true */\n    var ExtendFinderVisitor = /** @class */ (function () {\n        function ExtendFinderVisitor() {\n            this._visitor = new Visitor(this);\n            this.contexts = [];\n            this.allExtendsStack = [[]];\n        }\n        ExtendFinderVisitor.prototype.run = function (root) {\n            root = this._visitor.visit(root);\n            root.allExtends = this.allExtendsStack[0];\n            return root;\n        };\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n            if (rulesetNode.root) {\n                return;\n            }\n            var i;\n            var j;\n            var extend;\n            var allSelectorsExtendList = [];\n            var extendList;\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\n            for (i = 0; i < ruleCnt; i++) {\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\n                    allSelectorsExtendList.push(rules[i]);\n                    rulesetNode.extendOnEveryPath = true;\n                }\n            }\n            // now find every selector and apply the extends that apply to all extends\n            // and the ones which apply to an individual extend\n            var paths = rulesetNode.paths;\n            for (i = 0; i < paths.length; i++) {\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\n                    : allSelectorsExtendList;\n                if (extendList) {\n                    extendList = extendList.map(function (allSelectorsExtend) {\n                        return allSelectorsExtend.clone();\n                    });\n                }\n                for (j = 0; j < extendList.length; j++) {\n                    this.foundExtends = true;\n                    extend = extendList[j];\n                    extend.findSelfSelectors(selectorPath);\n                    extend.ruleset = rulesetNode;\n                    if (j === 0) {\n                        extend.firstExtendOnThisSelectorPath = true;\n                    }\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n                }\n            }\n            this.contexts.push(rulesetNode.selectors);\n        };\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\n            if (!rulesetNode.root) {\n                this.contexts.length = this.contexts.length - 1;\n            }\n        };\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n            mediaNode.allExtends = [];\n            this.allExtendsStack.push(mediaNode.allExtends);\n        };\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\n        };\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n            atRuleNode.allExtends = [];\n            this.allExtendsStack.push(atRuleNode.allExtends);\n        };\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\n        };\n        return ExtendFinderVisitor;\n    }());\n    var ProcessExtendsVisitor = /** @class */ (function () {\n        function ProcessExtendsVisitor() {\n            this._visitor = new Visitor(this);\n        }\n        ProcessExtendsVisitor.prototype.run = function (root) {\n            var extendFinder = new ExtendFinderVisitor();\n            this.extendIndices = {};\n            extendFinder.run(root);\n            if (!extendFinder.foundExtends) {\n                return root;\n            }\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n            this.allExtendsStack = [root.allExtends];\n            var newRoot = this._visitor.visit(root);\n            this.checkExtendsForNonMatched(root.allExtends);\n            return newRoot;\n        };\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\n            var indices = this.extendIndices;\n            extendList.filter(function (extend) {\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n            }).forEach(function (extend) {\n                var selector = '_unknown_';\n                try {\n                    selector = extend.selector.toCSS({});\n                }\n                catch (_) { }\n                if (!indices[extend.index + \" \" + selector]) {\n                    indices[extend.index + \" \" + selector] = true;\n                    logger$1.warn(\"extend '\" + selector + \"' has no matches\");\n                }\n            });\n        };\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\n            //\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n            // this means this new extend can then go and alter other extends\n            //\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n            // processed if we look at each selector at a time, as is done in visitRuleset\n            var extendIndex;\n            var targetExtendIndex;\n            var matches;\n            var extendsToAdd = [];\n            var newSelector;\n            var extendVisitor = this;\n            var selectorPath;\n            var extend;\n            var targetExtend;\n            var newExtend;\n            iterationCount = iterationCount || 0;\n            // loop through comparing every extend with every target extend.\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n            // and the second is the target.\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n            // case when processing media queries\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n                    extend = extendsList[extendIndex];\n                    targetExtend = extendsListTarget[targetExtendIndex];\n                    // look for circular references\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\n                        continue;\n                    }\n                    // find a match in the target extends self selector (the bit before :extend)\n                    selectorPath = [targetExtend.selfSelectors[0]];\n                    matches = extendVisitor.findMatch(extend, selectorPath);\n                    if (matches.length) {\n                        extend.hasFoundMatches = true;\n                        // we found a match, so for each self selector..\n                        extend.selfSelectors.forEach(function (selfSelector) {\n                            var info = targetExtend.visibilityInfo();\n                            // process the extend as usual\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\n                            // but now we create a new extend from it\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                            newExtend.selfSelectors = newSelector;\n                            // add the extend onto the list of extends for that selector\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\n                            // record that we need to add it.\n                            extendsToAdd.push(newExtend);\n                            newExtend.ruleset = targetExtend.ruleset;\n                            // remember its parents for circular references\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\n                            // extends will look at the same selector path, so when extending\n                            // we know that any others will be duplicates in terms of what is added to the css\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\n                                newExtend.firstExtendOnThisSelectorPath = true;\n                                targetExtend.ruleset.paths.push(newSelector);\n                            }\n                        });\n                    }\n                }\n            }\n            if (extendsToAdd.length) {\n                // try to detect circular references to stop a stack overflow.\n                // may no longer be needed.\n                this.extendChainCount++;\n                if (iterationCount > 100) {\n                    var selectorOne = '{unable to calculate}';\n                    var selectorTwo = '{unable to calculate}';\n                    try {\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\n                    }\n                    catch (e) { }\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\n                }\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n                // d extending e...\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n            }\n            else {\n                return extendsToAdd;\n            }\n        };\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n            if (rulesetNode.root) {\n                return;\n            }\n            var matches;\n            var pathIndex;\n            var extendIndex;\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\n            var selectorsToAdd = [];\n            var extendVisitor = this;\n            var selectorPath;\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n                    selectorPath = rulesetNode.paths[pathIndex];\n                    // extending extends happens initially, before the main pass\n                    if (rulesetNode.extendOnEveryPath) {\n                        continue;\n                    }\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\n                    if (extendList && extendList.length) {\n                        continue;\n                    }\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\n                    if (matches.length) {\n                        allExtends[extendIndex].hasFoundMatches = true;\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\n                            var extendedSelectors;\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                            selectorsToAdd.push(extendedSelectors);\n                        });\n                    }\n                }\n            }\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n        };\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\n            //\n            // look through the haystack selector path to try and find the needle - extend.selector\n            // returns an array of selector matches that can then be replaced\n            //\n            var haystackSelectorIndex;\n            var hackstackSelector;\n            var hackstackElementIndex;\n            var haystackElement;\n            var targetCombinator;\n            var i;\n            var extendVisitor = this;\n            var needleElements = extend.selector.elements;\n            var potentialMatches = [];\n            var potentialMatch;\n            var matches = [];\n            // loop through the haystack elements\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\n                            initialCombinator: haystackElement.combinator });\n                    }\n                    for (i = 0; i < potentialMatches.length; i++) {\n                        potentialMatch = potentialMatches[i];\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n                        // work out what the resulting combinator will be\n                        targetCombinator = haystackElement.combinator.value;\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\n                            targetCombinator = ' ';\n                        }\n                        // if we don't match, null our match to indicate failure\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\n                            potentialMatch = null;\n                        }\n                        else {\n                            potentialMatch.matched++;\n                        }\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n                        if (potentialMatch) {\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\n                            if (potentialMatch.finished &&\n                                (!extend.allowAfter &&\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\n                                potentialMatch = null;\n                            }\n                        }\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\n                        if (potentialMatch) {\n                            if (potentialMatch.finished) {\n                                potentialMatch.length = needleElements.length;\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n                                matches.push(potentialMatch);\n                            }\n                        }\n                        else {\n                            potentialMatches.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n            return matches;\n        };\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\n                return elementValue1 === elementValue2;\n            }\n            if (elementValue1 instanceof tree.Attribute) {\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n                    return false;\n                }\n                if (!elementValue1.value || !elementValue2.value) {\n                    if (elementValue1.value || elementValue2.value) {\n                        return false;\n                    }\n                    return true;\n                }\n                elementValue1 = elementValue1.value.value || elementValue1.value;\n                elementValue2 = elementValue2.value.value || elementValue2.value;\n                return elementValue1 === elementValue2;\n            }\n            elementValue1 = elementValue1.value;\n            elementValue2 = elementValue2.value;\n            if (elementValue1 instanceof tree.Selector) {\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n                    return false;\n                }\n                for (var i = 0; i < elementValue1.elements.length; i++) {\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                            return false;\n                        }\n                    }\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return false;\n        };\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\n            // for a set of matches, replace each match with the replacement selector\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n                match = matches[matchIndex];\n                selector = selectorPath[match.pathIndex];\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n                    path[path.length - 1].elements = path[path.length - 1]\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                    currentSelectorPathElementIndex = 0;\n                    currentSelectorPathIndex++;\n                }\n                newElements = selector.elements\n                    .slice(currentSelectorPathElementIndex, match.index)\n                    .concat([firstElement])\n                    .concat(replacementSelector.elements.slice(1));\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n                    path[path.length - 1].elements =\n                        path[path.length - 1].elements.concat(newElements);\n                }\n                else {\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n                    path.push(new tree.Selector(newElements));\n                }\n                currentSelectorPathIndex = match.endPathIndex;\n                currentSelectorPathElementIndex = match.endPathElementIndex;\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n                    currentSelectorPathElementIndex = 0;\n                    currentSelectorPathIndex++;\n                }\n            }\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n                path[path.length - 1].elements = path[path.length - 1]\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                currentSelectorPathIndex++;\n            }\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n            path = path.map(function (currentValue) {\n                // we can re-use elements here, because the visibility property matters only for selectors\n                var derived = currentValue.createDerived(currentValue.elements);\n                if (isVisible) {\n                    derived.ensureVisibility();\n                }\n                else {\n                    derived.ensureInvisibility();\n                }\n                return derived;\n            });\n            return path;\n        };\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n            this.allExtendsStack.push(newAllExtends);\n        };\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\n            var lastIndex = this.allExtendsStack.length - 1;\n            this.allExtendsStack.length = lastIndex;\n        };\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n            this.allExtendsStack.push(newAllExtends);\n        };\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\n            var lastIndex = this.allExtendsStack.length - 1;\n            this.allExtendsStack.length = lastIndex;\n        };\n        return ProcessExtendsVisitor;\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\n        function JoinSelectorVisitor() {\n            this.contexts = [[]];\n            this._visitor = new Visitor(this);\n        }\n        JoinSelectorVisitor.prototype.run = function (root) {\n            return this._visitor.visit(root);\n        };\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        };\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1];\n            var paths = [];\n            var selectors;\n            this.contexts.push(paths);\n            if (!rulesetNode.root) {\n                selectors = rulesetNode.selectors;\n                if (selectors) {\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\n                    if (selectors) {\n                        rulesetNode.joinSelectors(paths, context, selectors);\n                    }\n                }\n                if (!selectors) {\n                    rulesetNode.rules = null;\n                }\n                rulesetNode.paths = paths;\n            }\n        };\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\n            this.contexts.length = this.contexts.length - 1;\n        };\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1];\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\n        };\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1];\n            if (atRuleNode.rules && atRuleNode.rules.length) {\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\n            }\n        };\n        return JoinSelectorVisitor;\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\n        function CSSVisitorUtils(context) {\n            this._visitor = new Visitor(this);\n            this._context = context;\n        }\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\n            var rule;\n            if (!bodyRules) {\n                return false;\n            }\n            for (var r = 0; r < bodyRules.length; r++) {\n                rule = bodyRules[r];\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n                    // the atrule contains something that was referenced (likely by extend)\n                    // therefore it needs to be shown in output too\n                    return true;\n                }\n            }\n            return false;\n        };\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\n            if (owner && owner.rules) {\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\n            }\n        };\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\n            return (owner && owner.rules)\n                ? (owner.rules.length === 0) : true;\n        };\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\n            return (rulesetNode && rulesetNode.paths)\n                ? (rulesetNode.paths.length > 0) : false;\n        };\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\n            if (!node.blocksVisibility()) {\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n                    return;\n                }\n                return node;\n            }\n            var compiledRulesBody = node.rules[0];\n            this.keepOnlyVisibleChilds(compiledRulesBody);\n            if (this.isEmpty(compiledRulesBody)) {\n                return;\n            }\n            node.ensureVisibility();\n            node.removeVisibilityBlock();\n            return node;\n        };\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\n            if (rulesetNode.firstRoot) {\n                return true;\n            }\n            if (this.isEmpty(rulesetNode)) {\n                return false;\n            }\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n                return false;\n            }\n            return true;\n        };\n        return CSSVisitorUtils;\n    }());\n    var ToCSSVisitor = function (context) {\n        this._visitor = new Visitor(this);\n        this._context = context;\n        this.utils = new CSSVisitorUtils(context);\n    };\n    ToCSSVisitor.prototype = {\n        isReplacing: true,\n        run: function (root) {\n            return this._visitor.visit(root);\n        },\n        visitDeclaration: function (declNode, visitArgs) {\n            if (declNode.blocksVisibility() || declNode.variable) {\n                return;\n            }\n            return declNode;\n        },\n        visitMixinDefinition: function (mixinNode, visitArgs) {\n            // mixin definitions do not get eval'd - this means they keep state\n            // so we have to clear that state here so it isn't used if toCSS is called twice\n            mixinNode.frames = [];\n        },\n        visitExtend: function (extendNode, visitArgs) {\n        },\n        visitComment: function (commentNode, visitArgs) {\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n                return;\n            }\n            return commentNode;\n        },\n        visitMedia: function (mediaNode, visitArgs) {\n            var originalRules = mediaNode.rules[0].rules;\n            mediaNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n            return this.utils.resolveVisibility(mediaNode, originalRules);\n        },\n        visitImport: function (importNode, visitArgs) {\n            if (importNode.blocksVisibility()) {\n                return;\n            }\n            return importNode;\n        },\n        visitAtRule: function (atRuleNode, visitArgs) {\n            if (atRuleNode.rules && atRuleNode.rules.length) {\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n            }\n            else {\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n            }\n        },\n        visitAnonymous: function (anonymousNode, visitArgs) {\n            if (!anonymousNode.blocksVisibility()) {\n                anonymousNode.accept(this._visitor);\n                return anonymousNode;\n            }\n        },\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\n            // if there is only one nested ruleset and that one has no path, then it is\n            // just fake ruleset\n            function hasFakeRuleset(atRuleNode) {\n                var bodyRules = atRuleNode.rules;\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n            }\n            function getBodyRules(atRuleNode) {\n                var nodeRules = atRuleNode.rules;\n                if (hasFakeRuleset(atRuleNode)) {\n                    return nodeRules[0].rules;\n                }\n                return nodeRules;\n            }\n            // it is still true that it is only one ruleset in array\n            // this is last such moment\n            // process childs\n            var originalRules = getBodyRules(atRuleNode);\n            atRuleNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n            if (!this.utils.isEmpty(atRuleNode)) {\n                this._mergeRules(atRuleNode.rules[0].rules);\n            }\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\n        },\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\n            if (atRuleNode.blocksVisibility()) {\n                return;\n            }\n            if (atRuleNode.name === '@charset') {\n                // Only output the debug info together with subsequent @charset definitions\n                // a comment (or @media statement) before the actual @charset atrule would\n                // be considered illegal css as it has to be on the first line\n                if (this.charset) {\n                    if (atRuleNode.debugInfo) {\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\n                        comment.debugInfo = atRuleNode.debugInfo;\n                        return this._visitor.visit(comment);\n                    }\n                    return;\n                }\n                this.charset = true;\n            }\n            return atRuleNode;\n        },\n        checkValidNodes: function (rules, isRoot) {\n            if (!rules) {\n                return;\n            }\n            for (var i = 0; i < rules.length; i++) {\n                var ruleNode = rules[i];\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n                }\n                if (ruleNode instanceof tree.Call) {\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\",\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n                }\n                if (ruleNode.type && !ruleNode.allowRoot) {\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\",\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\n                }\n            }\n        },\n        visitRuleset: function (rulesetNode, visitArgs) {\n            // at this point rulesets are nested into each other\n            var rule;\n            var rulesets = [];\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n            if (!rulesetNode.root) {\n                // remove invisible paths\n                this._compileRulesetPaths(rulesetNode);\n                // remove rulesets from this ruleset body and compile them separately\n                var nodeRules = rulesetNode.rules;\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n                for (var i = 0; i < nodeRuleCnt;) {\n                    rule = nodeRules[i];\n                    if (rule && rule.rules) {\n                        // visit because we are moving them out from being a child\n                        rulesets.push(this._visitor.visit(rule));\n                        nodeRules.splice(i, 1);\n                        nodeRuleCnt--;\n                        continue;\n                    }\n                    i++;\n                }\n                // accept the visitor to remove rules and refactor itself\n                // then we can decide nogw whether we want it or not\n                // compile body\n                if (nodeRuleCnt > 0) {\n                    rulesetNode.accept(this._visitor);\n                }\n                else {\n                    rulesetNode.rules = null;\n                }\n                visitArgs.visitDeeper = false;\n            }\n            else { // if (! rulesetNode.root) {\n                rulesetNode.accept(this._visitor);\n                visitArgs.visitDeeper = false;\n            }\n            if (rulesetNode.rules) {\n                this._mergeRules(rulesetNode.rules);\n                this._removeDuplicateRules(rulesetNode.rules);\n            }\n            // now decide whether we keep the ruleset\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\n                rulesetNode.ensureVisibility();\n                rulesets.splice(0, 0, rulesetNode);\n            }\n            if (rulesets.length === 1) {\n                return rulesets[0];\n            }\n            return rulesets;\n        },\n        _compileRulesetPaths: function (rulesetNode) {\n            if (rulesetNode.paths) {\n                rulesetNode.paths = rulesetNode.paths\n                    .filter(function (p) {\n                    var i;\n                    if (p[0].elements[0].combinator.value === ' ') {\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\n                    }\n                    for (i = 0; i < p.length; i++) {\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n            }\n        },\n        _removeDuplicateRules: function (rules) {\n            if (!rules) {\n                return;\n            }\n            // remove duplicates\n            var ruleCache = {};\n            var ruleList;\n            var rule;\n            var i;\n            for (i = rules.length - 1; i >= 0; i--) {\n                rule = rules[i];\n                if (rule instanceof tree.Declaration) {\n                    if (!ruleCache[rule.name]) {\n                        ruleCache[rule.name] = rule;\n                    }\n                    else {\n                        ruleList = ruleCache[rule.name];\n                        if (ruleList instanceof tree.Declaration) {\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n                        }\n                        var ruleCSS = rule.toCSS(this._context);\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\n                            rules.splice(i, 1);\n                        }\n                        else {\n                            ruleList.push(ruleCSS);\n                        }\n                    }\n                }\n            }\n        },\n        _mergeRules: function (rules) {\n            if (!rules) {\n                return;\n            }\n            var groups = {};\n            var groupsArr = [];\n            for (var i = 0; i < rules.length; i++) {\n                var rule = rules[i];\n                if (rule.merge) {\n                    var key = rule.name;\n                    groups[key] ? rules.splice(i--, 1) :\n                        groupsArr.push(groups[key] = []);\n                    groups[key].push(rule);\n                }\n            }\n            groupsArr.forEach(function (group) {\n                if (group.length > 0) {\n                    var result_1 = group[0];\n                    var space_1 = [];\n                    var comma_1 = [new tree.Expression(space_1)];\n                    group.forEach(function (rule) {\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\n                            comma_1.push(new tree.Expression(space_1 = []));\n                        }\n                        space_1.push(rule.value);\n                        result_1.important = result_1.important || rule.important;\n                    });\n                    result_1.value = new tree.Value(comma_1);\n                }\n            });\n        }\n    };\n\n    var visitors = {\n        Visitor: Visitor,\n        ImportVisitor: ImportVisitor,\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\n        ExtendVisitor: ProcessExtendsVisitor,\n        JoinSelectorVisitor: JoinSelectorVisitor,\n        ToCSSVisitor: ToCSSVisitor\n    };\n\n    // Split the input into chunks.\n    function chunker (input, fail) {\n        var len = input.length;\n        var level = 0;\n        var parenLevel = 0;\n        var lastOpening;\n        var lastOpeningParen;\n        var lastMultiComment;\n        var lastMultiCommentEndBrace;\n        var chunks = [];\n        var emitFrom = 0;\n        var chunkerCurrentIndex;\n        var currentChunkStartIndex;\n        var cc;\n        var cc2;\n        var matched;\n        function emitChunk(force) {\n            var len = chunkerCurrentIndex - emitFrom;\n            if (((len < 512) && !force) || !len) {\n                return;\n            }\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n            emitFrom = chunkerCurrentIndex + 1;\n        }\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n            cc = input.charCodeAt(chunkerCurrentIndex);\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\n                // a-z or whitespace\n                continue;\n            }\n            switch (cc) {\n                case 40: // (\n                    parenLevel++;\n                    lastOpeningParen = chunkerCurrentIndex;\n                    continue;\n                case 41: // )\n                    if (--parenLevel < 0) {\n                        return fail('missing opening `(`', chunkerCurrentIndex);\n                    }\n                    continue;\n                case 59: // ;\n                    if (!parenLevel) {\n                        emitChunk();\n                    }\n                    continue;\n                case 123: // {\n                    level++;\n                    lastOpening = chunkerCurrentIndex;\n                    continue;\n                case 125: // }\n                    if (--level < 0) {\n                        return fail('missing opening `{`', chunkerCurrentIndex);\n                    }\n                    if (!level && !parenLevel) {\n                        emitChunk();\n                    }\n                    continue;\n                case 92: // \\\n                    if (chunkerCurrentIndex < len - 1) {\n                        chunkerCurrentIndex++;\n                        continue;\n                    }\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\n                case 34:\n                case 39:\n                case 96: // \", ' and `\n                    matched = 0;\n                    currentChunkStartIndex = chunkerCurrentIndex;\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if (cc2 > 96) {\n                            continue;\n                        }\n                        if (cc2 == cc) {\n                            matched = 1;\n                            break;\n                        }\n                        if (cc2 == 92) { // \\\n                            if (chunkerCurrentIndex == len - 1) {\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\n                            }\n                            chunkerCurrentIndex++;\n                        }\n                    }\n                    if (matched) {\n                        continue;\n                    }\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\n                case 47: // /, check for comment\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\n                        continue;\n                    }\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n                    if (cc2 == 47) {\n                        // //, find lnfeed\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\n                                break;\n                            }\n                        }\n                    }\n                    else if (cc2 == 42) {\n                        // /*, find */\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\n                            if (cc2 == 125) {\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\n                            }\n                            if (cc2 != 42) {\n                                continue;\n                            }\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\n                                break;\n                            }\n                        }\n                        if (chunkerCurrentIndex == len - 1) {\n                            return fail('missing closing `*/`', currentChunkStartIndex);\n                        }\n                        chunkerCurrentIndex++;\n                    }\n                    continue;\n                case 42: // *, check for unmatched */\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\n                    }\n                    continue;\n            }\n        }\n        if (level !== 0) {\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\n                return fail('missing closing `}` or `*/`', lastOpening);\n            }\n            else {\n                return fail('missing closing `}`', lastOpening);\n            }\n        }\n        else if (parenLevel !== 0) {\n            return fail('missing closing `)`', lastOpeningParen);\n        }\n        emitChunk(true);\n        return chunks;\n    }\n\n    var getParserInput = (function () {\n        var // Less input string\n        input;\n        var // current chunk\n        j;\n        var // holds state for backtracking\n        saveStack = [];\n        var // furthest index the parser has gone to\n        furthest;\n        var // if this is furthest we got to, this is the probably cause\n        furthestPossibleErrorMessage;\n        var // chunkified input\n        chunks;\n        var // current chunk\n        current;\n        var // index of current chunk, in `input`\n        currentPos;\n        var parserInput = {};\n        var CHARCODE_SPACE = 32;\n        var CHARCODE_TAB = 9;\n        var CHARCODE_LF = 10;\n        var CHARCODE_CR = 13;\n        var CHARCODE_PLUS = 43;\n        var CHARCODE_COMMA = 44;\n        var CHARCODE_FORWARD_SLASH = 47;\n        var CHARCODE_9 = 57;\n        function skipWhitespace(length) {\n            var oldi = parserInput.i;\n            var oldj = j;\n            var curr = parserInput.i - currentPos;\n            var endIndex = parserInput.i + current.length - curr;\n            var mem = (parserInput.i += length);\n            var inp = input;\n            var c;\n            var nextChar;\n            var comment;\n            for (; parserInput.i < endIndex; parserInput.i++) {\n                c = inp.charCodeAt(parserInput.i);\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n                    nextChar = inp.charAt(parserInput.i + 1);\n                    if (nextChar === '/') {\n                        comment = { index: parserInput.i, isLineComment: true };\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\n                        if (nextNewLine < 0) {\n                            nextNewLine = endIndex;\n                        }\n                        parserInput.i = nextNewLine;\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n                        parserInput.commentStore.push(comment);\n                        continue;\n                    }\n                    else if (nextChar === '*') {\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\n                        if (nextStarSlash >= 0) {\n                            comment = {\n                                index: parserInput.i,\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                                isLineComment: false\n                            };\n                            parserInput.i += comment.text.length - 1;\n                            parserInput.commentStore.push(comment);\n                            continue;\n                        }\n                    }\n                    break;\n                }\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\n                    break;\n                }\n            }\n            current = current.slice(length + parserInput.i - mem + curr);\n            currentPos = parserInput.i;\n            if (!current.length) {\n                if (j < chunks.length - 1) {\n                    current = chunks[++j];\n                    skipWhitespace(0); // skip space at the beginning of a chunk\n                    return true; // things changed\n                }\n                parserInput.finished = true;\n            }\n            return oldi !== parserInput.i || oldj !== j;\n        }\n        parserInput.save = function () {\n            currentPos = parserInput.i;\n            saveStack.push({ current: current, i: parserInput.i, j: j });\n        };\n        parserInput.restore = function (possibleErrorMessage) {\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\n                furthest = parserInput.i;\n                furthestPossibleErrorMessage = possibleErrorMessage;\n            }\n            var state = saveStack.pop();\n            current = state.current;\n            currentPos = parserInput.i = state.i;\n            j = state.j;\n        };\n        parserInput.forget = function () {\n            saveStack.pop();\n        };\n        parserInput.isWhitespace = function (offset) {\n            var pos = parserInput.i + (offset || 0);\n            var code = input.charCodeAt(pos);\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\n        };\n        // Specialization of $(tok)\n        parserInput.$re = function (tok) {\n            if (parserInput.i > currentPos) {\n                current = current.slice(parserInput.i - currentPos);\n                currentPos = parserInput.i;\n            }\n            var m = tok.exec(current);\n            if (!m) {\n                return null;\n            }\n            skipWhitespace(m[0].length);\n            if (typeof m === 'string') {\n                return m;\n            }\n            return m.length === 1 ? m[0] : m;\n        };\n        parserInput.$char = function (tok) {\n            if (input.charAt(parserInput.i) !== tok) {\n                return null;\n            }\n            skipWhitespace(1);\n            return tok;\n        };\n        parserInput.$str = function (tok) {\n            var tokLength = tok.length;\n            // https://jsperf.com/string-startswith/21\n            for (var i = 0; i < tokLength; i++) {\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                    return null;\n                }\n            }\n            skipWhitespace(tokLength);\n            return tok;\n        };\n        parserInput.$quoted = function (loc) {\n            var pos = loc || parserInput.i;\n            var startChar = input.charAt(pos);\n            if (startChar !== '\\'' && startChar !== '\"') {\n                return;\n            }\n            var length = input.length;\n            var currentPosition = pos;\n            for (var i = 1; i + currentPosition < length; i++) {\n                var nextChar = input.charAt(i + currentPosition);\n                switch (nextChar) {\n                    case '\\\\':\n                        i++;\n                        continue;\n                    case '\\r':\n                    case '\\n':\n                        break;\n                    case startChar:\n                        var str = input.substr(currentPosition, i + 1);\n                        if (!loc && loc !== 0) {\n                            skipWhitespace(i + 1);\n                            return str;\n                        }\n                        return [startChar, str];\n                }\n            }\n            return null;\n        };\n        /**\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\n         * until matching token (outside of blocks)\n         */\n        parserInput.$parseUntil = function (tok) {\n            var quote = '';\n            var returnVal = null;\n            var inComment = false;\n            var blockDepth = 0;\n            var blockStack = [];\n            var parseGroups = [];\n            var length = input.length;\n            var startPos = parserInput.i;\n            var lastPos = parserInput.i;\n            var i = parserInput.i;\n            var loop = true;\n            var testChar;\n            if (typeof tok === 'string') {\n                testChar = function (char) { return char === tok; };\n            }\n            else {\n                testChar = function (char) { return tok.test(char); };\n            }\n            do {\n                var nextChar = input.charAt(i);\n                if (blockDepth === 0 && testChar(nextChar)) {\n                    returnVal = input.substr(lastPos, i - lastPos);\n                    if (returnVal) {\n                        parseGroups.push(returnVal);\n                    }\n                    else {\n                        parseGroups.push(' ');\n                    }\n                    returnVal = parseGroups;\n                    skipWhitespace(i - startPos);\n                    loop = false;\n                }\n                else {\n                    if (inComment) {\n                        if (nextChar === '*' &&\n                            input.charAt(i + 1) === '/') {\n                            i++;\n                            blockDepth--;\n                            inComment = false;\n                        }\n                        i++;\n                        continue;\n                    }\n                    switch (nextChar) {\n                        case '\\\\':\n                            i++;\n                            nextChar = input.charAt(i);\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\n                            lastPos = i + 1;\n                            break;\n                        case '/':\n                            if (input.charAt(i + 1) === '*') {\n                                i++;\n                                inComment = true;\n                                blockDepth++;\n                            }\n                            break;\n                        case '\\'':\n                        case '\"':\n                            quote = parserInput.$quoted(i);\n                            if (quote) {\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\n                                i += quote[1].length - 1;\n                                lastPos = i + 1;\n                            }\n                            else {\n                                skipWhitespace(i - startPos);\n                                returnVal = nextChar;\n                                loop = false;\n                            }\n                            break;\n                        case '{':\n                            blockStack.push('}');\n                            blockDepth++;\n                            break;\n                        case '(':\n                            blockStack.push(')');\n                            blockDepth++;\n                            break;\n                        case '[':\n                            blockStack.push(']');\n                            blockDepth++;\n                            break;\n                        case '}':\n                        case ')':\n                        case ']':\n                            var expected = blockStack.pop();\n                            if (nextChar === expected) {\n                                blockDepth--;\n                            }\n                            else {\n                                // move the parser to the error and return expected\n                                skipWhitespace(i - startPos);\n                                returnVal = expected;\n                                loop = false;\n                            }\n                    }\n                    i++;\n                    if (i > length) {\n                        loop = false;\n                    }\n                }\n            } while (loop);\n            return returnVal ? returnVal : null;\n        };\n        parserInput.autoCommentAbsorb = true;\n        parserInput.commentStore = [];\n        parserInput.finished = false;\n        // Same as $(), but don't change the state of the parser,\n        // just return the match.\n        parserInput.peek = function (tok) {\n            if (typeof tok === 'string') {\n                // https://jsperf.com/string-startswith/21\n                for (var i = 0; i < tok.length; i++) {\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return tok.test(current);\n            }\n        };\n        // Specialization of peek()\n        // TODO remove or change some currentChar calls to peekChar\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\n        parserInput.getInput = function () { return input; };\n        parserInput.peekNotNumeric = function () {\n            var c = input.charCodeAt(parserInput.i);\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n        };\n        parserInput.start = function (str, chunkInput, failFunction) {\n            input = str;\n            parserInput.i = j = currentPos = furthest = 0;\n            // chunking apparently makes things quicker (but my tests indicate\n            // it might actually make things slower in node at least)\n            // and it is a non-perfect parse - it can't recognise\n            // unquoted urls, meaning it can't distinguish comments\n            // meaning comments with quotes or {}() in them get 'counted'\n            // and then lead to parse errors.\n            // In addition if the chunking chunks in the wrong place we might\n            // not be able to parse a parser statement in one go\n            // this is officially deprecated but can be switched on via an option\n            // in the case it causes too much performance issues.\n            if (chunkInput) {\n                chunks = chunker(str, failFunction);\n            }\n            else {\n                chunks = [str];\n            }\n            current = chunks[0];\n            skipWhitespace(0);\n        };\n        parserInput.end = function () {\n            var message;\n            var isFinished = parserInput.i >= input.length;\n            if (parserInput.i < furthest) {\n                message = furthestPossibleErrorMessage;\n                parserInput.i = furthest;\n            }\n            return {\n                isFinished: isFinished,\n                furthest: parserInput.i,\n                furthestPossibleErrorMessage: message,\n                furthestReachedEnd: parserInput.i >= input.length - 1,\n                furthestChar: input[parserInput.i]\n            };\n        };\n        return parserInput;\n    });\n\n    //\n    // less.js - parser\n    //\n    //    A relatively straight-forward predictive parser.\n    //    There is no tokenization/lexing stage, the input is parsed\n    //    in one sweep.\n    //\n    //    To make the parser fast enough to run in the browser, several\n    //    optimization had to be made:\n    //\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\n    //      The solution is to chunkify the input into smaller strings.\n    //      The chunks are stored in the `chunks` var,\n    //      `j` holds the current chunk index, and `currentPos` holds\n    //      the index of the current chunk in relation to `input`.\n    //      This gives us an almost 4x speed-up.\n    //\n    //    - In many cases, we don't need to match individual tokens;\n    //      for example, if a value doesn't hold any variables, operations\n    //      or dynamic references, the parser can effectively 'skip' it,\n    //      treating it as a literal.\n    //      An example would be '1px solid #000' - which evaluates to itself,\n    //      we don't need to know what the individual components are.\n    //      The drawback, of course is that you don't get the benefits of\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n    //      and a smaller speed-up in the code-gen.\n    //\n    //\n    //    Token matching is done with the `$` function, which either takes\n    //    a terminal string or regexp, or a non-terminal function to call.\n    //    It also takes care of moving all the indices forwards.\n    //\n    var Parser = function Parser(context, imports, fileInfo) {\n        var parsers;\n        var parserInput = getParserInput();\n        function error(msg, type) {\n            throw new LessError({\n                index: parserInput.i,\n                filename: fileInfo.filename,\n                type: type || 'Syntax',\n                message: msg\n            }, imports);\n        }\n        function expect(arg, msg) {\n            // some older browsers return typeof 'function' for RegExp\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\n            if (result) {\n                return result;\n            }\n            error(msg || (typeof arg === 'string'\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\n                : 'unexpected token'));\n        }\n        // Specialization of expect()\n        function expectChar(arg, msg) {\n            if (parserInput.$char(arg)) {\n                return arg;\n            }\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\n        }\n        function getDebugInfo(index) {\n            var filename = fileInfo.filename;\n            return {\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\n                fileName: filename\n            };\n        }\n        /**\n         *  Used after initial parsing to create nodes on the fly\n         *\n         *  @param {String} str          - string to parse\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n         *  @param {Number} currentIndex - start number to begin indexing\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n         */\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n            var result;\n            var returnNodes = [];\n            var parser = parserInput;\n            try {\n                parser.start(str, false, function fail(msg, index) {\n                    callback({\n                        message: msg,\n                        index: index + currentIndex\n                    });\n                });\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\n                    i = parser.i;\n                    result = parsers[p]();\n                    if (result) {\n                        try {\n                            result._index = i + currentIndex;\n                            result._fileInfo = fileInfo;\n                        }\n                        catch (e) { }\n                        returnNodes.push(result);\n                    }\n                    else {\n                        returnNodes.push(null);\n                    }\n                }\n                var endInfo = parser.end();\n                if (endInfo.isFinished) {\n                    callback(null, returnNodes);\n                }\n                else {\n                    callback(true, null);\n                }\n            }\n            catch (e) {\n                throw new LessError({\n                    index: e.index + currentIndex,\n                    message: e.message\n                }, imports, fileInfo.filename);\n            }\n        }\n        //\n        // The Parser\n        //\n        return {\n            parserInput: parserInput,\n            imports: imports,\n            fileInfo: fileInfo,\n            parseNode: parseNode,\n            //\n            // Parse an input string into an abstract syntax tree,\n            // @param str A string containing 'less' markup\n            // @param callback call `callback` when done.\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n            //\n            parse: function (str, callback, additionalData) {\n                var root;\n                var error = null;\n                var globalVars;\n                var modifyVars;\n                var ignored;\n                var preText = '';\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\n                if (context.pluginManager) {\n                    var preProcessors = context.pluginManager.getPreProcessors();\n                    for (var i = 0; i < preProcessors.length; i++) {\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\n                    }\n                }\n                if (globalVars || (additionalData && additionalData.banner)) {\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\n                    ignored = imports.contentsIgnoredChars;\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n                    ignored[fileInfo.filename] += preText.length;\n                }\n                str = str.replace(/\\r\\n?/g, '\\n');\n                // Remove potential UTF Byte Order Mark\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n                imports.contents[fileInfo.filename] = str;\n                // Start with the primary rule.\n                // The whole syntax tree is held under a Ruleset node,\n                // with the `root` property set to true, so no `{}` are\n                // output. The callback is called when the input is parsed.\n                try {\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\n                        throw new LessError({\n                            index: index,\n                            type: 'Parse',\n                            message: msg,\n                            filename: fileInfo.filename\n                        }, imports);\n                    });\n                    tree.Node.prototype.parse = this;\n                    root = new tree.Ruleset(null, this.parsers.primary());\n                    tree.Node.prototype.rootNode = root;\n                    root.root = true;\n                    root.firstRoot = true;\n                    root.functionRegistry = functionRegistry.inherit();\n                }\n                catch (e) {\n                    return callback(new LessError(e, imports, fileInfo.filename));\n                }\n                // If `i` is smaller than the `input.length - 1`,\n                // it means the parser wasn't able to parse the whole\n                // string, so we've got a parsing error.\n                //\n                // We try to extract a \\n delimited string,\n                // showing the line where the parse error occurred.\n                // We split it up into two parts (the part which parsed,\n                // and the part which didn't), so we can color them differently.\n                var endInfo = parserInput.end();\n                if (!endInfo.isFinished) {\n                    var message = endInfo.furthestPossibleErrorMessage;\n                    if (!message) {\n                        message = 'Unrecognised input';\n                        if (endInfo.furthestChar === '}') {\n                            message += '. Possibly missing opening \\'{\\'';\n                        }\n                        else if (endInfo.furthestChar === ')') {\n                            message += '. Possibly missing opening \\'(\\'';\n                        }\n                        else if (endInfo.furthestReachedEnd) {\n                            message += '. Possibly missing something';\n                        }\n                    }\n                    error = new LessError({\n                        type: 'Parse',\n                        message: message,\n                        index: endInfo.furthest,\n                        filename: fileInfo.filename\n                    }, imports);\n                }\n                var finish = function (e) {\n                    e = error || e || imports.error;\n                    if (e) {\n                        if (!(e instanceof LessError)) {\n                            e = new LessError(e, imports, fileInfo.filename);\n                        }\n                        return callback(e);\n                    }\n                    else {\n                        return callback(null, root);\n                    }\n                };\n                if (context.processImports !== false) {\n                    new visitors.ImportVisitor(imports, finish)\n                        .run(root);\n                }\n                else {\n                    return finish();\n                }\n            },\n            //\n            // Here in, the parsing rules/functions\n            //\n            // The basic structure of the syntax tree generated is as follows:\n            //\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n            //\n            // Here's some Less code:\n            //\n            //    .class {\n            //      color: #fff;\n            //      border: 1px solid #000;\n            //      width: @w + 4px;\n            //      > .child {...}\n            //    }\n            //\n            // And here's what the parse tree might look like:\n            //\n            //     Ruleset (Selector '.class', [\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n            //         Ruleset (Selector [Element '>', '.child'], [...])\n            //     ])\n            //\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n            //  first, before parsing, that's when we use `peek()`.\n            //\n            parsers: parsers = {\n                //\n                // The `primary` rule is the *entry* and *exit* point of the parser.\n                // The rules here can appear at any level of the parse tree.\n                //\n                // The recursive nature of the grammar is an interplay between the `block`\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n                // as represented by this simplified grammar:\n                //\n                //     primary  →  (ruleset | declaration)+\n                //     ruleset  →  selector+ block\n                //     block    →  '{' primary '}'\n                //\n                // Only at one point is the primary rule not called from the\n                // block rule: at the root level.\n                //\n                primary: function () {\n                    var mixin = this.mixin;\n                    var root = [];\n                    var node;\n                    while (true) {\n                        while (true) {\n                            node = this.comment();\n                            if (!node) {\n                                break;\n                            }\n                            root.push(node);\n                        }\n                        // always process comments before deciding if finished\n                        if (parserInput.finished) {\n                            break;\n                        }\n                        if (parserInput.peek('}')) {\n                            break;\n                        }\n                        node = this.extendRule();\n                        if (node) {\n                            root = root.concat(node);\n                            continue;\n                        }\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\n                        if (node) {\n                            root.push(node);\n                        }\n                        else {\n                            var foundSemiColon = false;\n                            while (parserInput.$char(';')) {\n                                foundSemiColon = true;\n                            }\n                            if (!foundSemiColon) {\n                                break;\n                            }\n                        }\n                    }\n                    return root;\n                },\n                // comments are collected by the main parsing mechanism and then assigned to nodes\n                // where the current structure allows it\n                comment: function () {\n                    if (parserInput.commentStore.length) {\n                        var comment = parserInput.commentStore.shift();\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\n                    }\n                },\n                //\n                // Entities are tokens which can be found inside an Expression\n                //\n                entities: {\n                    mixinLookup: function () {\n                        return parsers.mixin.call(true, true);\n                    },\n                    //\n                    // A string, which supports escaping \" and '\n                    //\n                    //     \"milky way\" 'he\\'s the one!'\n                    //\n                    quoted: function (forceEscaped) {\n                        var str;\n                        var index = parserInput.i;\n                        var isEscaped = false;\n                        parserInput.save();\n                        if (parserInput.$char('~')) {\n                            isEscaped = true;\n                        }\n                        else if (forceEscaped) {\n                            parserInput.restore();\n                            return;\n                        }\n                        str = parserInput.$quoted();\n                        if (!str) {\n                            parserInput.restore();\n                            return;\n                        }\n                        parserInput.forget();\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n                    },\n                    //\n                    // A catch-all word, such as:\n                    //\n                    //     black border-collapse\n                    //\n                    keyword: function () {\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\n                        if (k) {\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\n                        }\n                    },\n                    //\n                    // A function call\n                    //\n                    //     rgb(255, 0, 255)\n                    //\n                    // The arguments are parsed with the `entities.arguments` parser.\n                    //\n                    call: function () {\n                        var name;\n                        var args;\n                        var func;\n                        var index = parserInput.i;\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                        if (parserInput.peek(/^url\\(/i)) {\n                            return;\n                        }\n                        parserInput.save();\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\n                        if (!name) {\n                            parserInput.forget();\n                            return;\n                        }\n                        name = name[1];\n                        func = this.customFuncCall(name);\n                        if (func) {\n                            args = func.parse();\n                            if (args && func.stop) {\n                                parserInput.forget();\n                                return args;\n                            }\n                        }\n                        args = this.arguments(args);\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\n                            return;\n                        }\n                        parserInput.forget();\n                        return new (tree.Call)(name, args, index, fileInfo);\n                    },\n                    //\n                    // Parsing rules for functions with non-standard args, e.g.:\n                    //\n                    //     boolean(not(2 > 1))\n                    //\n                    //     This is a quick prototype, to be modified/improved when\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\n                    //\n                    customFuncCall: function (name) {\n                        /* Ideally the table is to be moved out of here for faster perf.,\n                           but it's quite tricky since it relies on all these `parsers`\n                           and `expect` available only here */\n                        return {\n                            alpha: f(parsers.ieAlpha, true),\n                            boolean: f(condition),\n                            'if': f(condition)\n                        }[name.toLowerCase()];\n                        function f(parse, stop) {\n                            return {\n                                parse: parse,\n                                stop: stop // when true - stop after parse() and return its result, \n                                // otherwise continue for plain args\n                            };\n                        }\n                        function condition() {\n                            return [expect(parsers.condition, 'expected condition')];\n                        }\n                    },\n                    arguments: function (prevArgs) {\n                        var argsComma = prevArgs || [];\n                        var argsSemiColon = [];\n                        var isSemiColonSeparated;\n                        var value;\n                        parserInput.save();\n                        while (true) {\n                            if (prevArgs) {\n                                prevArgs = false;\n                            }\n                            else {\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n                                if (!value) {\n                                    break;\n                                }\n                                if (value.value && value.value.length == 1) {\n                                    value = value.value[0];\n                                }\n                                argsComma.push(value);\n                            }\n                            if (parserInput.$char(',')) {\n                                continue;\n                            }\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\n                                isSemiColonSeparated = true;\n                                value = (argsComma.length < 1) ? argsComma[0]\n                                    : new tree.Value(argsComma);\n                                argsSemiColon.push(value);\n                                argsComma = [];\n                            }\n                        }\n                        parserInput.forget();\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\n                    },\n                    literal: function () {\n                        return this.dimension() ||\n                            this.color() ||\n                            this.quoted() ||\n                            this.unicodeDescriptor();\n                    },\n                    // Assignments are argument entities for calls.\n                    // They are present in ie filter properties as shown below.\n                    //\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n                    //\n                    assignment: function () {\n                        var key;\n                        var value;\n                        parserInput.save();\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n                        if (!key) {\n                            parserInput.restore();\n                            return;\n                        }\n                        if (!parserInput.$char('=')) {\n                            parserInput.restore();\n                            return;\n                        }\n                        value = parsers.entity();\n                        if (value) {\n                            parserInput.forget();\n                            return new (tree.Assignment)(key, value);\n                        }\n                        else {\n                            parserInput.restore();\n                        }\n                    },\n                    //\n                    // Parse url() tokens\n                    //\n                    // We use a specific rule for urls, because they don't really behave like\n                    // standard function calls. The difference is that the argument doesn't have\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\n                    //\n                    url: function () {\n                        var value;\n                        var index = parserInput.i;\n                        parserInput.autoCommentAbsorb = false;\n                        if (!parserInput.$str('url(')) {\n                            parserInput.autoCommentAbsorb = true;\n                            return;\n                        }\n                        value = this.quoted() || this.variable() || this.property() ||\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\n                        parserInput.autoCommentAbsorb = true;\n                        expectChar(')');\n                        return new (tree.URL)((value.value != null ||\n                            value instanceof tree.Variable ||\n                            value instanceof tree.Property) ?\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\n                    },\n                    //\n                    // A Variable entity, such as `@fink`, in\n                    //\n                    //     width: @fink + 2px\n                    //\n                    // We use a different parser for variable definitions,\n                    // see `parsers.variable`.\n                    //\n                    variable: function () {\n                        var ch;\n                        var name;\n                        var index = parserInput.i;\n                        parserInput.save();\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n                            ch = parserInput.currentChar();\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\n                                // this may be a VariableCall lookup\n                                var result = parsers.variableCall(name);\n                                if (result) {\n                                    parserInput.forget();\n                                    return result;\n                                }\n                            }\n                            parserInput.forget();\n                            return new (tree.Variable)(name, index, fileInfo);\n                        }\n                        parserInput.restore();\n                    },\n                    // A variable entity using the protective {} e.g. @{var}\n                    variableCurly: function () {\n                        var curly;\n                        var index = parserInput.i;\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\n                        }\n                    },\n                    //\n                    // A Property accessor, such as `$color`, in\n                    //\n                    //     background-color: $color\n                    //\n                    property: function () {\n                        var name;\n                        var index = parserInput.i;\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n                            return new (tree.Property)(name, index, fileInfo);\n                        }\n                    },\n                    // A property entity useing the protective {} e.g. ${prop}\n                    propertyCurly: function () {\n                        var curly;\n                        var index = parserInput.i;\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\n                        }\n                    },\n                    //\n                    // A Hexadecimal color\n                    //\n                    //     #4F3C2F\n                    //\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n                    //\n                    color: function () {\n                        var rgb;\n                        parserInput.save();\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\n                            if (!rgb[2]) {\n                                parserInput.forget();\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\n                            }\n                        }\n                        parserInput.restore();\n                    },\n                    colorKeyword: function () {\n                        parserInput.save();\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\n                        parserInput.autoCommentAbsorb = false;\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\n                        if (!k) {\n                            parserInput.forget();\n                            return;\n                        }\n                        parserInput.restore();\n                        var color = tree.Color.fromKeyword(k);\n                        if (color) {\n                            parserInput.$str(k);\n                            return color;\n                        }\n                    },\n                    //\n                    // A Dimension, that is, a number and a unit\n                    //\n                    //     0.5em 95%\n                    //\n                    dimension: function () {\n                        if (parserInput.peekNotNumeric()) {\n                            return;\n                        }\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n                        if (value) {\n                            return new (tree.Dimension)(value[1], value[2]);\n                        }\n                    },\n                    //\n                    // A unicode descriptor, as is used in unicode-range\n                    //\n                    // U+0??  or U+00A1-00A9\n                    //\n                    unicodeDescriptor: function () {\n                        var ud;\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n                        if (ud) {\n                            return new (tree.UnicodeDescriptor)(ud[0]);\n                        }\n                    },\n                    //\n                    // JavaScript code to be evaluated\n                    //\n                    //     `window.location.href`\n                    //\n                    javascript: function () {\n                        var js;\n                        var index = parserInput.i;\n                        parserInput.save();\n                        var escape = parserInput.$char('~');\n                        var jsQuote = parserInput.$char('`');\n                        if (!jsQuote) {\n                            parserInput.restore();\n                            return;\n                        }\n                        js = parserInput.$re(/^[^`]*`/);\n                        if (js) {\n                            parserInput.forget();\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n                        }\n                        parserInput.restore('invalid javascript definition');\n                    }\n                },\n                //\n                // The variable part of a variable definition. Used in the `rule` parser\n                //\n                //     @fink:\n                //\n                variable: function () {\n                    var name;\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\n                        return name[1];\n                    }\n                },\n                //\n                // Call a variable value to retrieve a detached ruleset\n                // or a value from a detached ruleset's rules.\n                //\n                //     @fink();\n                //     @fink;\n                //     color: @fink[@color];\n                //\n                variableCall: function (parsedName) {\n                    var lookups;\n                    var i = parserInput.i;\n                    var inValue = !!parsedName;\n                    var name = parsedName;\n                    parserInput.save();\n                    if (name || (parserInput.currentChar() === '@'\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\n                        lookups = this.mixin.ruleLookups();\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\n                            return;\n                        }\n                        if (!inValue) {\n                            name = name[1];\n                        }\n                        var call = new tree.VariableCall(name, i, fileInfo);\n                        if (!inValue && parsers.end()) {\n                            parserInput.forget();\n                            return call;\n                        }\n                        else {\n                            parserInput.forget();\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\n                        }\n                    }\n                    parserInput.restore();\n                },\n                //\n                // extend syntax - used to extend selectors\n                //\n                extend: function (isRule) {\n                    var elements;\n                    var e;\n                    var index = parserInput.i;\n                    var option;\n                    var extendList;\n                    var extend;\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\n                        return;\n                    }\n                    do {\n                        option = null;\n                        elements = null;\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n                            e = this.element();\n                            if (!e) {\n                                break;\n                            }\n                            if (elements) {\n                                elements.push(e);\n                            }\n                            else {\n                                elements = [e];\n                            }\n                        }\n                        option = option && option[1];\n                        if (!elements) {\n                            error('Missing target selector for :extend().');\n                        }\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\n                        if (extendList) {\n                            extendList.push(extend);\n                        }\n                        else {\n                            extendList = [extend];\n                        }\n                    } while (parserInput.$char(','));\n                    expect(/^\\)/);\n                    if (isRule) {\n                        expect(/^;/);\n                    }\n                    return extendList;\n                },\n                //\n                // extendRule - used in a rule to extend all the parent selectors\n                //\n                extendRule: function () {\n                    return this.extend(true);\n                },\n                //\n                // Mixins\n                //\n                mixin: {\n                    //\n                    // A Mixin call, with an optional argument list\n                    //\n                    //     #mixins > .square(#fff);\n                    //     #mixins.square(#fff);\n                    //     .rounded(4px, black);\n                    //     .button;\n                    //\n                    // We can lookup / return a value using the lookup syntax:\n                    //\n                    //     color: #mixin.square(#fff)[@color];\n                    //\n                    // The `while` loop is there because mixins can be\n                    // namespaced, but we only support the child and descendant\n                    // selector for now.\n                    //\n                    call: function (inValue, getLookup) {\n                        var s = parserInput.currentChar();\n                        var important = false;\n                        var lookups;\n                        var index = parserInput.i;\n                        var elements;\n                        var args;\n                        var hasParens;\n                        if (s !== '.' && s !== '#') {\n                            return;\n                        }\n                        parserInput.save(); // stop us absorbing part of an invalid selector\n                        elements = this.elements();\n                        if (elements) {\n                            if (parserInput.$char('(')) {\n                                args = this.args(true).args;\n                                expectChar(')');\n                                hasParens = true;\n                            }\n                            if (getLookup !== false) {\n                                lookups = this.ruleLookups();\n                            }\n                            if (getLookup === true && !lookups) {\n                                parserInput.restore();\n                                return;\n                            }\n                            if (inValue && !lookups && !hasParens) {\n                                // This isn't a valid in-value mixin call\n                                parserInput.restore();\n                                return;\n                            }\n                            if (!inValue && parsers.important()) {\n                                important = true;\n                            }\n                            if (inValue || parsers.end()) {\n                                parserInput.forget();\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\n                                if (lookups) {\n                                    return new tree.NamespaceValue(mixin, lookups);\n                                }\n                                else {\n                                    return mixin;\n                                }\n                            }\n                        }\n                        parserInput.restore();\n                    },\n                    /**\n                     * Matching elements for mixins\n                     * (Start with . or # and can have > )\n                     */\n                    elements: function () {\n                        var elements;\n                        var e;\n                        var c;\n                        var elem;\n                        var elemIndex;\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\n                        while (true) {\n                            elemIndex = parserInput.i;\n                            e = parserInput.$re(re);\n                            if (!e) {\n                                break;\n                            }\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\n                            if (elements) {\n                                elements.push(elem);\n                            }\n                            else {\n                                elements = [elem];\n                            }\n                            c = parserInput.$char('>');\n                        }\n                        return elements;\n                    },\n                    args: function (isCall) {\n                        var entities = parsers.entities;\n                        var returner = { args: null, variadic: false };\n                        var expressions = [];\n                        var argsSemiColon = [];\n                        var argsComma = [];\n                        var isSemiColonSeparated;\n                        var expressionContainsNamed;\n                        var name;\n                        var nameLoop;\n                        var value;\n                        var arg;\n                        var expand;\n                        var hasSep = true;\n                        parserInput.save();\n                        while (true) {\n                            if (isCall) {\n                                arg = parsers.detachedRuleset() || parsers.expression();\n                            }\n                            else {\n                                parserInput.commentStore.length = 0;\n                                if (parserInput.$str('...')) {\n                                    returner.variadic = true;\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                        isSemiColonSeparated = true;\n                                    }\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                        .push({ variadic: true });\n                                    break;\n                                }\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\n                            }\n                            if (!arg || !hasSep) {\n                                break;\n                            }\n                            nameLoop = null;\n                            if (arg.throwAwayComments) {\n                                arg.throwAwayComments();\n                            }\n                            value = arg;\n                            var val = null;\n                            if (isCall) {\n                                // Variable\n                                if (arg.value && arg.value.length == 1) {\n                                    val = arg.value[0];\n                                }\n                            }\n                            else {\n                                val = arg;\n                            }\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                                if (parserInput.$char(':')) {\n                                    if (expressions.length > 0) {\n                                        if (isSemiColonSeparated) {\n                                            error('Cannot mix ; and , as delimiter types');\n                                        }\n                                        expressionContainsNamed = true;\n                                    }\n                                    value = parsers.detachedRuleset() || parsers.expression();\n                                    if (!value) {\n                                        if (isCall) {\n                                            error('could not understand value for named argument');\n                                        }\n                                        else {\n                                            parserInput.restore();\n                                            returner.args = [];\n                                            return returner;\n                                        }\n                                    }\n                                    nameLoop = (name = val.name);\n                                }\n                                else if (parserInput.$str('...')) {\n                                    if (!isCall) {\n                                        returner.variadic = true;\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\n                                            isSemiColonSeparated = true;\n                                        }\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                            .push({ name: arg.name, variadic: true });\n                                        break;\n                                    }\n                                    else {\n                                        expand = true;\n                                    }\n                                }\n                                else if (!isCall) {\n                                    name = nameLoop = val.name;\n                                    value = null;\n                                }\n                            }\n                            if (value) {\n                                expressions.push(value);\n                            }\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\n                            if (parserInput.$char(',')) {\n                                hasSep = true;\n                                continue;\n                            }\n                            hasSep = parserInput.$char(';') === ';';\n                            if (hasSep || isSemiColonSeparated) {\n                                if (expressionContainsNamed) {\n                                    error('Cannot mix ; and , as delimiter types');\n                                }\n                                isSemiColonSeparated = true;\n                                if (expressions.length > 1) {\n                                    value = new (tree.Value)(expressions);\n                                }\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\n                                name = null;\n                                expressions = [];\n                                expressionContainsNamed = false;\n                            }\n                        }\n                        parserInput.forget();\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n                        return returner;\n                    },\n                    //\n                    // A Mixin definition, with a list of parameters\n                    //\n                    //     .rounded (@radius: 2px, @color) {\n                    //        ...\n                    //     }\n                    //\n                    // Until we have a finer grained state-machine, we have to\n                    // do a look-ahead, to make sure we don't have a mixin call.\n                    // See the `rule` function for more information.\n                    //\n                    // We start by matching `.rounded (`, and then proceed on to\n                    // the argument list, which has optional default values.\n                    // We store the parameters in `params`, with a `value` key,\n                    // if there is a value, such as in the case of `@radius`.\n                    //\n                    // Once we've got our params list, and a closing `)`, we parse\n                    // the `{...}` block.\n                    //\n                    definition: function () {\n                        var name;\n                        var params = [];\n                        var match;\n                        var ruleset;\n                        var cond;\n                        var variadic = false;\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\n                            parserInput.peek(/^[^{]*\\}/)) {\n                            return;\n                        }\n                        parserInput.save();\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n                        if (match) {\n                            name = match[1];\n                            var argInfo = this.args(false);\n                            params = argInfo.args;\n                            variadic = argInfo.variadic;\n                            // .mixincall(\"@{a}\");\n                            // looks a bit like a mixin definition..\n                            // also\n                            // .mixincall(@a: {rule: set;});\n                            // so we have to be nice and restore\n                            if (!parserInput.$char(')')) {\n                                parserInput.restore('Missing closing \\')\\'');\n                                return;\n                            }\n                            parserInput.commentStore.length = 0;\n                            if (parserInput.$str('when')) { // Guard\n                                cond = expect(parsers.conditions, 'expected condition');\n                            }\n                            ruleset = parsers.block();\n                            if (ruleset) {\n                                parserInput.forget();\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\n                            }\n                            else {\n                                parserInput.restore();\n                            }\n                        }\n                        else {\n                            parserInput.restore();\n                        }\n                    },\n                    ruleLookups: function () {\n                        var rule;\n                        var lookups = [];\n                        if (parserInput.currentChar() !== '[') {\n                            return;\n                        }\n                        while (true) {\n                            parserInput.save();\n                            rule = this.lookupValue();\n                            if (!rule && rule !== '') {\n                                parserInput.restore();\n                                break;\n                            }\n                            lookups.push(rule);\n                            parserInput.forget();\n                        }\n                        if (lookups.length > 0) {\n                            return lookups;\n                        }\n                    },\n                    lookupValue: function () {\n                        parserInput.save();\n                        if (!parserInput.$char('[')) {\n                            parserInput.restore();\n                            return;\n                        }\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\n                        if (!parserInput.$char(']')) {\n                            parserInput.restore();\n                            return;\n                        }\n                        if (name || name === '') {\n                            parserInput.forget();\n                            return name;\n                        }\n                        parserInput.restore();\n                    }\n                },\n                //\n                // Entities are the smallest recognized token,\n                // and can be found inside a rule's value.\n                //\n                entity: function () {\n                    var entities = this.entities;\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\n                        entities.javascript();\n                },\n                //\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\n                // because the `block` rule will be expecting it, but we still need to make sure\n                // it's there, if ';' was omitted.\n                //\n                end: function () {\n                    return parserInput.$char(';') || parserInput.peek('}');\n                },\n                //\n                // IE's alpha function\n                //\n                //     alpha(opacity=88)\n                //\n                ieAlpha: function () {\n                    var value;\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                    if (!parserInput.$re(/^opacity=/i)) {\n                        return;\n                    }\n                    value = parserInput.$re(/^\\d+/);\n                    if (!value) {\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\n                        value = \"@{\" + value.name.slice(1) + \"}\";\n                    }\n                    expectChar(')');\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\n                },\n                //\n                // A Selector Element\n                //\n                //     div\n                //     + h1\n                //     #socks\n                //     input[type=\"text\"]\n                //\n                // Elements are the building blocks for Selectors,\n                // they are made out of a `Combinator` (see combinator rule),\n                // and an element name, such as a tag a class, or `*`.\n                //\n                element: function () {\n                    var e;\n                    var c;\n                    var v;\n                    var index = parserInput.i;\n                    c = this.combinator();\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\n                        this.entities.variableCurly();\n                    if (!e) {\n                        parserInput.save();\n                        if (parserInput.$char('(')) {\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\n                                e = new (tree.Paren)(v);\n                                parserInput.forget();\n                            }\n                            else {\n                                parserInput.restore('Missing closing \\')\\'');\n                            }\n                        }\n                        else {\n                            parserInput.forget();\n                        }\n                    }\n                    if (e) {\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\n                    }\n                },\n                //\n                // Combinators combine elements together, in a Selector.\n                //\n                // Because our parser isn't white-space sensitive, special care\n                // has to be taken, when parsing the descendant combinator, ` `,\n                // as it's an empty space. We have to check the previous character\n                // in the input, to see if it's a ` ` character. More info on how\n                // we deal with this in *combinator.js*.\n                //\n                combinator: function () {\n                    var c = parserInput.currentChar();\n                    if (c === '/') {\n                        parserInput.save();\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n                        if (slashedCombinator) {\n                            parserInput.forget();\n                            return new (tree.Combinator)(slashedCombinator);\n                        }\n                        parserInput.restore();\n                    }\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n                        parserInput.i++;\n                        if (c === '^' && parserInput.currentChar() === '^') {\n                            c = '^^';\n                            parserInput.i++;\n                        }\n                        while (parserInput.isWhitespace()) {\n                            parserInput.i++;\n                        }\n                        return new (tree.Combinator)(c);\n                    }\n                    else if (parserInput.isWhitespace(-1)) {\n                        return new (tree.Combinator)(' ');\n                    }\n                    else {\n                        return new (tree.Combinator)(null);\n                    }\n                },\n                //\n                // A CSS Selector\n                // with less extensions e.g. the ability to extend and guard\n                //\n                //     .class > div + h1\n                //     li a:hover\n                //\n                // Selectors are made out of one or more Elements, see above.\n                //\n                selector: function (isLess) {\n                    var index = parserInput.i;\n                    var elements;\n                    var extendList;\n                    var c;\n                    var e;\n                    var allExtends;\n                    var when;\n                    var condition;\n                    isLess = isLess !== false;\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\n                        if (when) {\n                            condition = expect(this.conditions, 'expected condition');\n                        }\n                        else if (condition) {\n                            error('CSS guard can only be used at the end of selector');\n                        }\n                        else if (extendList) {\n                            if (allExtends) {\n                                allExtends = allExtends.concat(extendList);\n                            }\n                            else {\n                                allExtends = extendList;\n                            }\n                        }\n                        else {\n                            if (allExtends) {\n                                error('Extend can only be used at the end of selector');\n                            }\n                            c = parserInput.currentChar();\n                            if (elements) {\n                                elements.push(e);\n                            }\n                            else {\n                                elements = [e];\n                            }\n                            e = null;\n                        }\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n                            break;\n                        }\n                    }\n                    if (elements) {\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\n                    }\n                    if (allExtends) {\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\n                    }\n                },\n                selectors: function () {\n                    var s;\n                    var selectors;\n                    while (true) {\n                        s = this.selector();\n                        if (!s) {\n                            break;\n                        }\n                        if (selectors) {\n                            selectors.push(s);\n                        }\n                        else {\n                            selectors = [s];\n                        }\n                        parserInput.commentStore.length = 0;\n                        if (s.condition && selectors.length > 1) {\n                            error(\"Guards are only currently allowed on a single selector.\");\n                        }\n                        if (!parserInput.$char(',')) {\n                            break;\n                        }\n                        if (s.condition) {\n                            error(\"Guards are only currently allowed on a single selector.\");\n                        }\n                        parserInput.commentStore.length = 0;\n                    }\n                    return selectors;\n                },\n                attribute: function () {\n                    if (!parserInput.$char('[')) {\n                        return;\n                    }\n                    var entities = this.entities;\n                    var key;\n                    var val;\n                    var op;\n                    if (!(key = entities.variableCurly())) {\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n                    }\n                    op = parserInput.$re(/^[|~*$^]?=/);\n                    if (op) {\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n                    }\n                    expectChar(']');\n                    return new (tree.Attribute)(key, op, val);\n                },\n                //\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\n                // It's a wrapper around the `primary` rule, with added `{}`.\n                //\n                block: function () {\n                    var content;\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n                        return content;\n                    }\n                },\n                blockRuleset: function () {\n                    var block = this.block();\n                    if (block) {\n                        block = new tree.Ruleset(null, block);\n                    }\n                    return block;\n                },\n                detachedRuleset: function () {\n                    var argInfo;\n                    var params;\n                    var variadic;\n                    parserInput.save();\n                    if (parserInput.$re(/^[.#]\\(/)) {\n                        /**\n                         * DR args currently only implemented for each() function, and not\n                         * yet settable as `@dr: #(@arg) {}`\n                         * This should be done when DRs are merged with mixins.\n                         * See: https://github.com/less/less-meta/issues/16\n                         */\n                        argInfo = this.mixin.args(false);\n                        params = argInfo.args;\n                        variadic = argInfo.variadic;\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore();\n                            return;\n                        }\n                    }\n                    var blockRuleset = this.blockRuleset();\n                    if (blockRuleset) {\n                        parserInput.forget();\n                        if (params) {\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\n                        }\n                        return new tree.DetachedRuleset(blockRuleset);\n                    }\n                    parserInput.restore();\n                },\n                //\n                // div, .class, body > p {...}\n                //\n                ruleset: function () {\n                    var selectors;\n                    var rules;\n                    var debugInfo;\n                    parserInput.save();\n                    if (context.dumpLineNumbers) {\n                        debugInfo = getDebugInfo(parserInput.i);\n                    }\n                    selectors = this.selectors();\n                    if (selectors && (rules = this.block())) {\n                        parserInput.forget();\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\n                        if (context.dumpLineNumbers) {\n                            ruleset.debugInfo = debugInfo;\n                        }\n                        return ruleset;\n                    }\n                    else {\n                        parserInput.restore();\n                    }\n                },\n                declaration: function () {\n                    var name;\n                    var value;\n                    var index = parserInput.i;\n                    var hasDR;\n                    var c = parserInput.currentChar();\n                    var important;\n                    var merge;\n                    var isVariable;\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\n                        return;\n                    }\n                    parserInput.save();\n                    name = this.variable() || this.ruleProperty();\n                    if (name) {\n                        isVariable = typeof name === 'string';\n                        if (isVariable) {\n                            value = this.detachedRuleset();\n                            if (value) {\n                                hasDR = true;\n                            }\n                        }\n                        parserInput.commentStore.length = 0;\n                        if (!value) {\n                            // a name returned by this.ruleProperty() is always an array of the form:\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n                            // where each item is a tree.Keyword or tree.Variable\n                            merge = !isVariable && name.length > 1 && name.pop().value;\n                            // Custom property values get permissive parsing\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\n                                value = this.permissiveValue();\n                            }\n                            // Try to store values as anonymous\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\n                            else {\n                                value = this.anonymousValue();\n                            }\n                            if (value) {\n                                parserInput.forget();\n                                // anonymous values absorb the end ';' which is required for them to work\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\n                            }\n                            if (!value) {\n                                value = this.value();\n                            }\n                            if (value) {\n                                important = this.important();\n                            }\n                            else if (isVariable) {\n                                // As a last resort, try permissiveValue\n                                value = this.permissiveValue();\n                            }\n                        }\n                        if (value && (this.end() || hasDR)) {\n                            parserInput.forget();\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\n                        }\n                        else {\n                            parserInput.restore();\n                        }\n                    }\n                    else {\n                        parserInput.restore();\n                    }\n                },\n                anonymousValue: function () {\n                    var index = parserInput.i;\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\n                    if (match) {\n                        return new (tree.Anonymous)(match[1], index);\n                    }\n                },\n                /**\n                 * Used for custom properties, at-rules, and variables (as fallback)\n                 * Parses almost anything inside of {} [] () \"\" blocks\n                 * until it reaches outer-most tokens.\n                 *\n                 * First, it will try to parse comments and entities to reach\n                 * the end. This is mostly like the Expression parser except no\n                 * math is allowed.\n                 */\n                permissiveValue: function (untilTokens) {\n                    var i;\n                    var e;\n                    var done;\n                    var value;\n                    var tok = untilTokens || ';';\n                    var index = parserInput.i;\n                    var result = [];\n                    function testCurrentChar() {\n                        var char = parserInput.currentChar();\n                        if (typeof tok === 'string') {\n                            return char === tok;\n                        }\n                        else {\n                            return tok.test(char);\n                        }\n                    }\n                    if (testCurrentChar()) {\n                        return;\n                    }\n                    value = [];\n                    do {\n                        e = this.comment();\n                        if (e) {\n                            value.push(e);\n                            continue;\n                        }\n                        e = this.entity();\n                        if (e) {\n                            value.push(e);\n                        }\n                    } while (e);\n                    done = testCurrentChar();\n                    if (value.length > 0) {\n                        value = new (tree.Expression)(value);\n                        if (done) {\n                            return value;\n                        }\n                        else {\n                            result.push(value);\n                        }\n                        // Preserve space before $parseUntil as it will not\n                        if (parserInput.prevChar() === ' ') {\n                            result.push(new tree.Anonymous(' ', index));\n                        }\n                    }\n                    parserInput.save();\n                    value = parserInput.$parseUntil(tok);\n                    if (value) {\n                        if (typeof value === 'string') {\n                            error(\"Expected '\" + value + \"'\", 'Parse');\n                        }\n                        if (value.length === 1 && value[0] === ' ') {\n                            parserInput.forget();\n                            return new tree.Anonymous('', index);\n                        }\n                        var item = void 0;\n                        for (i = 0; i < value.length; i++) {\n                            item = value[i];\n                            if (Array.isArray(item)) {\n                                // Treat actual quotes as normal quoted values\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\n                            }\n                            else {\n                                if (i === value.length - 1) {\n                                    item = item.trim();\n                                }\n                                // Treat like quoted values, but replace vars like unquoted expressions\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\n                                quote.variableRegex = /@([\\w-]+)/g;\n                                quote.propRegex = /\\$([\\w-]+)/g;\n                                result.push(quote);\n                            }\n                        }\n                        parserInput.forget();\n                        return new tree.Expression(result, true);\n                    }\n                    parserInput.restore();\n                },\n                //\n                // An @import atrule\n                //\n                //     @import \"lib\";\n                //\n                // Depending on our environment, importing is done differently:\n                // In the browser, it's an XHR request, in Node, it would be a\n                // file-system operation. The function used for importing is\n                // stored in `import`, which we pass to the Import constructor.\n                //\n                'import': function () {\n                    var path;\n                    var features;\n                    var index = parserInput.i;\n                    var dir = parserInput.$re(/^@import?\\s+/);\n                    if (dir) {\n                        var options = (dir ? this.importOptions() : null) || {};\n                        if ((path = this.entities.quoted() || this.entities.url())) {\n                            features = this.mediaFeatures();\n                            if (!parserInput.$char(';')) {\n                                parserInput.i = index;\n                                error('missing semi-colon or unrecognised media features on import');\n                            }\n                            features = features && new (tree.Value)(features);\n                            return new (tree.Import)(path, features, options, index, fileInfo);\n                        }\n                        else {\n                            parserInput.i = index;\n                            error('malformed import statement');\n                        }\n                    }\n                },\n                importOptions: function () {\n                    var o;\n                    var options = {};\n                    var optionName;\n                    var value;\n                    // list of options, surrounded by parens\n                    if (!parserInput.$char('(')) {\n                        return null;\n                    }\n                    do {\n                        o = this.importOption();\n                        if (o) {\n                            optionName = o;\n                            value = true;\n                            switch (optionName) {\n                                case 'css':\n                                    optionName = 'less';\n                                    value = false;\n                                    break;\n                                case 'once':\n                                    optionName = 'multiple';\n                                    value = false;\n                                    break;\n                            }\n                            options[optionName] = value;\n                            if (!parserInput.$char(',')) {\n                                break;\n                            }\n                        }\n                    } while (o);\n                    expectChar(')');\n                    return options;\n                },\n                importOption: function () {\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n                    if (opt) {\n                        return opt[1];\n                    }\n                },\n                mediaFeature: function () {\n                    var entities = this.entities;\n                    var nodes = [];\n                    var e;\n                    var p;\n                    parserInput.save();\n                    do {\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\n                        if (e) {\n                            nodes.push(e);\n                        }\n                        else if (parserInput.$char('(')) {\n                            p = this.property();\n                            e = this.value();\n                            if (parserInput.$char(')')) {\n                                if (p && e) {\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\n                                }\n                                else if (e) {\n                                    nodes.push(new (tree.Paren)(e));\n                                }\n                                else {\n                                    error('badly formed media feature definition');\n                                }\n                            }\n                            else {\n                                error('Missing closing \\')\\'', 'Parse');\n                            }\n                        }\n                    } while (e);\n                    parserInput.forget();\n                    if (nodes.length > 0) {\n                        return new (tree.Expression)(nodes);\n                    }\n                },\n                mediaFeatures: function () {\n                    var entities = this.entities;\n                    var features = [];\n                    var e;\n                    do {\n                        e = this.mediaFeature();\n                        if (e) {\n                            features.push(e);\n                            if (!parserInput.$char(',')) {\n                                break;\n                            }\n                        }\n                        else {\n                            e = entities.variable() || entities.mixinLookup();\n                            if (e) {\n                                features.push(e);\n                                if (!parserInput.$char(',')) {\n                                    break;\n                                }\n                            }\n                        }\n                    } while (e);\n                    return features.length > 0 ? features : null;\n                },\n                media: function () {\n                    var features;\n                    var rules;\n                    var media;\n                    var debugInfo;\n                    var index = parserInput.i;\n                    if (context.dumpLineNumbers) {\n                        debugInfo = getDebugInfo(index);\n                    }\n                    parserInput.save();\n                    if (parserInput.$str('@media')) {\n                        features = this.mediaFeatures();\n                        rules = this.block();\n                        if (!rules) {\n                            error('media definitions require block statements after any features');\n                        }\n                        parserInput.forget();\n                        media = new (tree.Media)(rules, features, index, fileInfo);\n                        if (context.dumpLineNumbers) {\n                            media.debugInfo = debugInfo;\n                        }\n                        return media;\n                    }\n                    parserInput.restore();\n                },\n                //\n                // A @plugin directive, used to import plugins dynamically.\n                //\n                //     @plugin (args) \"lib\";\n                //\n                plugin: function () {\n                    var path;\n                    var args;\n                    var options;\n                    var index = parserInput.i;\n                    var dir = parserInput.$re(/^@plugin?\\s+/);\n                    if (dir) {\n                        args = this.pluginArgs();\n                        if (args) {\n                            options = {\n                                pluginArgs: args,\n                                isPlugin: true\n                            };\n                        }\n                        else {\n                            options = { isPlugin: true };\n                        }\n                        if ((path = this.entities.quoted() || this.entities.url())) {\n                            if (!parserInput.$char(';')) {\n                                parserInput.i = index;\n                                error('missing semi-colon on @plugin');\n                            }\n                            return new (tree.Import)(path, null, options, index, fileInfo);\n                        }\n                        else {\n                            parserInput.i = index;\n                            error('malformed @plugin statement');\n                        }\n                    }\n                },\n                pluginArgs: function () {\n                    // list of options, surrounded by parens\n                    parserInput.save();\n                    if (!parserInput.$char('(')) {\n                        parserInput.restore();\n                        return null;\n                    }\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n                    if (args[1]) {\n                        parserInput.forget();\n                        return args[1].trim();\n                    }\n                    else {\n                        parserInput.restore();\n                        return null;\n                    }\n                },\n                //\n                // A CSS AtRule\n                //\n                //     @charset \"utf-8\";\n                //\n                atrule: function () {\n                    var index = parserInput.i;\n                    var name;\n                    var value;\n                    var rules;\n                    var nonVendorSpecificName;\n                    var hasIdentifier;\n                    var hasExpression;\n                    var hasUnknown;\n                    var hasBlock = true;\n                    var isRooted = true;\n                    if (parserInput.currentChar() !== '@') {\n                        return;\n                    }\n                    value = this['import']() || this.plugin() || this.media();\n                    if (value) {\n                        return value;\n                    }\n                    parserInput.save();\n                    name = parserInput.$re(/^@[a-z-]+/);\n                    if (!name) {\n                        return;\n                    }\n                    nonVendorSpecificName = name;\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\n                    }\n                    switch (nonVendorSpecificName) {\n                        case '@charset':\n                            hasIdentifier = true;\n                            hasBlock = false;\n                            break;\n                        case '@namespace':\n                            hasExpression = true;\n                            hasBlock = false;\n                            break;\n                        case '@keyframes':\n                        case '@counter-style':\n                            hasIdentifier = true;\n                            break;\n                        case '@document':\n                        case '@supports':\n                            hasUnknown = true;\n                            isRooted = false;\n                            break;\n                        default:\n                            hasUnknown = true;\n                            break;\n                    }\n                    parserInput.commentStore.length = 0;\n                    if (hasIdentifier) {\n                        value = this.entity();\n                        if (!value) {\n                            error(\"expected \" + name + \" identifier\");\n                        }\n                    }\n                    else if (hasExpression) {\n                        value = this.expression();\n                        if (!value) {\n                            error(\"expected \" + name + \" expression\");\n                        }\n                    }\n                    else if (hasUnknown) {\n                        value = this.permissiveValue(/^[{;]/);\n                        hasBlock = (parserInput.currentChar() === '{');\n                        if (!value) {\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\n                                error(name + \" rule is missing block or ending semi-colon\");\n                            }\n                        }\n                        else if (!value.value) {\n                            value = null;\n                        }\n                    }\n                    if (hasBlock) {\n                        rules = this.blockRuleset();\n                    }\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\n                        parserInput.forget();\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\n                    }\n                    parserInput.restore('at-rule options not recognised');\n                },\n                //\n                // A Value is a comma-delimited list of Expressions\n                //\n                //     font-family: Baskerville, Georgia, serif;\n                //\n                // In a Rule, a Value represents everything after the `:`,\n                // and before the `;`.\n                //\n                value: function () {\n                    var e;\n                    var expressions = [];\n                    var index = parserInput.i;\n                    do {\n                        e = this.expression();\n                        if (e) {\n                            expressions.push(e);\n                            if (!parserInput.$char(',')) {\n                                break;\n                            }\n                        }\n                    } while (e);\n                    if (expressions.length > 0) {\n                        return new (tree.Value)(expressions, index);\n                    }\n                },\n                important: function () {\n                    if (parserInput.currentChar() === '!') {\n                        return parserInput.$re(/^! *important/);\n                    }\n                },\n                sub: function () {\n                    var a;\n                    var e;\n                    parserInput.save();\n                    if (parserInput.$char('(')) {\n                        a = this.addition();\n                        if (a && parserInput.$char(')')) {\n                            parserInput.forget();\n                            e = new (tree.Expression)([a]);\n                            e.parens = true;\n                            return e;\n                        }\n                        parserInput.restore('Expected \\')\\'');\n                        return;\n                    }\n                    parserInput.restore();\n                },\n                multiplication: function () {\n                    var m;\n                    var a;\n                    var op;\n                    var operation;\n                    var isSpaced;\n                    m = this.operand();\n                    if (m) {\n                        isSpaced = parserInput.isWhitespace(-1);\n                        while (true) {\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\n                                break;\n                            }\n                            parserInput.save();\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\n                            if (!op) {\n                                parserInput.forget();\n                                break;\n                            }\n                            a = this.operand();\n                            if (!a) {\n                                parserInput.restore();\n                                break;\n                            }\n                            parserInput.forget();\n                            m.parensInOp = true;\n                            a.parensInOp = true;\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\n                            isSpaced = parserInput.isWhitespace(-1);\n                        }\n                        return operation || m;\n                    }\n                },\n                addition: function () {\n                    var m;\n                    var a;\n                    var op;\n                    var operation;\n                    var isSpaced;\n                    m = this.multiplication();\n                    if (m) {\n                        isSpaced = parserInput.isWhitespace(-1);\n                        while (true) {\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\n                            if (!op) {\n                                break;\n                            }\n                            a = this.multiplication();\n                            if (!a) {\n                                break;\n                            }\n                            m.parensInOp = true;\n                            a.parensInOp = true;\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\n                            isSpaced = parserInput.isWhitespace(-1);\n                        }\n                        return operation || m;\n                    }\n                },\n                conditions: function () {\n                    var a;\n                    var b;\n                    var index = parserInput.i;\n                    var condition;\n                    a = this.condition(true);\n                    if (a) {\n                        while (true) {\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                                break;\n                            }\n                            b = this.condition(true);\n                            if (!b) {\n                                break;\n                            }\n                            condition = new (tree.Condition)('or', condition || a, b, index);\n                        }\n                        return condition || a;\n                    }\n                },\n                condition: function (needsParens) {\n                    var result;\n                    var logical;\n                    var next;\n                    function or() {\n                        return parserInput.$str('or');\n                    }\n                    result = this.conditionAnd(needsParens);\n                    if (!result) {\n                        return;\n                    }\n                    logical = or();\n                    if (logical) {\n                        next = this.condition(needsParens);\n                        if (next) {\n                            result = new (tree.Condition)(logical, result, next);\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    return result;\n                },\n                conditionAnd: function (needsParens) {\n                    var result;\n                    var logical;\n                    var next;\n                    var self = this;\n                    function insideCondition() {\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\n                        if (!cond && !needsParens) {\n                            return self.atomicCondition(needsParens);\n                        }\n                        return cond;\n                    }\n                    function and() {\n                        return parserInput.$str('and');\n                    }\n                    result = insideCondition();\n                    if (!result) {\n                        return;\n                    }\n                    logical = and();\n                    if (logical) {\n                        next = this.conditionAnd(needsParens);\n                        if (next) {\n                            result = new (tree.Condition)(logical, result, next);\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    return result;\n                },\n                negatedCondition: function (needsParens) {\n                    if (parserInput.$str('not')) {\n                        var result = this.parenthesisCondition(needsParens);\n                        if (result) {\n                            result.negate = !result.negate;\n                        }\n                        return result;\n                    }\n                },\n                parenthesisCondition: function (needsParens) {\n                    function tryConditionFollowedByParenthesis(me) {\n                        var body;\n                        parserInput.save();\n                        body = me.condition(needsParens);\n                        if (!body) {\n                            parserInput.restore();\n                            return;\n                        }\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore();\n                            return;\n                        }\n                        parserInput.forget();\n                        return body;\n                    }\n                    var body;\n                    parserInput.save();\n                    if (!parserInput.$str('(')) {\n                        parserInput.restore();\n                        return;\n                    }\n                    body = tryConditionFollowedByParenthesis(this);\n                    if (body) {\n                        parserInput.forget();\n                        return body;\n                    }\n                    body = this.atomicCondition(needsParens);\n                    if (!body) {\n                        parserInput.restore();\n                        return;\n                    }\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\n                        return;\n                    }\n                    parserInput.forget();\n                    return body;\n                },\n                atomicCondition: function (needsParens) {\n                    var entities = this.entities;\n                    var index = parserInput.i;\n                    var a;\n                    var b;\n                    var c;\n                    var op;\n                    function cond() {\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\n                    }\n                    cond = cond.bind(this);\n                    a = cond();\n                    if (a) {\n                        if (parserInput.$char('>')) {\n                            if (parserInput.$char('=')) {\n                                op = '>=';\n                            }\n                            else {\n                                op = '>';\n                            }\n                        }\n                        else if (parserInput.$char('<')) {\n                            if (parserInput.$char('=')) {\n                                op = '<=';\n                            }\n                            else {\n                                op = '<';\n                            }\n                        }\n                        else if (parserInput.$char('=')) {\n                            if (parserInput.$char('>')) {\n                                op = '=>';\n                            }\n                            else if (parserInput.$char('<')) {\n                                op = '=<';\n                            }\n                            else {\n                                op = '=';\n                            }\n                        }\n                        if (op) {\n                            b = cond();\n                            if (b) {\n                                c = new (tree.Condition)(op, a, b, index, false);\n                            }\n                            else {\n                                error('expected expression');\n                            }\n                        }\n                        else {\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\n                        }\n                        return c;\n                    }\n                },\n                //\n                // An operand is anything that can be part of an operation,\n                // such as a Color, or a Variable\n                //\n                operand: function () {\n                    var entities = this.entities;\n                    var negate;\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\n                        negate = parserInput.$char('-');\n                    }\n                    var o = this.sub() || entities.dimension() ||\n                        entities.color() || entities.variable() ||\n                        entities.property() || entities.call() ||\n                        entities.quoted(true) || entities.colorKeyword() ||\n                        entities.mixinLookup();\n                    if (negate) {\n                        o.parensInOp = true;\n                        o = new (tree.Negative)(o);\n                    }\n                    return o;\n                },\n                //\n                // Expressions either represent mathematical operations,\n                // or white-space delimited Entities.\n                //\n                //     1px solid black\n                //     @var * 2\n                //\n                expression: function () {\n                    var entities = [];\n                    var e;\n                    var delim;\n                    var index = parserInput.i;\n                    do {\n                        e = this.comment();\n                        if (e) {\n                            entities.push(e);\n                            continue;\n                        }\n                        e = this.addition() || this.entity();\n                        if (e instanceof tree.Comment) {\n                            e = null;\n                        }\n                        if (e) {\n                            entities.push(e);\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\n                                delim = parserInput.$char('/');\n                                if (delim) {\n                                    entities.push(new (tree.Anonymous)(delim, index));\n                                }\n                            }\n                        }\n                    } while (e);\n                    if (entities.length > 0) {\n                        return new (tree.Expression)(entities);\n                    }\n                },\n                property: function () {\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n                    if (name) {\n                        return name[1];\n                    }\n                },\n                ruleProperty: function () {\n                    var name = [];\n                    var index = [];\n                    var s;\n                    var k;\n                    parserInput.save();\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n                    if (simpleProperty) {\n                        name = [new (tree.Keyword)(simpleProperty[1])];\n                        parserInput.forget();\n                        return name;\n                    }\n                    function match(re) {\n                        var i = parserInput.i;\n                        var chunk = parserInput.$re(re);\n                        if (chunk) {\n                            index.push(i);\n                            return name.push(chunk[1]);\n                        }\n                    }\n                    match(/^(\\*?)/);\n                    while (true) {\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n                            break;\n                        }\n                    }\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n                        parserInput.forget();\n                        // at last, we have the complete match now. move forward,\n                        // convert name particles to tree objects and return:\n                        if (name[0] === '') {\n                            name.shift();\n                            index.shift();\n                        }\n                        for (k = 0; k < name.length; k++) {\n                            s = name[k];\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\n                                new (tree.Keyword)(s) :\n                                (s.charAt(0) === '@' ?\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\n                        }\n                        return name;\n                    }\n                    parserInput.restore();\n                }\n            }\n        };\n    };\n    Parser.serializeVars = function (vars) {\n        var s = '';\n        for (var name_1 in vars) {\n            if (Object.hasOwnProperty.call(vars, name_1)) {\n                var value = vars[name_1];\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\n            }\n        }\n        return s;\n    };\n\n    function boolean(condition) {\n        return condition ? Keyword.True : Keyword.False;\n    }\n    /**\n     * Functions with evalArgs set to false are sent context\n     * as the first argument.\n     */\n    function If(context, condition, trueValue, falseValue) {\n        return condition.eval(context) ? trueValue.eval(context)\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\n    }\n    If.evalArgs = false;\n    function isdefined(context, variable) {\n        try {\n            variable.eval(context);\n            return Keyword.True;\n        }\n        catch (e) {\n            return Keyword.False;\n        }\n    }\n    isdefined.evalArgs = false;\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\n    function clamp(val) {\n        return Math.min(1, Math.max(0, val));\n    }\n    function hsla(origColor, hsl) {\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n        if (color) {\n            if (origColor.value &&\n                /^(rgb|hsl)/.test(origColor.value)) {\n                color.value = origColor.value;\n            }\n            else {\n                color.value = 'rgb';\n            }\n            return color;\n        }\n    }\n    function toHSL(color) {\n        if (color.toHSL) {\n            return color.toHSL();\n        }\n        else {\n            throw new Error('Argument cannot be evaluated to a color');\n        }\n    }\n    function toHSV(color) {\n        if (color.toHSV) {\n            return color.toHSV();\n        }\n        else {\n            throw new Error('Argument cannot be evaluated to a color');\n        }\n    }\n    function number$1(n) {\n        if (n instanceof Dimension) {\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n        }\n        else if (typeof n === 'number') {\n            return n;\n        }\n        else {\n            throw {\n                type: 'Argument',\n                message: 'color functions take numbers as parameters'\n            };\n        }\n    }\n    function scaled(n, size) {\n        if (n instanceof Dimension && n.unit.is('%')) {\n            return parseFloat(n.value * size / 100);\n        }\n        else {\n            return number$1(n);\n        }\n    }\n    colorFunctions = {\n        rgb: function (r, g, b) {\n            var a = 1;\n            /**\n             * Comma-less syntax\n             *   e.g. rgb(0 128 255 / 50%)\n             */\n            if (r instanceof Expression) {\n                var val = r.value;\n                r = val[0];\n                g = val[1];\n                b = val[2];\n                /**\n                 * @todo - should this be normalized in\n                 *   function caller? Or parsed differently?\n                 */\n                if (b instanceof Operation) {\n                    var op = b;\n                    b = op.operands[0];\n                    a = op.operands[1];\n                }\n            }\n            var color = colorFunctions.rgba(r, g, b, a);\n            if (color) {\n                color.value = 'rgb';\n                return color;\n            }\n        },\n        rgba: function (r, g, b, a) {\n            try {\n                if (r instanceof Color) {\n                    if (g) {\n                        a = number$1(g);\n                    }\n                    else {\n                        a = r.alpha;\n                    }\n                    return new Color(r.rgb, a, 'rgba');\n                }\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\n                a = number$1(a);\n                return new Color(rgb, a, 'rgba');\n            }\n            catch (e) { }\n        },\n        hsl: function (h, s, l) {\n            var a = 1;\n            if (h instanceof Expression) {\n                var val = h.value;\n                h = val[0];\n                s = val[1];\n                l = val[2];\n                if (l instanceof Operation) {\n                    var op = l;\n                    l = op.operands[0];\n                    a = op.operands[1];\n                }\n            }\n            var color = colorFunctions.hsla(h, s, l, a);\n            if (color) {\n                color.value = 'hsl';\n                return color;\n            }\n        },\n        hsla: function (h, s, l, a) {\n            try {\n                if (h instanceof Color) {\n                    if (s) {\n                        a = number$1(s);\n                    }\n                    else {\n                        a = h.alpha;\n                    }\n                    return new Color(h.rgb, a, 'hsla');\n                }\n                var m1_1;\n                var m2_1;\n                function hue(h) {\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\n                    if (h * 6 < 1) {\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\n                    }\n                    else if (h * 2 < 1) {\n                        return m2_1;\n                    }\n                    else if (h * 3 < 2) {\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\n                    }\n                    else {\n                        return m1_1;\n                    }\n                }\n                h = (number$1(h) % 360) / 360;\n                s = clamp(number$1(s));\n                l = clamp(number$1(l));\n                a = clamp(number$1(a));\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n                m1_1 = l * 2 - m2_1;\n                var rgb = [\n                    hue(h + 1 / 3) * 255,\n                    hue(h) * 255,\n                    hue(h - 1 / 3) * 255\n                ];\n                a = number$1(a);\n                return new Color(rgb, a, 'hsla');\n            }\n            catch (e) { }\n        },\n        hsv: function (h, s, v) {\n            return colorFunctions.hsva(h, s, v, 1.0);\n        },\n        hsva: function (h, s, v, a) {\n            h = ((number$1(h) % 360) / 360) * 360;\n            s = number$1(s);\n            v = number$1(v);\n            a = number$1(a);\n            var i;\n            var f;\n            i = Math.floor((h / 60) % 6);\n            f = (h / 60) - i;\n            var vs = [v,\n                v * (1 - s),\n                v * (1 - f * s),\n                v * (1 - (1 - f) * s)];\n            var perm = [[0, 3, 1],\n                [2, 0, 1],\n                [1, 0, 3],\n                [1, 2, 0],\n                [3, 1, 0],\n                [0, 1, 2]];\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\n        },\n        hue: function (color) {\n            return new Dimension(toHSL(color).h);\n        },\n        saturation: function (color) {\n            return new Dimension(toHSL(color).s * 100, '%');\n        },\n        lightness: function (color) {\n            return new Dimension(toHSL(color).l * 100, '%');\n        },\n        hsvhue: function (color) {\n            return new Dimension(toHSV(color).h);\n        },\n        hsvsaturation: function (color) {\n            return new Dimension(toHSV(color).s * 100, '%');\n        },\n        hsvvalue: function (color) {\n            return new Dimension(toHSV(color).v * 100, '%');\n        },\n        red: function (color) {\n            return new Dimension(color.rgb[0]);\n        },\n        green: function (color) {\n            return new Dimension(color.rgb[1]);\n        },\n        blue: function (color) {\n            return new Dimension(color.rgb[2]);\n        },\n        alpha: function (color) {\n            return new Dimension(toHSL(color).a);\n        },\n        luma: function (color) {\n            return new Dimension(color.luma() * color.alpha * 100, '%');\n        },\n        luminance: function (color) {\n            var luminance = (0.2126 * color.rgb[0] / 255) +\n                (0.7152 * color.rgb[1] / 255) +\n                (0.0722 * color.rgb[2] / 255);\n            return new Dimension(luminance * color.alpha * 100, '%');\n        },\n        saturate: function (color, amount, method) {\n            // filter: saturate(3.2);\n            // should be kept as is, so check for color\n            if (!color.rgb) {\n                return null;\n            }\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.s += hsl.s * amount.value / 100;\n            }\n            else {\n                hsl.s += amount.value / 100;\n            }\n            hsl.s = clamp(hsl.s);\n            return hsla(color, hsl);\n        },\n        desaturate: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.s -= hsl.s * amount.value / 100;\n            }\n            else {\n                hsl.s -= amount.value / 100;\n            }\n            hsl.s = clamp(hsl.s);\n            return hsla(color, hsl);\n        },\n        lighten: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.l += hsl.l * amount.value / 100;\n            }\n            else {\n                hsl.l += amount.value / 100;\n            }\n            hsl.l = clamp(hsl.l);\n            return hsla(color, hsl);\n        },\n        darken: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.l -= hsl.l * amount.value / 100;\n            }\n            else {\n                hsl.l -= amount.value / 100;\n            }\n            hsl.l = clamp(hsl.l);\n            return hsla(color, hsl);\n        },\n        fadein: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.a += hsl.a * amount.value / 100;\n            }\n            else {\n                hsl.a += amount.value / 100;\n            }\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        fadeout: function (color, amount, method) {\n            var hsl = toHSL(color);\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.a -= hsl.a * amount.value / 100;\n            }\n            else {\n                hsl.a -= amount.value / 100;\n            }\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        fade: function (color, amount) {\n            var hsl = toHSL(color);\n            hsl.a = amount.value / 100;\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        spin: function (color, amount) {\n            var hsl = toHSL(color);\n            var hue = (hsl.h + amount.value) % 360;\n            hsl.h = hue < 0 ? 360 + hue : hue;\n            return hsla(color, hsl);\n        },\n        //\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n        // http://sass-lang.com\n        //\n        mix: function (color1, color2, weight) {\n            if (!weight) {\n                weight = new Dimension(50);\n            }\n            var p = weight.value / 100.0;\n            var w = p * 2 - 1;\n            var a = toHSL(color1).a - toHSL(color2).a;\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n            var w2 = 1 - w1;\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\n            return new Color(rgb, alpha);\n        },\n        greyscale: function (color) {\n            return colorFunctions.desaturate(color, new Dimension(100));\n        },\n        contrast: function (color, dark, light, threshold) {\n            // filter: contrast(3.2);\n            // should be kept as is, so check for color\n            if (!color.rgb) {\n                return null;\n            }\n            if (typeof light === 'undefined') {\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\n            }\n            if (typeof dark === 'undefined') {\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\n            }\n            // Figure out which is actually light and dark:\n            if (dark.luma() > light.luma()) {\n                var t = light;\n                light = dark;\n                dark = t;\n            }\n            if (typeof threshold === 'undefined') {\n                threshold = 0.43;\n            }\n            else {\n                threshold = number$1(threshold);\n            }\n            if (color.luma() < threshold) {\n                return light;\n            }\n            else {\n                return dark;\n            }\n        },\n        // Changes made in 2.7.0 - Reverted in 3.0.0\n        // contrast: function (color, color1, color2, threshold) {\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n        //     // according to the standard WCAG contrast ratio calculation.\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n        //     // The threshold param is no longer used, in line with SASS.\n        //     // filter: contrast(3.2);\n        //     // should be kept as is, so check for color\n        //     if (!color.rgb) {\n        //         return null;\n        //     }\n        //     if (typeof color1 === 'undefined') {\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n        //     }\n        //     if (typeof color2 === 'undefined') {\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n        //     }\n        //     var contrast1, contrast2;\n        //     var luma = color.luma();\n        //     var luma1 = color1.luma();\n        //     var luma2 = color2.luma();\n        //     // Calculate contrast ratios for each color\n        //     if (luma > luma1) {\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n        //     } else {\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n        //     }\n        //     if (luma > luma2) {\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n        //     } else {\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n        //     }\n        //     if (contrast1 > contrast2) {\n        //         return color1;\n        //     } else {\n        //         return color2;\n        //     }\n        // },\n        argb: function (color) {\n            return new Anonymous(color.toARGB());\n        },\n        color: function (c) {\n            if ((c instanceof Quoted) &&\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\n                var val = c.value.slice(1);\n                return new Color(val, undefined, \"#\" + val);\n            }\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\n                c.value = undefined;\n                return c;\n            }\n            throw {\n                type: 'Argument',\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n            };\n        },\n        tint: function (color, amount) {\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n        },\n        shade: function (color, amount) {\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n        }\n    };\n    var color = colorFunctions;\n\n    // Color Blending\n    // ref: http://www.w3.org/TR/compositing-1\n    function colorBlend(mode, color1, color2) {\n        var ab = color1.alpha; // result\n        var // backdrop\n        cb;\n        var as = color2.alpha;\n        var // source\n        cs;\n        var ar;\n        var cr;\n        var r = [];\n        ar = as + ab * (1 - as);\n        for (var i = 0; i < 3; i++) {\n            cb = color1.rgb[i] / 255;\n            cs = color2.rgb[i] / 255;\n            cr = mode(cb, cs);\n            if (ar) {\n                cr = (as * cs + ab * (cb -\n                    as * (cb + cs - cr))) / ar;\n            }\n            r[i] = cr * 255;\n        }\n        return new Color(r, ar);\n    }\n    var colorBlendModeFunctions = {\n        multiply: function (cb, cs) {\n            return cb * cs;\n        },\n        screen: function (cb, cs) {\n            return cb + cs - cb * cs;\n        },\n        overlay: function (cb, cs) {\n            cb *= 2;\n            return (cb <= 1) ?\n                colorBlendModeFunctions.multiply(cb, cs) :\n                colorBlendModeFunctions.screen(cb - 1, cs);\n        },\n        softlight: function (cb, cs) {\n            var d = 1;\n            var e = cb;\n            if (cs > 0.5) {\n                e = 1;\n                d = (cb > 0.25) ? Math.sqrt(cb)\n                    : ((16 * cb - 12) * cb + 4) * cb;\n            }\n            return cb - (1 - 2 * cs) * e * (d - cb);\n        },\n        hardlight: function (cb, cs) {\n            return colorBlendModeFunctions.overlay(cs, cb);\n        },\n        difference: function (cb, cs) {\n            return Math.abs(cb - cs);\n        },\n        exclusion: function (cb, cs) {\n            return cb + cs - 2 * cb * cs;\n        },\n        // non-w3c functions:\n        average: function (cb, cs) {\n            return (cb + cs) / 2;\n        },\n        negation: function (cb, cs) {\n            return 1 - Math.abs(cb + cs - 1);\n        }\n    };\n    for (var f$1 in colorBlendModeFunctions) {\n        if (colorBlendModeFunctions.hasOwnProperty(f$1)) {\n            colorBlend[f$1] = colorBlend.bind(null, colorBlendModeFunctions[f$1]);\n        }\n    }\n\n    var dataUri = (function (environment) {\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\n                if (!filePathNode) {\n                    filePathNode = mimetypeNode;\n                    mimetypeNode = null;\n                }\n                var mimetype = mimetypeNode && mimetypeNode.value;\n                var filePath = filePathNode.value;\n                var currentFileInfo = this.currentFileInfo;\n                var currentDirectory = currentFileInfo.rewriteUrls ?\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n                var fragmentStart = filePath.indexOf('#');\n                var fragment = '';\n                if (fragmentStart !== -1) {\n                    fragment = filePath.slice(fragmentStart);\n                    filePath = filePath.slice(0, fragmentStart);\n                }\n                var context = clone(this.context);\n                context.rawBuffer = true;\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n                if (!fileManager) {\n                    return fallback(this, filePathNode);\n                }\n                var useBase64 = false;\n                // detect the mimetype if not given\n                if (!mimetypeNode) {\n                    mimetype = environment.mimeLookup(filePath);\n                    if (mimetype === 'image/svg+xml') {\n                        useBase64 = false;\n                    }\n                    else {\n                        // use base 64 unless it's an ASCII or UTF-8 format\n                        var charset = environment.charsetLookup(mimetype);\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n                    }\n                    if (useBase64) {\n                        mimetype += ';base64';\n                    }\n                }\n                else {\n                    useBase64 = /;base64$/.test(mimetype);\n                }\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n                if (!fileSync.contents) {\n                    logger$1.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\n                    return fallback(this, filePathNode || mimetypeNode);\n                }\n                var buf = fileSync.contents;\n                if (useBase64 && !environment.encodeBase64) {\n                    return fallback(this, filePathNode);\n                }\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n            } };\n    });\n\n    var getItemsFromNode = function (node) {\n        // handle non-array values as an array of length 1\n        // return 'undefined' if index is invalid\n        var items = Array.isArray(node.value) ?\n            node.value : Array(node);\n        return items;\n    };\n    var list = {\n        _SELF: function (n) {\n            return n;\n        },\n        '~': function () {\n            var expr = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                expr[_i] = arguments[_i];\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n            return new Value(expr);\n        },\n        extract: function (values, index) {\n            // (1-based index)\n            index = index.value - 1;\n            return getItemsFromNode(values)[index];\n        },\n        length: function (values) {\n            return new Dimension(getItemsFromNode(values).length);\n        },\n        /**\n         * Creates a Less list of incremental values.\n         * Modeled after Lodash's range function, also exists natively in PHP\n         *\n         * @param {Dimension} [start=1]\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\n         * @param {Dimension} [step=1]\n         */\n        range: function (start, end, step) {\n            var from;\n            var to;\n            var stepValue = 1;\n            var list = [];\n            if (end) {\n                to = end;\n                from = start.value;\n                if (step) {\n                    stepValue = step.value;\n                }\n            }\n            else {\n                from = 1;\n                to = start;\n            }\n            for (var i = from; i <= to.value; i += stepValue) {\n                list.push(new Dimension(i, to.unit));\n            }\n            return new Expression(list);\n        },\n        each: function (list, rs) {\n            var _this = this;\n            var rules = [];\n            var newRules;\n            var iterator;\n            var tryEval = function (val) {\n                if (val instanceof Node) {\n                    return val.eval(_this.context);\n                }\n                return val;\n            };\n            if (list.value && !(list instanceof Quoted)) {\n                if (Array.isArray(list.value)) {\n                    iterator = list.value.map(tryEval);\n                }\n                else {\n                    iterator = [tryEval(list.value)];\n                }\n            }\n            else if (list.ruleset) {\n                iterator = tryEval(list.ruleset).rules;\n            }\n            else if (list.rules) {\n                iterator = list.rules.map(tryEval);\n            }\n            else if (Array.isArray(list)) {\n                iterator = list.map(tryEval);\n            }\n            else {\n                iterator = [tryEval(list)];\n            }\n            var valueName = '@value';\n            var keyName = '@key';\n            var indexName = '@index';\n            if (rs.params) {\n                valueName = rs.params[0] && rs.params[0].name;\n                keyName = rs.params[1] && rs.params[1].name;\n                indexName = rs.params[2] && rs.params[2].name;\n                rs = rs.rules;\n            }\n            else {\n                rs = rs.ruleset;\n            }\n            for (var i = 0; i < iterator.length; i++) {\n                var key = void 0;\n                var value = void 0;\n                var item = iterator[i];\n                if (item instanceof Declaration) {\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\n                    value = item.value;\n                }\n                else {\n                    key = new Dimension(i + 1);\n                    value = item;\n                }\n                if (item instanceof Comment) {\n                    continue;\n                }\n                newRules = rs.rules.slice(0);\n                if (valueName) {\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\n                }\n                if (indexName) {\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\n                }\n                if (keyName) {\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\n                }\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\n            }\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\n        }\n    };\n\n    var MathHelper = function (fn, unit, n) {\n        if (!(n instanceof Dimension)) {\n            throw { type: 'Argument', message: 'argument must be a number' };\n        }\n        if (unit == null) {\n            unit = n.unit;\n        }\n        else {\n            n = n.unify();\n        }\n        return new Dimension(fn(parseFloat(n.value)), unit);\n    };\n\n    var mathFunctions = {\n        // name,  unit\n        ceil: null,\n        floor: null,\n        sqrt: null,\n        abs: null,\n        tan: '',\n        sin: '',\n        cos: '',\n        atan: 'rad',\n        asin: 'rad',\n        acos: 'rad'\n    };\n    for (var f in mathFunctions) {\n        if (mathFunctions.hasOwnProperty(f)) {\n            mathFunctions[f] = MathHelper.bind(null, Math[f], mathFunctions[f]);\n        }\n    }\n    mathFunctions.round = function (n, f) {\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\n    };\n\n    var minMax = function (isMin, args) {\n        args = Array.prototype.slice.call(args);\n        switch (args.length) {\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\n        }\n        var i; // key is the unit.toString() for unified Dimension values,\n        var j;\n        var current;\n        var currentUnified;\n        var referenceUnified;\n        var unit;\n        var unitStatic;\n        var unitClone;\n        var // elems only contains original argument values.\n        order = [];\n        var values = {};\n        // value is the index into the order array.\n        for (i = 0; i < args.length; i++) {\n            current = args[i];\n            if (!(current instanceof Dimension)) {\n                if (Array.isArray(args[i].value)) {\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n                }\n                continue;\n            }\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\n            if (j === undefined) {\n                if (unitStatic !== undefined && unit !== unitStatic) {\n                    throw { type: 'Argument', message: 'incompatible types' };\n                }\n                values[unit] = order.length;\n                order.push(current);\n                continue;\n            }\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n            if (isMin && currentUnified.value < referenceUnified.value ||\n                !isMin && currentUnified.value > referenceUnified.value) {\n                order[j] = current;\n            }\n        }\n        if (order.length == 1) {\n            return order[0];\n        }\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\n    };\n    var number = {\n        min: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            try {\n                return minMax(true, args);\n            }\n            catch (e) { }\n        },\n        max: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            try {\n                return minMax(false, args);\n            }\n            catch (e) { }\n        },\n        convert: function (val, unit) {\n            return val.convertTo(unit.value);\n        },\n        pi: function () {\n            return new Dimension(Math.PI);\n        },\n        mod: function (a, b) {\n            return new Dimension(a.value % b.value, a.unit);\n        },\n        pow: function (x, y) {\n            if (typeof x === 'number' && typeof y === 'number') {\n                x = new Dimension(x);\n                y = new Dimension(y);\n            }\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n                throw { type: 'Argument', message: 'arguments must be numbers' };\n            }\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\n        },\n        percentage: function (n) {\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\n            return result;\n        }\n    };\n\n    var string = {\n        e: function (str) {\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\n        },\n        escape: function (str) {\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\n        },\n        replace: function (string, pattern, replacement, flags) {\n            var result = string.value;\n            replacement = (replacement.type === 'Quoted') ?\n                replacement.value : replacement.toCSS();\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n            return new Quoted(string.quote || '', result, string.escaped);\n        },\n        '%': function (string /* arg, arg, ... */) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            var result = string.value;\n            var _loop_1 = function (i) {\n                /* jshint loopfunc:true */\n                result = result.replace(/%[sda]/i, function (token) {\n                    var value = ((args[i].type === 'Quoted') &&\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n                });\n            };\n            for (var i = 0; i < args.length; i++) {\n                _loop_1(i);\n            }\n            result = result.replace(/%%/g, '%');\n            return new Quoted(string.quote || '', result, string.escaped);\n        }\n    };\n\n    var svg = (function (environment) {\n        return { 'svg-gradient': function (direction) {\n                var stops;\n                var gradientDirectionSvg;\n                var gradientType = 'linear';\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\n                var renderEnv = { compress: false };\n                var returner;\n                var directionValue = direction.toCSS(renderEnv);\n                var i;\n                var color;\n                var position;\n                var positionValue;\n                var alpha;\n                function throwArgumentDescriptor() {\n                    throw { type: 'Argument',\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\n                            ' end_color [end_position] or direction, color list' };\n                }\n                if (arguments.length == 2) {\n                    if (arguments[1].value.length < 2) {\n                        throwArgumentDescriptor();\n                    }\n                    stops = arguments[1].value;\n                }\n                else if (arguments.length < 3) {\n                    throwArgumentDescriptor();\n                }\n                else {\n                    stops = Array.prototype.slice.call(arguments, 1);\n                }\n                switch (directionValue) {\n                    case 'to bottom':\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                        break;\n                    case 'to right':\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                        break;\n                    case 'to bottom right':\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                        break;\n                    case 'to top right':\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                        break;\n                    case 'ellipse':\n                    case 'ellipse at center':\n                        gradientType = 'radial';\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                        break;\n                    default:\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\n                }\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\n                for (i = 0; i < stops.length; i += 1) {\n                    if (stops[i] instanceof Expression) {\n                        color = stops[i].value[0];\n                        position = stops[i].value[1];\n                    }\n                    else {\n                        color = stops[i];\n                        position = undefined;\n                    }\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\n                        throwArgumentDescriptor();\n                    }\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n                    alpha = color.alpha;\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\n                }\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\n                returner = encodeURIComponent(returner);\n                returner = \"data:image/svg+xml,\" + returner;\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n            } };\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\n    var isunit = function (n, unit) {\n        if (unit === undefined) {\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\n        }\n        unit = typeof unit.value === 'string' ? unit.value : unit;\n        if (typeof unit !== 'string') {\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\n        }\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\n    };\n    var types = {\n        isruleset: function (n) {\n            return isa(n, DetachedRuleset);\n        },\n        iscolor: function (n) {\n            return isa(n, Color);\n        },\n        isnumber: function (n) {\n            return isa(n, Dimension);\n        },\n        isstring: function (n) {\n            return isa(n, Quoted);\n        },\n        iskeyword: function (n) {\n            return isa(n, Keyword);\n        },\n        isurl: function (n) {\n            return isa(n, URL);\n        },\n        ispixel: function (n) {\n            return isunit(n, 'px');\n        },\n        ispercentage: function (n) {\n            return isunit(n, '%');\n        },\n        isem: function (n) {\n            return isunit(n, 'em');\n        },\n        isunit: isunit,\n        unit: function (val, unit) {\n            if (!(val instanceof Dimension)) {\n                throw { type: 'Argument',\n                    message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\n            }\n            if (unit) {\n                if (unit instanceof Keyword) {\n                    unit = unit.value;\n                }\n                else {\n                    unit = unit.toCSS();\n                }\n            }\n            else {\n                unit = '';\n            }\n            return new Dimension(val.value, unit);\n        },\n        'get-unit': function (n) {\n            return new Anonymous(n.unit);\n        }\n    };\n\n    var functions = (function (environment) {\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\n        // register functions\n        functionRegistry.addMultiple(boolean$1);\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\n        functionRegistry.addMultiple(color);\n        functionRegistry.addMultiple(colorBlend);\n        functionRegistry.addMultiple(dataUri(environment));\n        functionRegistry.addMultiple(list);\n        functionRegistry.addMultiple(mathFunctions);\n        functionRegistry.addMultiple(number);\n        functionRegistry.addMultiple(string);\n        functionRegistry.addMultiple(svg());\n        functionRegistry.addMultiple(types);\n        return functions;\n    });\n\n    function transformTree (root, options) {\n        options = options || {};\n        var evaldRoot;\n        var variables = options.variables;\n        var evalEnv = new contexts.Eval(options);\n        //\n        // Allows setting variables with a hash, so:\n        //\n        //   `{ color: new tree.Color('#f01') }` will become:\n        //\n        //   new tree.Declaration('@color',\n        //     new tree.Value([\n        //       new tree.Expression([\n        //         new tree.Color('#f01')\n        //       ])\n        //     ])\n        //   )\n        //\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\n            variables = Object.keys(variables).map(function (k) {\n                var value = variables[k];\n                if (!(value instanceof tree.Value)) {\n                    if (!(value instanceof tree.Expression)) {\n                        value = new tree.Expression([value]);\n                    }\n                    value = new tree.Value([value]);\n                }\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\n            });\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\n        }\n        var visitors$1 = [\n            new visitors.JoinSelectorVisitor(),\n            new visitors.MarkVisibleSelectorsVisitor(true),\n            new visitors.ExtendVisitor(),\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\n        ];\n        var preEvalVisitors = [];\n        var v;\n        var visitorIterator;\n        /**\n         * first() / get() allows visitors to be added while visiting\n         *\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\n         */\n        if (options.pluginManager) {\n            visitorIterator = options.pluginManager.visitor();\n            for (var i = 0; i < 2; i++) {\n                visitorIterator.first();\n                while ((v = visitorIterator.get())) {\n                    if (v.isPreEvalVisitor) {\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\n                            preEvalVisitors.push(v);\n                            v.run(root);\n                        }\n                    }\n                    else {\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\n                            if (v.isPreVisitor) {\n                                visitors$1.unshift(v);\n                            }\n                            else {\n                                visitors$1.push(v);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        evaldRoot = root.eval(evalEnv);\n        for (var i = 0; i < visitors$1.length; i++) {\n            visitors$1[i].run(evaldRoot);\n        }\n        // Run any remaining visitors added after eval pass\n        if (options.pluginManager) {\n            visitorIterator.first();\n            while ((v = visitorIterator.get())) {\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\n                    v.run(evaldRoot);\n                }\n            }\n        }\n        return evaldRoot;\n    }\n\n    /**\n     * Plugin Manager\n     */\n    var PluginManager = /** @class */ (function () {\n        function PluginManager(less) {\n            this.less = less;\n            this.visitors = [];\n            this.preProcessors = [];\n            this.postProcessors = [];\n            this.installedPlugins = [];\n            this.fileManagers = [];\n            this.iterator = -1;\n            this.pluginCache = {};\n            this.Loader = new less.PluginLoader(less);\n        }\n        /**\n         * Adds all the plugins in the array\n         * @param {Array} plugins\n         */\n        PluginManager.prototype.addPlugins = function (plugins) {\n            if (plugins) {\n                for (var i = 0; i < plugins.length; i++) {\n                    this.addPlugin(plugins[i]);\n                }\n            }\n        };\n        /**\n         *\n         * @param plugin\n         * @param {String} filename\n         */\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\n            this.installedPlugins.push(plugin);\n            if (filename) {\n                this.pluginCache[filename] = plugin;\n            }\n            if (plugin.install) {\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n            }\n        };\n        /**\n         *\n         * @param filename\n         */\n        PluginManager.prototype.get = function (filename) {\n            return this.pluginCache[filename];\n        };\n        /**\n         * Adds a visitor. The visitor object has options on itself to determine\n         * when it should run.\n         * @param visitor\n         */\n        PluginManager.prototype.addVisitor = function (visitor) {\n            this.visitors.push(visitor);\n        };\n        /**\n         * Adds a pre processor object\n         * @param {object} preProcessor\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n         */\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\n            var indexToInsertAt;\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\n                    break;\n                }\n            }\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\n        };\n        /**\n         * Adds a post processor object\n         * @param {object} postProcessor\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n         */\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\n            var indexToInsertAt;\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\n                    break;\n                }\n            }\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\n        };\n        /**\n         *\n         * @param manager\n         */\n        PluginManager.prototype.addFileManager = function (manager) {\n            this.fileManagers.push(manager);\n        };\n        /**\n         *\n         * @returns {Array}\n         * @private\n         */\n        PluginManager.prototype.getPreProcessors = function () {\n            var preProcessors = [];\n            for (var i = 0; i < this.preProcessors.length; i++) {\n                preProcessors.push(this.preProcessors[i].preProcessor);\n            }\n            return preProcessors;\n        };\n        /**\n         *\n         * @returns {Array}\n         * @private\n         */\n        PluginManager.prototype.getPostProcessors = function () {\n            var postProcessors = [];\n            for (var i = 0; i < this.postProcessors.length; i++) {\n                postProcessors.push(this.postProcessors[i].postProcessor);\n            }\n            return postProcessors;\n        };\n        /**\n         *\n         * @returns {Array}\n         * @private\n         */\n        PluginManager.prototype.getVisitors = function () {\n            return this.visitors;\n        };\n        PluginManager.prototype.visitor = function () {\n            var self = this;\n            return {\n                first: function () {\n                    self.iterator = -1;\n                    return self.visitors[self.iterator];\n                },\n                get: function () {\n                    self.iterator += 1;\n                    return self.visitors[self.iterator];\n                }\n            };\n        };\n        /**\n         *\n         * @returns {Array}\n         * @private\n         */\n        PluginManager.prototype.getFileManagers = function () {\n            return this.fileManagers;\n        };\n        return PluginManager;\n    }());\n    var pm;\n    var PluginManagerFactory = function (less, newFactory) {\n        if (newFactory || !pm) {\n            pm = new PluginManager(less);\n        }\n        return pm;\n    };\n\n    function SourceMapOutput (environment) {\n        var SourceMapOutput = /** @class */ (function () {\n            function SourceMapOutput(options) {\n                this._css = [];\n                this._rootNode = options.rootNode;\n                this._contentsMap = options.contentsMap;\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n                if (options.sourceMapFilename) {\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n                }\n                this._outputFilename = options.outputFilename;\n                this.sourceMapURL = options.sourceMapURL;\n                if (options.sourceMapBasepath) {\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n                }\n                if (options.sourceMapRootpath) {\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n                        this._sourceMapRootpath += '/';\n                    }\n                }\n                else {\n                    this._sourceMapRootpath = '';\n                }\n                this._outputSourceFiles = options.outputSourceFiles;\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n                this._lineNumber = 0;\n                this._column = 0;\n            }\n            SourceMapOutput.prototype.removeBasepath = function (path) {\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n                    path = path.substring(this._sourceMapBasepath.length);\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n                        path = path.substring(1);\n                    }\n                }\n                return path;\n            };\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\n                filename = filename.replace(/\\\\/g, '/');\n                filename = this.removeBasepath(filename);\n                return (this._sourceMapRootpath || '') + filename;\n            };\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\n                // ignore adding empty strings\n                if (!chunk) {\n                    return;\n                }\n                var lines, sourceLines, columns, sourceColumns, i;\n                if (fileInfo && fileInfo.filename) {\n                    var inputSource = this._contentsMap[fileInfo.filename];\n                    // remove vars/banner added to the top of the file\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n                        // adjust the index\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n                        if (index < 0) {\n                            index = 0;\n                        }\n                        // adjust the source\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n                    }\n                    /**\n                     * ignore empty content, or failsafe\n                     * if contents map is incorrect\n                     */\n                    if (inputSource === undefined) {\n                        this._css.push(chunk);\n                        return;\n                    }\n                    inputSource = inputSource.substring(0, index);\n                    sourceLines = inputSource.split('\\n');\n                    sourceColumns = sourceLines[sourceLines.length - 1];\n                }\n                lines = chunk.split('\\n');\n                columns = lines[lines.length - 1];\n                if (fileInfo && fileInfo.filename) {\n                    if (!mapLines) {\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\n                            original: { line: sourceLines.length, column: sourceColumns.length },\n                            source: this.normalizeFilename(fileInfo.filename) });\n                    }\n                    else {\n                        for (i = 0; i < lines.length; i++) {\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\n                                source: this.normalizeFilename(fileInfo.filename) });\n                        }\n                    }\n                }\n                if (lines.length === 1) {\n                    this._column += columns.length;\n                }\n                else {\n                    this._lineNumber += lines.length - 1;\n                    this._column = columns.length;\n                }\n                this._css.push(chunk);\n            };\n            SourceMapOutput.prototype.isEmpty = function () {\n                return this._css.length === 0;\n            };\n            SourceMapOutput.prototype.toCSS = function (context) {\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\n                if (this._outputSourceFiles) {\n                    for (var filename in this._contentsMap) {\n                        if (this._contentsMap.hasOwnProperty(filename)) {\n                            var source = this._contentsMap[filename];\n                            if (this._contentsIgnoredCharsMap[filename]) {\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                            }\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n                        }\n                    }\n                }\n                this._rootNode.genCSS(context, this);\n                if (this._css.length > 0) {\n                    var sourceMapURL = void 0;\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n                    if (this.sourceMapURL) {\n                        sourceMapURL = this.sourceMapURL;\n                    }\n                    else if (this._sourceMapFilename) {\n                        sourceMapURL = this._sourceMapFilename;\n                    }\n                    this.sourceMapURL = sourceMapURL;\n                    this.sourceMap = sourceMapContent;\n                }\n                return this._css.join('');\n            };\n            return SourceMapOutput;\n        }());\n        return SourceMapOutput;\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\n        var SourceMapBuilder = /** @class */ (function () {\n            function SourceMapBuilder(options) {\n                this.options = options;\n            }\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\n                var sourceMapOutput = new SourceMapOutput({\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                    rootNode: rootNode,\n                    contentsMap: imports.contents,\n                    sourceMapFilename: this.options.sourceMapFilename,\n                    sourceMapURL: this.options.sourceMapURL,\n                    outputFilename: this.options.sourceMapOutputFilename,\n                    sourceMapBasepath: this.options.sourceMapBasepath,\n                    sourceMapRootpath: this.options.sourceMapRootpath,\n                    outputSourceFiles: this.options.outputSourceFiles,\n                    sourceMapGenerator: this.options.sourceMapGenerator,\n                    sourceMapFileInline: this.options.sourceMapFileInline,\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\n                });\n                var css = sourceMapOutput.toCSS(options);\n                this.sourceMap = sourceMapOutput.sourceMap;\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\n                if (this.options.sourceMapInputFilename) {\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n                }\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n                }\n                return css + this.getCSSAppendage();\n            };\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\n                var sourceMapURL = this.sourceMapURL;\n                if (this.options.sourceMapFileInline) {\n                    if (this.sourceMap === undefined) {\n                        return '';\n                    }\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\n                }\n                if (this.options.disableSourcemapAnnotation) {\n                    return '';\n                }\n                if (sourceMapURL) {\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\n                }\n                return '';\n            };\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\n                return this.sourceMap;\n            };\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\n                this.sourceMap = sourceMap;\n            };\n            SourceMapBuilder.prototype.isInline = function () {\n                return this.options.sourceMapFileInline;\n            };\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\n                return this.sourceMapURL;\n            };\n            SourceMapBuilder.prototype.getOutputFilename = function () {\n                return this.options.sourceMapOutputFilename;\n            };\n            SourceMapBuilder.prototype.getInputFilename = function () {\n                return this.sourceMapInputFilename;\n            };\n            return SourceMapBuilder;\n        }());\n        return SourceMapBuilder;\n    }\n\n    function ParseTree (SourceMapBuilder) {\n        var ParseTree = /** @class */ (function () {\n            function ParseTree(root, imports) {\n                this.root = root;\n                this.imports = imports;\n            }\n            ParseTree.prototype.toCSS = function (options) {\n                var evaldRoot;\n                var result = {};\n                var sourceMapBuilder;\n                try {\n                    evaldRoot = transformTree(this.root, options);\n                }\n                catch (e) {\n                    throw new LessError(e, this.imports);\n                }\n                try {\n                    var compress = Boolean(options.compress);\n                    if (compress) {\n                        logger$1.warn('The compress option has been deprecated. ' +\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\n                    }\n                    var toCSSOptions = {\n                        compress: compress,\n                        dumpLineNumbers: options.dumpLineNumbers,\n                        strictUnits: Boolean(options.strictUnits),\n                        numPrecision: 8\n                    };\n                    if (options.sourceMap) {\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n                    }\n                    else {\n                        result.css = evaldRoot.toCSS(toCSSOptions);\n                    }\n                }\n                catch (e) {\n                    throw new LessError(e, this.imports);\n                }\n                if (options.pluginManager) {\n                    var postProcessors = options.pluginManager.getPostProcessors();\n                    for (var i = 0; i < postProcessors.length; i++) {\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\n                    }\n                }\n                if (options.sourceMap) {\n                    result.map = sourceMapBuilder.getExternalSourceMap();\n                }\n                result.imports = [];\n                for (var file in this.imports.files) {\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n                        result.imports.push(file);\n                    }\n                }\n                return result;\n            };\n            return ParseTree;\n        }());\n        return ParseTree;\n    }\n\n    function ImportManager (environment) {\n        // FileInfo = {\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\n        //  'filename' - full resolved filename of current file\n        //  'rootpath' - path to append to normal URLs for this node\n        //  'currentDirectory' - path to the current file, absolute\n        //  'rootFilename' - filename of the base file\n        //  'entryPath' - absolute path to the entry file\n        //  'reference' - whether the file should not be output and only output parts that are referenced\n        var ImportManager = /** @class */ (function () {\n            function ImportManager(less, context, rootFileInfo) {\n                this.less = less;\n                this.rootFilename = rootFileInfo.filename;\n                this.paths = context.paths || []; // Search paths, when importing\n                this.contents = {}; // map - filename to contents of all the files\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n                this.mime = context.mime;\n                this.error = null;\n                this.context = context;\n                // Deprecated? Unused outside of here, could be useful.\n                this.queue = []; // Files which haven't been imported yet\n                this.files = {}; // Holds the imported parse trees.\n            }\n            /**\n             * Add an import to be imported\n             * @param path - the raw path\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n             * @param importOptions - import options\n             * @param callback - callback for when it is imported\n             */\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\n                this.queue.push(path);\n                var fileParsedFunc = function (e, root, fullPath) {\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\n                    if (importOptions.optional && e) {\n                        callback(null, { rules: [] }, false, null);\n                        logger$1.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\n                    }\n                    else {\n                        // Inline imports aren't cached here.\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n                        // same name as they used to do before this comment and the condition below have been added.\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\n                            importManager.files[fullPath] = { root: root, options: importOptions };\n                        }\n                        if (e && !importManager.error) {\n                            importManager.error = e;\n                        }\n                        callback(e, root, importedEqualsRoot, fullPath);\n                    }\n                };\n                var newFileInfo = {\n                    rewriteUrls: this.context.rewriteUrls,\n                    entryPath: currentFileInfo.entryPath,\n                    rootpath: currentFileInfo.rootpath,\n                    rootFilename: currentFileInfo.rootFilename\n                };\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n                if (!fileManager) {\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\n                    return;\n                }\n                var loadFileCallback = function (loadedFile) {\n                    var plugin;\n                    var resolvedFilename = loadedFile.filename;\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\n                    // Pass on an updated rootpath if path of imported file is relative and file\n                    // is in a (sub|sup) directory\n                    //\n                    // Examples:\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n                    //   then rootpath should become 'less/module/nav/'\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n                    //   then rootpath should become 'less/../'\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n                    if (newFileInfo.rewriteUrls) {\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n                        }\n                    }\n                    newFileInfo.filename = resolvedFilename;\n                    var newEnv = new contexts.Parse(importManager.context);\n                    newEnv.processImports = false;\n                    importManager.contents[resolvedFilename] = contents;\n                    if (currentFileInfo.reference || importOptions.reference) {\n                        newFileInfo.reference = true;\n                    }\n                    if (importOptions.isPlugin) {\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n                        if (plugin instanceof LessError) {\n                            fileParsedFunc(plugin, null, resolvedFilename);\n                        }\n                        else {\n                            fileParsedFunc(null, plugin, resolvedFilename);\n                        }\n                    }\n                    else if (importOptions.inline) {\n                        fileParsedFunc(null, contents, resolvedFilename);\n                    }\n                    else {\n                        // import (multiple) parse trees apparently get altered and can't be cached.\n                        // TODO: investigate why this is\n                        if (importManager.files[resolvedFilename]\n                            && !importManager.files[resolvedFilename].options.multiple\n                            && !importOptions.multiple) {\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n                        }\n                        else {\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                                fileParsedFunc(e, root, resolvedFilename);\n                            });\n                        }\n                    }\n                };\n                var loadedFile;\n                var promise;\n                var context = clone(this.context);\n                if (tryAppendExtension) {\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\n                }\n                if (importOptions.isPlugin) {\n                    context.mime = 'application/javascript';\n                    if (context.syncImport) {\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n                    }\n                    else {\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n                    }\n                }\n                else {\n                    if (context.syncImport) {\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\n                    }\n                    else {\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\n                            if (err) {\n                                fileParsedFunc(err);\n                            }\n                            else {\n                                loadFileCallback(loadedFile);\n                            }\n                        });\n                    }\n                }\n                if (loadedFile) {\n                    if (!loadedFile.filename) {\n                        fileParsedFunc(loadedFile);\n                    }\n                    else {\n                        loadFileCallback(loadedFile);\n                    }\n                }\n                else if (promise) {\n                    promise.then(loadFileCallback, fileParsedFunc);\n                }\n            };\n            return ImportManager;\n        }());\n        return ImportManager;\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\n        var parse = function (input, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = copyOptions(this.options, {});\n            }\n            else {\n                options = copyOptions(this.options, options || {});\n            }\n            if (!callback) {\n                var self_1 = this;\n                return new Promise(function (resolve, reject) {\n                    parse.call(self_1, input, options, function (err, output) {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve(output);\n                        }\n                    });\n                });\n            }\n            else {\n                var context_1;\n                var rootFileInfo = void 0;\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\n                options.pluginManager = pluginManager_1;\n                context_1 = new contexts.Parse(options);\n                if (options.rootFileInfo) {\n                    rootFileInfo = options.rootFileInfo;\n                }\n                else {\n                    var filename = options.filename || 'input';\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\n                    rootFileInfo = {\n                        filename: filename,\n                        rewriteUrls: context_1.rewriteUrls,\n                        rootpath: context_1.rootpath || '',\n                        currentDirectory: entryPath,\n                        entryPath: entryPath,\n                        rootFilename: filename\n                    };\n                    // add in a missing trailing slash\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\n                        rootFileInfo.rootpath += '/';\n                    }\n                }\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\n                this.importManager = imports_1;\n                // TODO: allow the plugins to be just a list of paths or names\n                // Do an async plugin queue like lessc\n                if (options.plugins) {\n                    options.plugins.forEach(function (plugin) {\n                        var evalResult, contents;\n                        if (plugin.fileContent) {\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\n                            if (evalResult instanceof LessError) {\n                                return callback(evalResult);\n                            }\n                        }\n                        else {\n                            pluginManager_1.addPlugin(plugin);\n                        }\n                    });\n                }\n                new Parser(context_1, imports_1, rootFileInfo)\n                    .parse(input, function (e, root) {\n                    if (e) {\n                        return callback(e);\n                    }\n                    callback(null, root, imports_1, options);\n                }, options);\n            }\n        };\n        return parse;\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\n        var render = function (input, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = copyOptions(this.options, {});\n            }\n            else {\n                options = copyOptions(this.options, options || {});\n            }\n            if (!callback) {\n                var self_1 = this;\n                return new Promise(function (resolve, reject) {\n                    render.call(self_1, input, options, function (err, output) {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve(output);\n                        }\n                    });\n                });\n            }\n            else {\n                this.parse(input, options, function (err, root, imports, options) {\n                    if (err) {\n                        return callback(err);\n                    }\n                    var result;\n                    try {\n                        var parseTree = new ParseTree(root, imports);\n                        result = parseTree.toCSS(options);\n                    }\n                    catch (err) {\n                        return callback(err);\n                    }\n                    callback(null, result);\n                });\n            }\n        };\n        return render;\n    }\n\n    var version = \"4.1.2\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\n        environment = new Environment(environment, fileManagers);\n        sourceMapOutput = SourceMapOutput(environment);\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\n        parseTree = ParseTree(sourceMapBuilder);\n        importManager = ImportManager(environment);\n        var render = Render(environment, parseTree);\n        var parse = Parse(environment, parseTree, importManager);\n        var v = parseNodeVersion_1(\"v\" + version);\n        var initial = {\n            version: [v.major, v.minor, v.patch],\n            data: data,\n            tree: tree,\n            Environment: Environment,\n            AbstractFileManager: AbstractFileManager,\n            AbstractPluginLoader: AbstractPluginLoader,\n            environment: environment,\n            visitors: visitors,\n            Parser: Parser,\n            functions: functions(environment),\n            contexts: contexts,\n            SourceMapOutput: sourceMapOutput,\n            SourceMapBuilder: sourceMapBuilder,\n            ParseTree: parseTree,\n            ImportManager: importManager,\n            render: render,\n            parse: parse,\n            LessError: LessError,\n            transformTree: transformTree,\n            utils: utils,\n            PluginManager: PluginManagerFactory,\n            logger: logger$1\n        };\n        // Create a public API\n        var ctor = function (t) {\n            return function () {\n                var obj = Object.create(t.prototype);\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\n                return obj;\n            };\n        };\n        var t;\n        var api = Object.create(initial);\n        for (var n in initial.tree) {\n            /* eslint guard-for-in: 0 */\n            t = initial.tree[n];\n            if (typeof t === 'function') {\n                api[n.toLowerCase()] = ctor(t);\n            }\n            else {\n                api[n] = Object.create(null);\n                for (var o in t) {\n                    /* eslint guard-for-in: 0 */\n                    api[n][o.toLowerCase()] = ctor(t[o]);\n                }\n            }\n        }\n        /**\n         * Some of the functions assume a `this` context of the API object,\n         * which causes it to fail when wrapped for ES6 imports.\n         *\n         * An assumed `this` should be removed in the future.\n         */\n        initial.parse = initial.parse.bind(api);\n        initial.render = initial.render.bind(api);\n        return api;\n    }\n\n    /* global window, XMLHttpRequest */\n    var options$1;\n    var logger;\n    var fileCache = {};\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n    var FileManager = function () { };\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\n        alwaysMakePathsAbsolute: function () {\n            return true;\n        },\n        join: function (basePath, laterPath) {\n            if (!basePath) {\n                return laterPath;\n            }\n            return this.extractUrlParts(laterPath, basePath).path;\n        },\n        doXHR: function (url, type, callback, errback) {\n            var xhr = new XMLHttpRequest();\n            var async = options$1.isFileProtocol ? options$1.fileAsync : true;\n            if (typeof xhr.overrideMimeType === 'function') {\n                xhr.overrideMimeType('text/css');\n            }\n            logger.debug(\"XHR: Getting '\" + url + \"'\");\n            xhr.open('GET', url, async);\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n            xhr.send(null);\n            function handleResponse(xhr, callback, errback) {\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\n                }\n                else if (typeof errback === 'function') {\n                    errback(xhr.status, url);\n                }\n            }\n            if (options$1.isFileProtocol && !options$1.fileAsync) {\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\n                    callback(xhr.responseText);\n                }\n                else {\n                    errback(xhr.status, url);\n                }\n            }\n            else if (async) {\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == 4) {\n                        handleResponse(xhr, callback, errback);\n                    }\n                };\n            }\n            else {\n                handleResponse(xhr, callback, errback);\n            }\n        },\n        supports: function () {\n            return true;\n        },\n        clearFileCache: function () {\n            fileCache = {};\n        },\n        loadFile: function (filename, currentDirectory, options, environment) {\n            // TODO: Add prefix support like less-node?\n            // What about multiple paths?\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\n                filename = currentDirectory + filename;\n            }\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n            options = options || {};\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\n            // some context variables for imports\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\n            var href = hrefParts.url;\n            var self = this;\n            return new Promise(function (resolve, reject) {\n                if (options.useFileCache && fileCache[href]) {\n                    try {\n                        var lessText = fileCache[href];\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\n                    }\n                    catch (e) {\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\n                    }\n                }\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n                    // per file cache\n                    fileCache[href] = data;\n                    // Use remote copy (re-parse)\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\n                }, function doXHRError(status, url) {\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\n                });\n            });\n        }\n    });\n    var FM = (function (opts, log) {\n        options$1 = opts;\n        logger = log;\n        return FileManager;\n    });\n\n    // TODO: Add tests for browser @plugin\n    /**\n     * Browser Plugin Loader\n     */\n    var PluginLoader = function (less) {\n        this.less = less;\n        // Should we shim this.require for browser? Probably not?\n    };\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\n            return new Promise(function (fulfill, reject) {\n                fileManager.loadFile(filename, basePath, context, environment)\n                    .then(fulfill).catch(reject);\n            });\n        }\n    });\n\n    var LogListener = (function (less, options) {\n        var logLevel_debug = 4;\n        var logLevel_info = 3;\n        var logLevel_warn = 2;\n        var logLevel_error = 1;\n        // The amount of logging in the javascript console.\n        // 3 - Debug, information and errors\n        // 2 - Information and errors\n        // 1 - Errors\n        // 0 - None\n        // Defaults to 2\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\n        if (!options.loggers) {\n            options.loggers = [{\n                    debug: function (msg) {\n                        if (options.logLevel >= logLevel_debug) {\n                            console.log(msg);\n                        }\n                    },\n                    info: function (msg) {\n                        if (options.logLevel >= logLevel_info) {\n                            console.log(msg);\n                        }\n                    },\n                    warn: function (msg) {\n                        if (options.logLevel >= logLevel_warn) {\n                            console.warn(msg);\n                        }\n                    },\n                    error: function (msg) {\n                        if (options.logLevel >= logLevel_error) {\n                            console.error(msg);\n                        }\n                    }\n                }];\n        }\n        for (var i = 0; i < options.loggers.length; i++) {\n            less.logger.addListener(options.loggers[i]);\n        }\n    });\n\n    var ErrorReporting = (function (window, less, options) {\n        function errorHTML(e, rootHref) {\n            var id = \"less-error-message:\" + extractId(rootHref || '');\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n            var elem = window.document.createElement('div');\n            var timer;\n            var content;\n            var errors = [];\n            var filename = e.filename || rootHref;\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n            elem.id = id;\n            elem.className = 'less-error-message';\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\n            var errorline = function (e, i, classname) {\n                if (e.extract[i] !== undefined) {\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                        .replace(/\\{class\\}/, classname)\n                        .replace(/\\{content\\}/, e.extract[i]));\n                }\n            };\n            if (e.line) {\n                errorline(e, 0, '');\n                errorline(e, 1, 'line');\n                errorline(e, 2, '');\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\n            }\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\n            }\n            elem.innerHTML = content;\n            // CSS for error messages\n            browser.createCSS(window.document, [\n                '.less-error-message ul, .less-error-message li {',\n                'list-style-type: none;',\n                'margin-right: 15px;',\n                'padding: 4px 0;',\n                'margin: 0;',\n                '}',\n                '.less-error-message label {',\n                'font-size: 12px;',\n                'margin-right: 15px;',\n                'padding: 4px 0;',\n                'color: #cc7777;',\n                '}',\n                '.less-error-message pre {',\n                'color: #dd6666;',\n                'padding: 4px 0;',\n                'margin: 0;',\n                'display: inline-block;',\n                '}',\n                '.less-error-message pre.line {',\n                'color: #ff0000;',\n                '}',\n                '.less-error-message h3 {',\n                'font-size: 20px;',\n                'font-weight: bold;',\n                'padding: 15px 0 5px 0;',\n                'margin: 0;',\n                '}',\n                '.less-error-message a {',\n                'color: #10a',\n                '}',\n                '.less-error-message .error {',\n                'color: red;',\n                'font-weight: bold;',\n                'padding-bottom: 2px;',\n                'border-bottom: 1px dashed red;',\n                '}'\n            ].join('\\n'), { title: 'error-message' });\n            elem.style.cssText = [\n                'font-family: Arial, sans-serif',\n                'border: 1px solid #e00',\n                'background-color: #eee',\n                'border-radius: 5px',\n                '-webkit-border-radius: 5px',\n                '-moz-border-radius: 5px',\n                'color: #e00',\n                'padding: 15px',\n                'margin-bottom: 15px'\n            ].join(';');\n            if (options.env === 'development') {\n                timer = setInterval(function () {\n                    var document = window.document;\n                    var body = document.body;\n                    if (body) {\n                        if (document.getElementById(id)) {\n                            body.replaceChild(elem, document.getElementById(id));\n                        }\n                        else {\n                            body.insertBefore(elem, body.firstChild);\n                        }\n                        clearInterval(timer);\n                    }\n                }, 10);\n            }\n        }\n        function removeErrorHTML(path) {\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\n            if (node) {\n                node.parentNode.removeChild(node);\n            }\n        }\n        function removeError(path) {\n            if (!options.errorReporting || options.errorReporting === 'html') {\n                removeErrorHTML(path);\n            }\n            else if (options.errorReporting === 'console') ;\n            else if (typeof options.errorReporting === 'function') {\n                options.errorReporting('remove', path);\n            }\n        }\n        function errorConsole(e, rootHref) {\n            var template = '{line} {content}';\n            var filename = e.filename || rootHref;\n            var errors = [];\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\n            var errorline = function (e, i, classname) {\n                if (e.extract[i] !== undefined) {\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                        .replace(/\\{class\\}/, classname)\n                        .replace(/\\{content\\}/, e.extract[i]));\n                }\n            };\n            if (e.line) {\n                errorline(e, 0, '');\n                errorline(e, 1, 'line');\n                errorline(e, 2, '');\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\n            }\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\n                content += \"\\nStack Trace\\n\" + e.stack;\n            }\n            less.logger.error(content);\n        }\n        function error(e, rootHref) {\n            if (!options.errorReporting || options.errorReporting === 'html') {\n                errorHTML(e, rootHref);\n            }\n            else if (options.errorReporting === 'console') {\n                errorConsole(e, rootHref);\n            }\n            else if (typeof options.errorReporting === 'function') {\n                options.errorReporting('add', e, rootHref);\n            }\n        }\n        return {\n            add: error,\n            remove: removeError\n        };\n    });\n\n    // Cache system is a bit outdated and could do with work\n    var Cache = (function (window, options, logger) {\n        var cache = null;\n        if (options.env !== 'development') {\n            try {\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\n            }\n            catch (_) { }\n        }\n        return {\n            setCSS: function (path, lastModified, modifyVars, styles) {\n                if (cache) {\n                    logger.info(\"saving \" + path + \" to cache.\");\n                    try {\n                        cache.setItem(path, styles);\n                        cache.setItem(path + \":timestamp\", lastModified);\n                        if (modifyVars) {\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\n                        }\n                    }\n                    catch (e) {\n                        // TODO - could do with adding more robust error handling\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\n                    }\n                }\n            },\n            getCSS: function (path, webInfo, modifyVars) {\n                var css = cache && cache.getItem(path);\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\n                var vars = cache && cache.getItem(path + \":vars\");\n                modifyVars = modifyVars || {};\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\n                if (timestamp && webInfo.lastModified &&\n                    (new Date(webInfo.lastModified).valueOf() ===\n                        new Date(timestamp).valueOf()) &&\n                    JSON.stringify(modifyVars) === vars) {\n                    // Use local copy\n                    return css;\n                }\n            }\n        };\n    });\n\n    var ImageSize = (function () {\n        function imageSize() {\n            throw {\n                type: 'Runtime',\n                message: 'Image size functions are not supported in browser version of less'\n            };\n        }\n        var imageFunctions = {\n            'image-size': function (filePathNode) {\n                imageSize();\n                return -1;\n            },\n            'image-width': function (filePathNode) {\n                imageSize();\n                return -1;\n            },\n            'image-height': function (filePathNode) {\n                imageSize();\n                return -1;\n            }\n        };\n        functionRegistry.addMultiple(imageFunctions);\n    });\n\n    //\n    var root = (function (window, options) {\n        var document = window.document;\n        var less = lessRoot();\n        less.options = options;\n        var environment = less.environment;\n        var FileManager = FM(options, less.logger);\n        var fileManager = new FileManager();\n        environment.addFileManager(fileManager);\n        less.FileManager = FileManager;\n        less.PluginLoader = PluginLoader;\n        LogListener(less, options);\n        var errors = ErrorReporting(window, less, options);\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\n        ImageSize(less.environment);\n        // Setup user functions - Deprecate?\n        if (options.functions) {\n            less.functions.functionRegistry.addMultiple(options.functions);\n        }\n        var typePattern = /^text\\/(x-)?less$/;\n        function clone(obj) {\n            var cloned = {};\n            for (var prop in obj) {\n                if (obj.hasOwnProperty(prop)) {\n                    cloned[prop] = obj[prop];\n                }\n            }\n            return cloned;\n        }\n        // only really needed for phantom\n        function bind(func, thisArg) {\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\n            return function () {\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n                return func.apply(thisArg, args);\n            };\n        }\n        function loadStyles(modifyVars) {\n            var styles = document.getElementsByTagName('style');\n            var style;\n            for (var i = 0; i < styles.length; i++) {\n                style = styles[i];\n                if (style.type.match(typePattern)) {\n                    var instanceOptions = clone(options);\n                    instanceOptions.modifyVars = modifyVars;\n                    var lessText = style.innerHTML || '';\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n                    /* jshint loopfunc:true */\n                    // use closure to store current style\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\n                        if (e) {\n                            errors.add(e, 'inline');\n                        }\n                        else {\n                            style.type = 'text/css';\n                            if (style.styleSheet) {\n                                style.styleSheet.cssText = result.css;\n                            }\n                            else {\n                                style.innerHTML = result.css;\n                            }\n                        }\n                    }, null, style));\n                }\n            }\n        }\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n            var instanceOptions = clone(options);\n            addDataAttr(instanceOptions, sheet);\n            instanceOptions.mime = sheet.type;\n            if (modifyVars) {\n                instanceOptions.modifyVars = modifyVars;\n            }\n            function loadInitialFileCallback(loadedFile) {\n                var data = loadedFile.contents;\n                var path = loadedFile.filename;\n                var webInfo = loadedFile.webInfo;\n                var newFileInfo = {\n                    currentDirectory: fileManager.getPath(path),\n                    filename: path,\n                    rootFilename: path,\n                    rewriteUrls: instanceOptions.rewriteUrls\n                };\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n                if (webInfo) {\n                    webInfo.remaining = remaining;\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n                    if (!reload && css) {\n                        webInfo.local = true;\n                        callback(null, css, data, sheet, webInfo, path);\n                        return;\n                    }\n                }\n                // TODO add tests around how this behaves when reloading\n                errors.remove(path);\n                instanceOptions.rootFileInfo = newFileInfo;\n                less.render(data, instanceOptions, function (e, result) {\n                    if (e) {\n                        e.href = path;\n                        callback(e);\n                    }\n                    else {\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n                        callback(null, result.css, data, sheet, webInfo, path);\n                    }\n                });\n            }\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\n                .then(function (loadedFile) {\n                loadInitialFileCallback(loadedFile);\n            }).catch(function (err) {\n                console.log(err);\n                callback(err);\n            });\n        }\n        function loadStyleSheets(callback, reload, modifyVars) {\n            for (var i = 0; i < less.sheets.length; i++) {\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n            }\n        }\n        function initRunningMode() {\n            if (less.env === 'development') {\n                less.watchTimer = setInterval(function () {\n                    if (less.watchMode) {\n                        fileManager.clearFileCache();\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                            if (e) {\n                                errors.add(e, e.href || sheet.href);\n                            }\n                            else if (css) {\n                                browser.createCSS(window.document, css, sheet);\n                            }\n                        });\n                    }\n                }, options.poll);\n            }\n        }\n        //\n        // Watch mode\n        //\n        less.watch = function () {\n            if (!less.watchMode) {\n                less.env = 'development';\n                initRunningMode();\n            }\n            this.watchMode = true;\n            return true;\n        };\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\n        //\n        // Synchronously get all <link> tags with the 'rel' attribute set to\n        // \"stylesheet/less\".\n        //\n        less.registerStylesheetsImmediately = function () {\n            var links = document.getElementsByTagName('link');\n            less.sheets = [];\n            for (var i = 0; i < links.length; i++) {\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\n                    (links[i].type.match(typePattern)))) {\n                    less.sheets.push(links[i]);\n                }\n            }\n        };\n        //\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\n        // \"stylesheet/less\", returning a Promise.\n        //\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\n            less.registerStylesheetsImmediately();\n            resolve();\n        }); };\n        //\n        // With this function, it's possible to alter variables and re-render\n        // CSS without reloading less-files\n        //\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\n        less.refresh = function (reload, modifyVars, clearFileCache) {\n            if ((reload || clearFileCache) && clearFileCache !== false) {\n                fileManager.clearFileCache();\n            }\n            return new Promise(function (resolve, reject) {\n                var startTime;\n                var endTime;\n                var totalMilliseconds;\n                var remainingSheets;\n                startTime = endTime = new Date();\n                // Set counter for remaining unprocessed sheets\n                remainingSheets = less.sheets.length;\n                if (remainingSheets === 0) {\n                    endTime = new Date();\n                    totalMilliseconds = endTime - startTime;\n                    less.logger.info('Less has finished and no sheets were loaded.');\n                    resolve({\n                        startTime: startTime,\n                        endTime: endTime,\n                        totalMilliseconds: totalMilliseconds,\n                        sheets: less.sheets.length\n                    });\n                }\n                else {\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                        if (e) {\n                            errors.add(e, e.href || sheet.href);\n                            reject(e);\n                            return;\n                        }\n                        if (webInfo.local) {\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\n                        }\n                        else {\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\n                        }\n                        browser.createCSS(window.document, css, sheet);\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\n                        // Count completed sheet\n                        remainingSheets--;\n                        // Check if the last remaining sheet was processed and then call the promise\n                        if (remainingSheets === 0) {\n                            totalMilliseconds = new Date() - startTime;\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\n                            resolve({\n                                startTime: startTime,\n                                endTime: endTime,\n                                totalMilliseconds: totalMilliseconds,\n                                sheets: less.sheets.length\n                            });\n                        }\n                        endTime = new Date();\n                    }, reload, modifyVars);\n                }\n                loadStyles(modifyVars);\n            });\n        };\n        less.refreshStyles = loadStyles;\n        return less;\n    });\n\n    /**\n     * Kicks off less and compiles any stylesheets\n     * used in the browser distributed version of less\n     * to kick-start less using the browser api\n     */\n    var options = defaultOptions();\n    if (window.less) {\n        for (var key in window.less) {\n            if (window.less.hasOwnProperty(key)) {\n                options[key] = window.less[key];\n            }\n        }\n    }\n    addDefaultOptions(window, options);\n    options.plugins = options.plugins || [];\n    if (window.LESS_PLUGINS) {\n        options.plugins = options.plugins.concat(window.LESS_PLUGINS);\n    }\n    var less = root(window, options);\n    window.less = less;\n    var css;\n    var head;\n    var style;\n    // Always restore page visibility\n    function resolveOrReject(data) {\n        if (data.filename) {\n            console.warn(data);\n        }\n        if (!options.async) {\n            head.removeChild(style);\n        }\n    }\n    if (options.onReady) {\n        if (/!watch/.test(window.location.hash)) {\n            less.watch();\n        }\n        // Simulate synchronous stylesheet loading by hiding page rendering\n        if (!options.async) {\n            css = 'body { display: none !important }';\n            head = document.head || document.getElementsByTagName('head')[0];\n            style = document.createElement('style');\n            style.type = 'text/css';\n            if (style.styleSheet) {\n                style.styleSheet.cssText = css;\n            }\n            else {\n                style.appendChild(document.createTextNode(css));\n            }\n            head.appendChild(style);\n        }\n        less.registerStylesheetsImmediately();\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n    }\n\n    return less;\n\n})));\n"],"names":["global","factory","exports","module","define","amd","globalThis","self","less","this","extractId","href","replace","addDataAttr","options","tag","opt","dataset","hasOwnProperty","JSON","parse","_","browser","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","window","scripts","currentScript","logger$1","error","msg","_fireEvent","warn","info","debug","addListener","listener","_listeners","push","removeListener","i","splice","type","logFunction","Environment1","Environment","externalEnvironment","fileManagers","requiredFunctions","functions","concat","propName","environmentFunc","bind","prototype","getFileManager","filename","currentDirectory","environment","isSync","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","unitConversions","m","cm","mm","in","px","pt","pc","duration","s","ms","angle","rad","Math","PI","deg","grad","turn","data1","Node1","Node","parent","visibilityBlocks","undefined","nodeVisible","rootNode","parsed","Object","defineProperty","get","fileInfo","enumerable","configurable","getIndex","setParent","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","join","output","value","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","match","map","c","parseInt","alpha","split","clamp$1","v","max","min","toHex","round","toString","assign","luma","r","g","pow","doNotCompress","color","colorFunction","compress","args","indexOf","toHSL","h","l","toRGB","splitcolor","operate","other","d","toHSV","toARGB","x","fromKeyword","keyword","key","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","getType","payload","call","copy1","target","constructor","getPrototypeOf","il","arguments","k","j","jl","__spreadArrays","getOwnPropertyNames","getOwnPropertySymbols","reduce","carry","props","includes","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","writable","assignProp","nonenumerable","getLocation","inputStream","n","line","column","copyArray","arr","copy","clone1","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","math","relativeUrls","rewriteUrls","flattenArray","result","length_1","utils","freeze","__proto__","merge","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","create","F","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH$1","Declaration","name","important","inline","variable","lastRule","prevMath","evaldValue","mathBypass","evalName","importantScope","importantResult","pop","makeImportant","debugInfo1","debugInfo","ctx","lineSeparator","dumpLineNumbers","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","test","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","isPathRelative","path","isPathLocalRelative","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","rewritePath","rootpath","newPath","normalizePath","segment","segments","reverse","functionRegistry1","makeRegistry","base1","_data","addMultiple","_this","keys","getLocalFunctions","inherit","base","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","strictImports","_lookups","_variables","_properties","isRuleset","selCnt","selector","i1","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","functionRegistry","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","hash","vars","name_1","properties","name_2","decl","parseValue","property","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","prependRule","find","foundMixins","debugInfo$1","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","paths1","context1","selector1","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","element","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","deriveSelector","deriveFrom","i2","newPaths","hadParentSelector1","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","maybeSelector","hadParentSelector","nestedSelector","replaced","nestedPaths","replacedNewSelectors","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","strictUnits","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH","Operation","operands","isSpaced","Expression","noSpacing","returnValue","parens","doubleParen","parensInOp","throwAwayComments","functionCaller1","functionCaller","isValid","evalArgs","commentFilter","item","subNodes","to","from","pack","ar","__spreadArray","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","containsVariables","that","value1","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","val","isEvald","urlArgs","Media","features","evalTop","evalNested","multiMedia","path1","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","javascriptEnabled","jsify","toJS","e1","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","arity","optionalParameters","required","p","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin1","mixinPath1","argValue","f2","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","calcDefGroup","mixin","mixinPath","f","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","AbstractFileManager1","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader1","AbstractPluginLoader","require","evalPlugin","pluginOptions","pluginObj","localModule","shortname","FileManager","trySetOptions","use","loader","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor1","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer1","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor1","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor1","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor1","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","replacementSelector","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor1","JoinSelectorVisitor","CSSVisitorUtils1","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","atRuleNode1","nodeRules","hasFakeRuleset","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","getParserInput","furthest","furthestPossibleErrorMessage","chunks","current","currentPos","saveStack","parserInput","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","charCodeAt","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","exec","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","len1","level","parenLevel","emitFrom","emitChunk","force","fromCharCode","chunker","end","furthestReachedEnd","furthestChar","Parser1","Parser","fileInfo1","parsers","error1","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","additionalData","globalVars","modifyVars","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","e2","endInfo","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","if","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","import","dir","importOptions","mediaFeatures","o","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","conditionAnd","negatedCondition","parenthesisCondition","atomicCondition","body1","me","body","tryConditionFollowedByParenthesis","delim","simpleProperty","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp","hsla","origColor","hsl","number$1","rgba","size","h1","m1_1","m2_1","hue","hsv","hsva","vs","floor","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","tint","shade","colorBlend","mode","cb","cs","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","f$1","getItemsFromNode","list1","_SELF","expr","_i","values","range","step","stepValue","list","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","sin","cos","atan","asin","acos","f1","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number","convert","pi","mod","y","percentage","string1","evaluated","encodeURI","pattern","flags","_loop_1","token","encodeURIComponent","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","functions1","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","dataUri","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager1","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","options$1","logger1","parseNodeVersion_1","major","minor","patch","pre","build","lessRoot","sourceMapOutput","sourceMapBuilder","parseTree","importManager","SourceMapBuilder","SourceMapOutput","contentsIgnoredCharsMap","contentsMap","sourceMapFilename","sourceMapURL","outputFilename","sourceMapOutputFilename","sourceMapBasepath","sourceMapRootpath","outputSourceFiles","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMap","sourceMapInputFilename","normalizeFilename","removeBasepath","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","SourceMapBuilder1","_css","_rootNode","_contentsMap","_contentsIgnoredCharsMap","_sourceMapFilename","_outputFilename","_sourceMapBasepath","_sourceMapRootpath","_outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","SourceMapOutput1","ParseTree","toCSSOptions","e3","files","rootFilename","ImportManager","rootFileInfo","mime","queue","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile1","promise","loadFileCallback","loadedFile","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","ImportManager1","t1","render","options2","self_1","Promise","resolve","reject","err1","Render","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","initial","data","logger","ctor","api","fileCache","FileManager1","doXHR","callback1","errback1","xhr1","XMLHttpRequest","async","isFileProtocol","fileAsync","handleResponse","xhr","errback","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","location","useFileCache","lessText","webInfo","lastModified","Date","fulfill","catch","ErrorReporting","rootHref","errorReporting","e5","errors","errorline","classname","logLevel","errorConsole","e4","timer","filenameNoPath","className","innerHTML","style","env","setInterval","replaceChild","clearInterval","errorHTML","remove","removeErrorHTML","options1","depends","lint","insecure","key1","protocol","poll","hostname","port","onReady","addDefaultOptions","LESS_PLUGINS","css1","head1","style1","less1","log","loggers","console","LogListener","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","Cache","imageSize","imageFunctions","ImageSize","typePattern","thisArg","curryArgs","loadStyles","style2","instanceOptions","loadStyleSheet","reload","remaining","local","loadInitialFileCallback","loadStyleSheets","sheets","watch","watchMode","watchTimer","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","root1","resolveOrReject","pageLoadFinished"],"version":3,"file":"index.ba40937a.js.map"}